import { capitalize } from "./format.js";
const ORB_FREE_NAME = "Free";
const ORB_STARTER_NAME = "Starter";
const ORB_PRO_NAME = "Pro";
const ORB_GROWTH_NAME = "Growth";
const STARTER_NAME = "Starter";
const PRO_NAME = "Pro";
const BUSINESS_NAME = "Business";
const ENTERPRISE_NAME = "Enterprise";
const OPEN_SOURCE_NAME = "Open Source";
const LEGACY_CREATE_PLAN_UI_NAME = "Legacy";
const ORB_FREE_SLUG = "free-is-free";
const ORB_STARTER_SLUG = "orb-starter";
const ORB_PRO_SLUG = "orb-pro";
const ORB_GROWTH_SLUG = "orb-growth";
const STARTER_SLUG = "starter";
const PRO_SLUG = "pro-v4";
const ENTERPRISE_TRIAL_SLUG = "enterprise-trial";
const BUSINESS_SLUG = "business-v4";
const ENTERPRISE_SLUG = "enterprise";
const OPEN_SOURCE_SLUG = "opensource";
const AGENCY_SLUG = "agency-marketing-site-benefit";
const PRO_V4_ID = "5ed6c554f0f6d000bb4dd075";
const PRO_V4_PRICE = 19;
const isOrbPlan = (account) => {
  if (!account || !account.type_slug) return false;
  return [
    ORB_FREE_SLUG,
    ORB_STARTER_SLUG,
    ORB_PRO_SLUG,
    ORB_GROWTH_SLUG
  ].includes(account.type_slug);
};
const isLegacyPlan = (account) => {
  return !isOrbPlan(account);
};
const isDeprecatedPlan = (account) => {
  if (!account || !account.type_slug) return false;
  return ![
    ORB_FREE_SLUG,
    ORB_STARTER_SLUG,
    ORB_PRO_SLUG,
    ORB_GROWTH_SLUG,
    STARTER_SLUG,
    PRO_SLUG,
    ENTERPRISE_TRIAL_SLUG,
    BUSINESS_SLUG,
    ENTERPRISE_SLUG,
    OPEN_SOURCE_SLUG,
    AGENCY_SLUG
  ].includes(account.type_slug);
};
const isPlanFree = (account) => (account == null ? void 0 : account.type_slug) === ORB_FREE_SLUG;
const isPlanStarter = (account) => (account == null ? void 0 : account.type_slug) === STARTER_SLUG;
const isPlanOpenSource = (account) => (account == null ? void 0 : account.type_slug) === OPEN_SOURCE_SLUG;
const isPlanPro = (account) => (account == null ? void 0 : account.type_slug) === PRO_SLUG;
const isPlanProTrial = (account) => !!((account == null ? void 0 : account.on_pro_trial) && (account == null ? void 0 : account.type_slug) === PRO_SLUG);
const isPlanEnterprise = (account) => (account == null ? void 0 : account.type_slug) === ENTERPRISE_SLUG;
const isPlanEnterpriseTrial = (account) => (account == null ? void 0 : account.type_slug) === ENTERPRISE_TRIAL_SLUG;
const isPlanEnterpriseLevel = (account) => isPlanEnterprise(account) || isPlanEnterpriseTrial(account);
const isPlanTrial = (account) => isPlanProTrial(account) || isPlanEnterpriseTrial(account);
const normalizeTeamPlanName = (planName) => planName == null ? void 0 : planName.toLowerCase().replace("personal", STARTER_SLUG);
const getNormalizedPlanNameFromAccount = (account) => `${normalizeTeamPlanName(account == null ? void 0 : account.type_name)}${isPlanTrial(account) ? " (free month)" : ""}`;
const getPlanTitleFromAccount = (account) => humanizePlanName(getNormalizedPlanNameFromAccount(account));
const humanizePlanName = (planName) => {
  return planName ? planName.split("_").map(capitalize).join(" ") : "";
};
export {
  AGENCY_SLUG,
  BUSINESS_NAME,
  BUSINESS_SLUG,
  ENTERPRISE_NAME,
  ENTERPRISE_SLUG,
  ENTERPRISE_TRIAL_SLUG,
  LEGACY_CREATE_PLAN_UI_NAME,
  OPEN_SOURCE_NAME,
  OPEN_SOURCE_SLUG,
  ORB_FREE_NAME,
  ORB_FREE_SLUG,
  ORB_GROWTH_NAME,
  ORB_GROWTH_SLUG,
  ORB_PRO_NAME,
  ORB_PRO_SLUG,
  ORB_STARTER_NAME,
  ORB_STARTER_SLUG,
  PRO_NAME,
  PRO_SLUG,
  PRO_V4_ID,
  PRO_V4_PRICE,
  STARTER_NAME,
  STARTER_SLUG,
  getNormalizedPlanNameFromAccount,
  getPlanTitleFromAccount,
  humanizePlanName,
  isDeprecatedPlan,
  isLegacyPlan,
  isOrbPlan,
  isPlanEnterprise,
  isPlanEnterpriseLevel,
  isPlanEnterpriseTrial,
  isPlanFree,
  isPlanOpenSource,
  isPlanPro,
  isPlanProTrial,
  isPlanStarter,
  isPlanTrial,
  normalizeTeamPlanName
};
//# sourceMappingURL=plans.js.map
