{"version":3,"file":"index.js","sources":["../../../libs/ui/src/Picture/helpers.ts","../../../libs/ui/src/Picture/Picture.tsx","../../../libs/tailwind-config/src/theme.ts","../../../libs/ui/src/Icon/helpers.ts","../../../libs/ui/src/SvgProvider/SvgProvider.tsx","../../../libs/ui/src/Icon/types.ts","../../../libs/ui/src/Icon/useSvg.ts","../../../libs/ui/src/Icon/DecorativeIcon.tsx","../../../libs/ui/src/Icon/AccessibleIcon.tsx","../../../libs/ui/src/Tooltip/TippyPlugins.tsx","../../../libs/ui/src/Tooltip/Tooltip.tsx","../../../libs/ui/src/Avatar/helpers.ts","../../../libs/ui/src/Avatar/Avatar.tsx","../../../libs/ui/src/AvatarList/AvatarList.tsx","../../../libs/ui/src/LinkProvider/index.tsx","../../../libs/ui/src/Link/Link.tsx","../../../libs/ui/src/Badge/Badge.tsx","../../../libs/ui/src/Badge/BetaBadge.tsx","../../../libs/ui/src/Badge/MainBranchBadge.tsx","../../../libs/ui/src/Badge/NewBadge.tsx","../../../libs/ui/src/Badge/PublishedPinnedBadge.tsx","../../../libs/ui/src/Badge/TrialBadge.tsx","../../../libs/ui/src/Button/styles.tsx","../../../libs/ui/src/Button/Button.tsx","../../../libs/ui/src/Button/ButtonGroup.tsx","../../../libs/ui/src/Button/ButtonIcon.tsx","../../../node_modules/react-to-text/dist/module.js","../../../libs/ui/src/HistoryProvider/index.tsx","../../../libs/ui/src/Link/helpers.tsx","../../../libs/ui/src/Dropdown/useDropdownAlignment.ts","../../../libs/ui/src/Dropdown/Dropdown.tsx","../../../libs/ui/src/Link/HTMLLink.tsx","../../../libs/ui/src/Logo/helpers.ts","../../../libs/ui/src/Logo/LogoPlaceholder.tsx","../../../libs/ui/src/Logo/Logo.tsx","../../../libs/ui/src/Navigation/Navigation.tsx","../../../libs/ui/src/Navigation/NavigationButton.tsx","../../../libs/ui/src/PlanBadge/PlanBadge.tsx","../../../libs/ui/src/storyHelpers/SnapshotContainer.tsx","../../../libs/ui/src/SupportDropdown/styles.tsx","../../../libs/ui/src/SupportDropdown/SupportDropdown.tsx","../../../libs/ui/src/UserDropdown/UserDropdown.tsx"],"sourcesContent":["const CLOUDFRONT_BUCKET_BASE_URL = 'https://d33wubrfki0l68.cloudfront.net/';\nconst SCREENSHOT_PROXY_BASE_URL = 'https://screenshot-proxy.netlify.app/';\nconst NETLIFY_IMAGE_CDN_BASE_URL = '/.netlify/images';\n\nexport type ImageFormat = 'avif' | 'gif' | 'jpg' | 'png' | 'webp';\ntype Fit = 'contain' | 'cover' | 'fill'; // default: contain\ntype Position = 'top' | 'bottom' | 'left' | 'right' | 'center'; // default: center\n\ntype ScreenshotProxyOptions = {\n  animated?: boolean;\n  cover?: boolean;\n  fit?: Fit;\n  format: ImageFormat;\n  height?: number;\n  scale?: number;\n  width: number;\n};\n\ntype ImageCDNOptions = {\n  cover?: boolean; // exists for backwards-compat with ScreenshotProxyOptions\n  fit?: Fit;\n  format: ImageFormat; // ignored; exists for backwards-compat with ScreenshotProxyOptions\n  height?: number;\n  position?: Position;\n  quality?: number; // default: 75\n  scale?: number;\n  width: number;\n  url: string;\n};\n\nconst screenshotProxyOptions = ({\n  animated,\n  cover,\n  fit,\n  format,\n  height,\n  scale = 2,\n  width,\n}: ScreenshotProxyOptions): string => {\n  // Visit https://github.com/netlify/screenshot-proxy to see available options\n  const formattedOptions = [`f_${format}`];\n\n  if ((cover || fit === 'cover') && height) {\n    formattedOptions.push('fit_cover');\n    formattedOptions.push(\n      `s_${Math.round(width * scale)}x${Math.round(height * scale)}`\n    );\n  } else {\n    formattedOptions.push(`w_${Math.round(width * scale)}`);\n  }\n\n  if (animated) {\n    formattedOptions.push('animated');\n  }\n\n  return formattedOptions.join(',');\n};\n\nconst imageCDNOptions = ({\n  fit,\n  height,\n  position,\n  quality,\n  scale = 2,\n  width,\n  url,\n}: ImageCDNOptions): string => {\n  // Visit https://github.com/netlify/screenshot-proxy to see available options\n\n  // Note: `format` is intentionally omitted!\n  // Netlify Image CDN automatically handles content negotiation\n  // to use the most efficient image format for the requesting client\n\n  return [\n    `url=${encodeURI(url)}`,\n    fit && `fit=${fit}`,\n    height && `h=${height * scale}`,\n    position && `position=${position}`,\n    quality && `q=${quality}`,\n    width && `w=${width * scale}`,\n  ]\n    .filter(Boolean)\n    .join('&');\n};\n\nconst shouldUseNetlifyImageCDN = (url: string = ''): boolean => {\n  // TODO: Add back when we can use Image CDN\n  return false;\n  // return (\n  //   typeof url !== 'string' ||\n  //   url.startsWith('/') ||\n  //   url.startsWith(CLOUDFRONT_BUCKET_BASE_URL)\n  // );\n};\n\nexport const generateImageUrl = (\n  url: string = '',\n  options: ScreenshotProxyOptions | ImageCDNOptions\n): string => {\n  // if already prefixed with the base url, simply return the url\n  if (\n    typeof url !== 'string' ||\n    url.startsWith('blob:') ||\n    url.startsWith(SCREENSHOT_PROXY_BASE_URL) ||\n    url.startsWith(NETLIFY_IMAGE_CDN_BASE_URL)\n  ) {\n    return url;\n  }\n\n  // relative paths, and our special cloudfront bucket, are supported by Netlify Image CDN\n  // see https://docs.netlify.com/image-cdn/overview/#remote-path\n  if (shouldUseNetlifyImageCDN(url)) {\n    const fit = options.cover ? 'cover' : undefined;\n    return `${NETLIFY_IMAGE_CDN_BASE_URL}?${imageCDNOptions({ url, fit, ...options })}`;\n  }\n\n  // all other requests should go through the screenshot-proxy site\n  return `${SCREENSHOT_PROXY_BASE_URL}${screenshotProxyOptions(options)}/${encodeURI(url)}`;\n};\n\nexport const getSources = ({\n  formats,\n  url,\n  options,\n}): { srcSet: string; type: string }[] => {\n  if (shouldUseNetlifyImageCDN(url)) {\n    return [];\n  }\n  return formats.map((format: ImageFormat) => {\n    return {\n      srcSet: generateImageUrl(url, { ...options, format }),\n      type: `image/${format}`,\n    };\n  });\n};\n","import { cn } from '../helpers/cn';\nimport type { ImageFormat } from './helpers';\nimport { generateImageUrl, getSources } from './helpers';\n\nexport interface PictureProps {\n  alt: string;\n  url: string;\n  width: number;\n  height: number;\n  fallbackFormat?: ImageFormat;\n  /** Supplied in priority order */\n  formats?: ImageFormat[];\n  className?: string;\n  onError?: (e) => void;\n  animated?: boolean;\n  cover?: boolean;\n  title?: string;\n}\n\nexport const Picture = ({\n  alt,\n  url,\n  width,\n  height,\n  formats = ['avif', 'webp'],\n  fallbackFormat,\n  className,\n  onError,\n  animated = false,\n  cover = false,\n  title,\n}: PictureProps) => {\n  const options = { width, height, cover, animated };\n  const sources = getSources({\n    // IPX proxy add experimental support for animated webp\n    formats: animated ? ['webp'] : formats,\n    url,\n    options,\n  });\n  const fallbackSrc = generateImageUrl(url, {\n    ...options,\n    format: fallbackFormat || animated ? 'gif' : 'png',\n  });\n\n  return (\n    <picture onError={onError} className={className}>\n      {sources.map((source, i) => (\n        <source key={`source:${i}`} {...source} />\n      ))}\n      <img\n        src={fallbackSrc}\n        alt={alt}\n        width={width}\n        height={height}\n        loading=\"lazy\"\n        className={cn('tw-align-top', cover && 'tw-h-full tw-w-full')}\n        title={title}\n      />\n    </picture>\n  );\n};\n","/**\n * Do not edit directly, this file was auto-generated.\n * Generated on Thu, 05 Sep 2024 22:04:00 GMT\n * Generated using: yarn nx run tailwind-config:buildTheme\n *\n * Use these tokens in your JavaScript when you have no other alternative, in lieu of Tailwindâ€™s resolveConfig. Prefer using Tailwind CSS classes, @apply, or theme().\n */\n\nconst tokens = {\n  'spacing.0': '0',\n  'spacing.1': '0.25rem',\n  'spacing.2': '0.5rem',\n  'spacing.3': '0.75rem',\n  'spacing.4': '1rem',\n  'spacing.5': '1.25rem',\n  'spacing.6': '1.5rem',\n  'spacing.7': '1.75rem',\n  'spacing.8': '2rem',\n  'spacing.9': '2.25rem',\n  'spacing.10': '2.5rem',\n  'spacing.11': '2.75rem',\n  'spacing.12': '3rem',\n  'spacing.14': '3.5rem',\n  'spacing.16': '4rem',\n  'spacing.20': '5rem',\n  'spacing.24': '6rem',\n  'spacing.26': '6.5rem',\n  'spacing.28': '7rem',\n  'spacing.32': '8rem',\n  'spacing.36': '9rem',\n  'spacing.40': '10rem',\n  'spacing.42': '10.5rem',\n  'spacing.44': '11rem',\n  'spacing.48': '12rem',\n  'spacing.52': '13rem',\n  'spacing.56': '14rem',\n  'spacing.60': '15rem',\n  'spacing.64': '16rem',\n  'spacing.66': '16.5rem',\n  'spacing.72': '18rem',\n  'spacing.80': '20rem',\n  'spacing.96': '24rem',\n  'spacing.106': '26.5rem',\n  'spacing.170': '42.5rem',\n  'spacing.px': '0.0625rem',\n  'spacing.0.5': '0.125rem',\n  'spacing.1.5': '0.375rem',\n  'spacing.2.5': '0.625rem',\n  'spacing.3.5': '0.875rem',\n  'spacing.card': '1.5rem',\n  'borderRadius.none': '0',\n  'borderRadius.sm': '0.375rem',\n  'borderRadius.lg': '0.5rem',\n  'borderRadius.card': '0.5rem',\n  'borderRadius.full': '624.9375rem',\n  'borderWidth.0': '0',\n  'borderWidth.2': '0.125rem',\n  'borderWidth.4': '0.25rem',\n  'borderWidth.8': '0.5rem',\n  'borderWidth.DEFAULT': '0.0625rem',\n  'fontSize.0': '0',\n  'fontSize.xs': '0.75rem',\n  'fontSize.sm': '0.875rem',\n  'fontSize.base': '1rem',\n  'fontSize.lg': '1.125rem',\n  'fontSize.xl': '1.375rem',\n  'fontSize.2xl': '2.25rem',\n  'fontSize.3xl': '4rem',\n  'fontSize.4xl': '6.5rem',\n  'fontWeight.thin': 100,\n  'fontWeight.light': 300,\n  'fontWeight.regular': 400,\n  'fontWeight.medium': 500,\n  'fontWeight.semibold': 600,\n  'fontWeight.bold': 700,\n  'fontWeight.black': 900,\n  'fontWeight.weight-inherit': 'inherit',\n  'lineHeight.3': '0.75rem',\n  'lineHeight.4': '1rem',\n  'lineHeight.5': '1.25rem',\n  'lineHeight.6': '1.5rem',\n  'lineHeight.7': '1.75rem',\n  'lineHeight.8': '2rem',\n  'lineHeight.9': '2.25rem',\n  'lineHeight.10': '2.5rem',\n  'lineHeight.none': '1',\n  'lineHeight.tight': '1.25',\n  'lineHeight.snug': '1.375',\n  'lineHeight.normal': '1.5',\n  'lineHeight.relaxed': '1.625',\n  'lineHeight.chill': '1.75',\n  'lineHeight.very-chill': '2',\n  'lineHeight.asleep': '2.25',\n  'screens.sm': '31.3125rem',\n  'screens.until-md': '45rem',\n  'screens.md': '45.0625rem',\n  'screens.until-lg': '60rem',\n  'screens.lg': '60.0625rem',\n  'screens.until-xl': '70rem',\n  'screens.xl': '70.0625rem',\n} as const;\n\n/**\n * Use in lieu of Tailwindâ€™s resolveConfig\n * @see https://tailwindcss.com/docs/configuration#referencing-in-java-script\n */\nexport const theme = <K extends keyof typeof tokens>(\n  key: K\n): (typeof tokens)[K] => tokens[key];\n","export const getActualSizeForNumberValue = (\n  pixels: number | string | undefined\n) => {\n  // Likely already in scalable units\n  if (typeof pixels === 'string') {\n    return pixels;\n  }\n\n  if (!pixels) {\n    // Give a default value\n    return '1rem';\n  }\n\n  return `${pixels / 16}rem`;\n};\n","import { createContext, type ReactNode, useContext } from 'react';\n\nimport type { IconPath } from '../Icon/types';\n\ninterface SvgProviderProps {\n  children: ReactNode;\n  importSvg: (name: IconPath) => Promise<{\n    ReactComponent: React.ElementType<React.SVGProps<SVGSVGElement>>;\n  }>;\n}\n\nconst SvgContext = createContext<SvgProviderProps['importSvg'] | undefined>(\n  undefined\n);\n\nexport const SvgProvider = ({ children, importSvg }: SvgProviderProps) => {\n  return (\n    <SvgContext.Provider value={importSvg}>{children}</SvgContext.Provider>\n  );\n};\n\nexport const useImportSvg = () => {\n  const svgContext = useContext(SvgContext);\n\n  if (!svgContext) {\n    throw new Error('useSvg must be used within a SvgProvider');\n  }\n\n  return svgContext as SvgProviderProps['importSvg'];\n};\n","export type IconName = keyof typeof IconNameToPath;\nexport type IconPath = IconNameToPath[keyof IconNameToPath];\n\n// Not included: anything that doesn't have an icon prefix, duplicates\n// https://www.figma.com/file/my9SKXuxcVxxVC9Opyh9sc/Styleguide?node-id=43%3A7\nexport enum IconNameToPath {\n  // Icons consolidated into icons folder\n  'adobe-experience-manager' = 'icons/icon-adobe-experience-manager',\n  'agility-content' = 'icons/icon-agility-colored',\n  'ai' = 'icons/icon-ai',\n  'alphabet' = 'icons/icon-alphabet',\n  'analytics' = 'icons/icon-analytics',\n  'announcement' = 'icons/icon-announcement',\n  'angular' = 'icons/icon-angular',\n  'angular-colored' = 'icons/icon-angular-colored',\n  'aprimo-colored' = 'icons/icon-aprimo-colored',\n  'ask-netlify' = 'icons/icon-ask-netlify',\n  'ask-netlify-colored' = 'icons/icon-ask-netlify-colored',\n  'astro' = 'icons/icon-astro',\n  'alchemy' = 'icons/icon-alchemy',\n  'alchemy-colored' = 'icons/icon-alchemy-colored',\n  'azure-devops' = 'icons/icon-azure-devops',\n  'azure-devops-colored' = 'icons/icon-azure-devops-colored',\n  'background-functions' = 'icons/icon-background-functions',\n  'big-notification' = 'icons/icon-big-notification',\n  'bitbucket' = 'icons/icon-bitbucket',\n  'bitbucket-colored' = 'icons/icon-bitbucket-colored',\n  'block' = 'icons/icon-block',\n  'box' = 'icons/icon-box',\n  'building' = 'icons/icon-building',\n  'bulb' = 'icons/icon-bulb',\n  'briefcase' = 'icons/icon-briefcase',\n  'bynder-colored' = 'icons/icon-bynder-colored',\n  'calendar' = 'icons/icon-calendar',\n  'caret-down' = 'icons/icon-caret-down',\n  'chat' = 'icons/icon-chat',\n  'clock' = 'icons/icon-clock',\n  'cloudinary-colored' = 'icons/icon-cloudinary-colored',\n  'comment' = 'icons/icon-comment',\n  'commit' = 'icons/icon-commit',\n  'config' = 'icons/icon-config',\n  'connect' = 'icons/icon-connect',\n  'contentful' = 'icons/icon-contentful',\n  'contentful-colored' = 'icons/icon-contentful-colored',\n  'contentstack' = 'icons/icon-contentstack',\n  'contentstack-colored' = 'icons/icon-contentstack-colored',\n  'datocms-content' = 'icons/icon-datocms-colored',\n  'deploy-diagnostics' = 'icons/icon-deploy-diagnostics',\n  'deploy-diagnostics-colored' = 'icons/icon-deploy-diagnostics-colored',\n  'download' = 'icons/icon-download',\n  'drupal-content' = 'icons/icon-drupal-colored',\n  'eleventy' = 'icons/eleventy',\n  'edit' = 'icons/icon-edit',\n  'email' = 'icons/icon-email',\n  'entry' = 'icons/icon-entry',\n  'eye-closed' = 'icons/icon-eye-closed',\n  'eye-open' = 'icons/icon-eye-open',\n  'gatsby' = 'icons/icon-gatsby',\n  'gear' = 'icons/icon-gear',\n  'gift' = 'icons/icon-gift',\n  'git-branch' = 'icons/icon-git-branch',\n  'git-branch-new' = 'icons/icon-git-branch-new',\n  'git-merge' = 'icons/icon-git-merge',\n  'github' = 'icons/icon-github',\n  'github-colored' = 'icons/icon-github-colored',\n  'gitlab' = 'icons/icon-gitlab',\n  'gitlab-colored' = 'icons/icon-gitlab-colored',\n  'google-colored' = 'icons/icon-google-colored',\n  'graduation-cap' = 'icons/icon-graduation-cap',\n  'graph-play' = 'icons/icon-graph-play',\n  'handshake' = 'icons/icon-handshake',\n  'high-perf-ADN' = 'icons/icon-high-perf-ADN',\n  'high-perf-ADN-not-configured' = 'icons/icon-high-perf-ADN-not-configured',\n  'high-perf-builds' = 'icons/icon-high-perf-builds',\n  'hugo' = 'icons/icon-hugo',\n  'info-round' = 'icons/icon-info-round',\n  'labs' = 'icons/icon-labs',\n  'laptop' = 'icons/icon-laptop',\n  'link' = 'icons/icon-link',\n  'menu' = 'icons/icon-menu',\n  'more-options' = 'icons/icon-more-options',\n  'more-options-vertical' = 'icons/icon-more-options-vertical',\n  'grid' = 'icons/icon-grid',\n  'netlify-encapsulated' = 'icons/icon-netlify-encapsulated',\n  'netlify-encapsulated-colored' = 'icons/icon-netlify-encapsulated-colored',\n  'network' = 'icons/icon-network',\n  'new' = 'icons/icon-new',\n  'nextjs' = 'icons/icon-nextjs',\n  'nextjs-colored' = 'icons/icon-nextjs-colored',\n  'nuxtjs' = 'icons/icon-nuxtjs',\n  'nuxtjs-colored' = 'icons/icon-nuxtjs-colored',\n  'partner-extension' = 'icons/icon-partner-extension',\n  'pencil' = 'icons/icon-pencil',\n  'pencil-info-round' = 'icons/icon-pencil-info-round',\n  'pencil-restart' = 'icons/icon-pencil-restart',\n  'pencil-restarting' = 'icons/icon-pencil-restarting',\n  'pencil-round' = 'icons/icon-pencil-round',\n  'pencil-warning-round' = 'icons/icon-pencil-warning-round',\n  'pencil-warning-triangle' = 'icons/icon-pencil-warning-triangle',\n  'pin' = 'icons/icon-pin',\n  'prismic' = 'icons/icon-prismic',\n  'pushpin' = 'icons/icon-pushpin',\n  'question-mark' = 'icons/icon-question-mark',\n  'remix' = 'icons/icon-remix',\n  'restart' = 'icons/icon-restart',\n  'retry' = 'icons/icon-retry',\n  'rocket' = 'icons/icon-rocket',\n  'sanity' = 'icons/icon-sanity',\n  'sanity-colored' = 'icons/icon-sanity-colored',\n  'sort-ascending' = 'icons/icon-sort-ascending',\n  'sort-descending' = 'icons/icon-sort-descending',\n  'storyblok' = 'icons/icon-storyblok',\n  'storyblok-colored' = 'icons/icon-storyblok-colored',\n  'strapi' = 'icons/icon-strapi',\n  'strapi-colored' = 'icons/icon-strapi-colored',\n  'screwdriver-wrench' = 'icons/icon-screwdriver-wrench',\n  'site' = 'icons/icon-site',\n  'split-test' = 'icons/icon-split-test',\n  'slack' = 'icons/icon-slack',\n  'slack-colored' = 'icons/icon-slack-colored',\n  'support' = 'icons/icon-support',\n  'thumbs-down' = 'icons/icon-thumbs-down',\n  'thumbs-up' = 'icons/icon-thumbs-up',\n  'pause' = 'icons/icon-pause',\n  'play' = 'icons/icon-play',\n  'plugin-round' = 'icons/icon-plugin-round',\n  'pull-request' = 'icons/icon-pull-request',\n  'shopify' = 'icons/icon-shopify',\n  'shopify-colored' = 'icons/icon-shopify-colored',\n  'speech-bubble' = 'icons/icon-speech-bubble',\n  'star' = 'icons/icon-star',\n  'star-outline' = 'icons/icon-star-outline',\n  'status-checkmark' = 'inline/icon-status-checkmark',\n  'stop' = 'icons/icon-stop',\n  'tag-edit' = 'icons/icon-tag-edit',\n  'token' = 'icons/icon-token',\n  'upload' = 'icons/icon-upload',\n  'user' = 'icons/icon-user',\n  'view' = 'icons/icon-view',\n  'warning-round' = 'icons/icon-warning-round',\n  'warning-triangle' = 'icons/icon-warning-triangle',\n  'webhook' = 'icons/icon-webhook',\n  'wordpress' = 'icons/icon-wordpress',\n  'back' = 'inline/icon-back',\n  'bottom' = 'inline/icon-bottom',\n  'checkmark' = 'inline/icon-checkmark',\n  'close' = 'inline/icon-close',\n  'copy-clipboard' = 'inline/icon-copy-clipboard',\n  'delete' = 'inline/icon-delete',\n  'file' = 'inline/icon-file',\n  'file-large' = 'inline/icon-file-large',\n  'folder' = 'inline/icon-folder',\n  'locked-tight' = 'inline/icon-locked-tight',\n  'locked-tight-circle' = 'inline/icon-locked-tight-circle',\n  'locked' = 'inline/icon-locked',\n  'magic-wand' = 'inline/icon-magic-wand',\n  'phone' = 'inline/icon-phone',\n  'plugin' = 'inline/icon-plugin',\n  'prohibition' = 'inline/icon-prohibition',\n  'right-circle' = 'inline/icon-right-circle',\n  'search' = 'inline/icon-search',\n  'slack-logo' = 'icon-slack-logo',\n  'solid' = 'icons/solid',\n  'sparkles' = 'icons/icon-sparkles',\n  'sparkly-slack-logo' = 'icon-slack-logo-sparkles',\n  'success' = 'inline/icon-success',\n  'top' = 'inline/icon-top',\n  'unlock' = 'icons/icon-unlock',\n  'up-circle' = 'inline/icon-up-circle',\n  'full-screen' = 'icons/icon-full-screen',\n  'exit-full-screen' = 'icons/icon-exit-full-screen',\n  'nav-blobs' = 'navigation/icon-nav-blobs',\n  'nav-blobs-active' = 'navigation/icon-nav-blobs-active',\n  'nav-caret' = 'navigation/icon-nav-caret',\n  'nav-caret-double' = 'navigation/icon-nav-caret-double',\n  'nav-create' = 'navigation/icon-nav-create',\n  'nav-site-overview' = 'navigation/icon-nav-site-overview',\n  'nav-site-overview-active' = 'navigation/icon-nav-site-overview-active',\n  'nav-site-configuration' = 'navigation/icon-nav-site-configuration',\n  'nav-site-configuration-active' = 'navigation/icon-nav-site-configuration-active',\n  'nav-deploys' = 'navigation/icon-nav-deploys',\n  'nav-deploys-active' = 'navigation/icon-nav-deploys-active',\n  'nav-functions' = 'navigation/icon-nav-functions',\n  'nav-functions-active' = 'navigation/icon-nav-functions-active',\n  'nav-edge-functions' = 'navigation/icon-nav-edge-functions',\n  'nav-edge-functions-active' = 'navigation/icon-nav-edge-functions-active',\n  'nav-integrations' = 'navigation/icon-nav-integrations',\n  'nav-integrations-active' = 'navigation/icon-nav-integrations-active',\n  'nav-extensions' = 'navigation/icon-nav-extensions',\n  'nav-extensions-active' = 'navigation/icon-nav-extensions-active',\n  'nav-analytics' = 'navigation/icon-nav-analytics',\n  'nav-analytics-active' = 'navigation/icon-nav-analytics-active',\n  'nav-forms' = 'navigation/icon-nav-forms',\n  'nav-forms-active' = 'navigation/icon-nav-forms-active',\n  'nav-split-testing' = 'navigation/icon-nav-split-testing',\n  'nav-split-testing-active' = 'navigation/icon-nav-split-testing-active',\n  'nav-large-media' = 'navigation/icon-nav-large-media',\n  'nav-large-media-active' = 'navigation/icon-nav-large-media-active',\n  'nav-logs' = 'navigation/icon-nav-logs',\n  'nav-logs-active' = 'navigation/icon-nav-logs-active',\n  'nav-team-overview' = 'navigation/icon-nav-team-overview',\n  'nav-team-overview-active' = 'navigation/icon-nav-team-overview-active',\n  'nav-sites' = 'navigation/icon-nav-sites',\n  'nav-sites-active' = 'navigation/icon-nav-sites-active',\n  'nav-builds' = 'navigation/icon-nav-builds',\n  'nav-builds-active' = 'navigation/icon-nav-builds-active',\n  'nav-connect' = 'navigation/icon-nav-connect',\n  'nav-connect-active' = 'navigation/icon-nav-connect-active',\n  'nav-domains' = 'navigation/icon-nav-domains',\n  'nav-domains-active' = 'navigation/icon-nav-domains-active',\n  'nav-domain-management' = 'navigation/icon-nav-domain-management',\n  'nav-domain-management-active' = 'navigation/icon-nav-domain-management-active',\n  'nav-members' = 'navigation/icon-nav-members',\n  'nav-members-active' = 'navigation/icon-nav-members-active',\n  'nav-audit-log' = 'navigation/icon-nav-audit-log',\n  'nav-audit-log-active' = 'navigation/icon-nav-audit-log-active',\n  'nav-billing' = 'navigation/icon-nav-billing',\n  'nav-billing-active' = 'navigation/icon-nav-billing-active',\n  'nav-team-settings' = 'navigation/icon-nav-team-settings',\n  'nav-team-settings-active' = 'navigation/icon-nav-team-settings-active',\n  'nav-labs' = 'navigation/icon-nav-labs',\n  'nav-labs-active' = 'navigation/icon-nav-labs-active',\n  'nav-news' = 'navigation/icon-nav-news',\n  'nav-news-active' = 'navigation/icon-nav-news-active',\n  'nav-news-unread' = 'navigation/icon-nav-news-unread',\n  'nav-separator' = 'navigation/icon-nav-separator',\n  'nav-shield' = 'navigation/icon-nav-shield',\n  'nav-shield-active' = 'navigation/icon-nav-shield-active',\n  'nav-support' = 'navigation/icon-nav-support',\n  'nav-support-active' = 'navigation/icon-nav-support-active',\n  'nav-command-palette' = 'navigation/icon-nav-command-palette',\n  'nav-toggle' = 'navigation/toggle/nav-toggle',\n  'nav-toggle-active' = 'navigation/toggle/nav-toggle-active',\n  'extension' = 'icons/icon-extension',\n}\n","import * as React from 'react';\n\nimport type { IconName } from '../Icon/types';\nimport { useImportSvg } from '../SvgProvider/SvgProvider';\nimport { IconNameToPath } from './types';\n\n/**\n * Hook to dynamically import an svg and render it inline\n * @param name - name of the svg to be able to find in /images\n */\nexport default function useSvg(\n  name: IconName\n): [boolean, React.ElementType<React.HTMLAttributes<SVGElement>> | null] {\n  const [Icon, setIcon] = React.useState<{\n    component: React.ElementType<React.SVGProps<SVGSVGElement>>;\n  } | null>(null);\n  const [loading, setLoading] = React.useState(false);\n  const importFunction = useImportSvg();\n\n  React.useEffect(() => {\n    let isMounted = true;\n    setLoading(true);\n\n    const importIcon = async (): Promise<void> => {\n      try {\n        const component = (await importFunction(IconNameToPath[name]))\n          .ReactComponent;\n        if (isMounted) {\n          setIcon({ component });\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        if (isMounted) {\n          setLoading(false);\n        }\n      }\n    };\n\n    importIcon();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [name, importFunction]);\n\n  return [loading, Icon?.component ?? null];\n}\n","import * as React from 'react';\n\nimport { cn } from '../helpers/cn';\nimport { getActualSizeForNumberValue } from './helpers';\nimport type { IconName } from './types';\nimport useSvg from './useSvg';\n\nexport interface DecorativeIconProps extends React.SVGAttributes<SVGElement> {\n  /** Name of the icon that maps to the svg file */\n  name: IconName;\n}\n\n/**\n * An icon that is hidden from screenreaders and serves decorative purposes\n */\nexport function DecorativeIcon({\n  className,\n  style,\n  name,\n  width,\n  height = width,\n  ...rest\n}: DecorativeIconProps) {\n  const [loading, Icon] = useSvg(name);\n\n  const iconWidth = getActualSizeForNumberValue(width);\n  const iconHeight = getActualSizeForNumberValue(height);\n\n  if (loading || !Icon) {\n    return (\n      <span\n        className={cn(className, 'tw-inline-block')}\n        style={{\n          height: iconHeight,\n          width: iconWidth,\n        }}\n      />\n    );\n  }\n\n  return (\n    <Icon\n      // We set the styles in CSS this way so that className props including e.g. `tw-w-6` will be more specific and override any default sizing\n      style={\n        {\n          ...style,\n          '--icon-width': iconWidth,\n          '--icon-height': iconHeight,\n        } as React.CSSProperties\n      }\n      aria-hidden\n      className={cn(\n        'scalable-icon tw-inline !tw-fill-current tw-align-baseline',\n        className\n      )}\n      // Reset any width and height properties that may have been baked in to the SVG itself to favor the scalable sizes\n      height={undefined}\n      width={undefined}\n      {...rest}\n    />\n  );\n}\n","import type { DecorativeIconProps } from './DecorativeIcon';\nimport { DecorativeIcon } from './DecorativeIcon';\n\nexport interface AccessibleIconProps extends DecorativeIconProps {\n  /** Human readable title for the screenreader describing the icon */\n  title: string;\n}\n\n/**\n * An icon that is visible to screenreaders and should be interacted with\n * Accessibility follows the SVG pattern 5 of\n * {@link https://www.deque.com/blog/creating-accessible-svgs/}\n */\nexport function AccessibleIcon(props: AccessibleIconProps) {\n  return <DecorativeIcon aria-hidden={undefined} role=\"img\" {...props} />;\n}\n","import type {\n  Instance as TippyInstance,\n  Plugin,\n  Props as TippyProps,\n} from 'tippy.js';\n\nexport interface TooltipPluginProps {\n  hideOnPopperBlur?: boolean;\n  hideOnEsc?: boolean;\n  manageFocusInPopover?: boolean;\n}\n\ntype Props = TippyProps & TooltipPluginProps;\n\nconst getTriggerButton = (reference: TippyInstance['reference']) => {\n  if (reference instanceof HTMLButtonElement) {\n    return reference;\n  } else if (reference instanceof HTMLElement) {\n    return reference.querySelector('button');\n  }\n\n  return null;\n};\n\nconst closePopperWithoutTriggeringFocusIn = ({\n  reference,\n  hide,\n  props,\n}: TippyInstance<Props>) => {\n  const button = getTriggerButton(reference);\n\n  hide();\n\n  if (!button || !props.trigger?.includes('focusin')) {\n    return;\n  }\n\n  const preventFocusIn = (event: FocusEvent) => {\n    event.stopImmediatePropagation();\n  };\n\n  button.addEventListener('focusin', preventFocusIn);\n  button.focus();\n  button.removeEventListener('focusin', preventFocusIn);\n};\n\nexport const hideOnPopperBlur: Plugin<Props> = {\n  name: 'hideOnPopperBlur',\n  defaultValue: true,\n  fn(instance) {\n    const { popper, hide, props } = instance;\n\n    return {\n      onCreate() {\n        // We use this plugin to make sure that when focus leaves either the trigger button or the inner tooltip content, the tooltip closes\n        popper.addEventListener('focusout', ({ relatedTarget }) => {\n          if (\n            props.hideOnPopperBlur &&\n            relatedTarget &&\n            !popper.contains(relatedTarget as Node)\n          ) {\n            hide();\n          }\n        });\n      },\n    };\n  },\n};\n\nexport const hideOnEsc: Plugin<Props> = {\n  name: 'hideOnEsc',\n  defaultValue: true,\n  fn(instance) {\n    const { props } = instance;\n\n    function onKeyDown(event: KeyboardEvent) {\n      if (props.hideOnEsc && event.key === 'Escape') {\n        closePopperWithoutTriggeringFocusIn(instance);\n      }\n    }\n\n    return {\n      onShow() {\n        document.addEventListener('keydown', onKeyDown);\n      },\n      onHide() {\n        document.removeEventListener('keydown', onKeyDown);\n      },\n    };\n  },\n};\n\nexport const manageFocusInPopover: Plugin<Props> = {\n  name: 'manageFocusInPopover',\n  defaultValue: false,\n  fn(instance) {\n    const { popper, hide, props } = instance;\n\n    let activeIndex = 0;\n    let didAddListeners = false;\n\n    const getFirstFocusableElement = () =>\n      popper.querySelector<HTMLAnchorElement | HTMLButtonElement>('a, button');\n\n    const moveFocusToFirstElementOnTab = (event: KeyboardEvent) => {\n      if (event.key !== 'Tab' || event.shiftKey) {\n        return;\n      }\n\n      event.preventDefault();\n\n      const firstFocusableElement = getFirstFocusableElement();\n      const triggerButton = getTriggerButton(instance.reference);\n\n      if (firstFocusableElement && triggerButton) {\n        firstFocusableElement.focus();\n        triggerButton.removeEventListener(\n          'keydown',\n          moveFocusToFirstElementOnTab\n        );\n      }\n    };\n\n    const onKeydown = (event: KeyboardEvent) => {\n      const focusableElements = popper.querySelectorAll<\n        HTMLAnchorElement | HTMLButtonElement\n      >('a, button');\n\n      const numItems = focusableElements.length;\n      if (\n        !['Tab', ' ', 'Enter'].includes(event.key) ||\n        !document.activeElement\n      ) {\n        return;\n      }\n\n      event.preventDefault();\n\n      let newActiveIndex = activeIndex;\n      switch (event.key) {\n        case 'Tab':\n          if (event.shiftKey) {\n            newActiveIndex = activeIndex - 1;\n          } else {\n            newActiveIndex = activeIndex + 1;\n          }\n          break;\n        case ' ':\n        case 'Enter':\n          focusableElements.item(activeIndex).click();\n          hide();\n          return;\n      }\n\n      if (newActiveIndex < 0 || newActiveIndex >= numItems) {\n        // User has tabbed away from the popper, close the popper\n\n        // focusin may be a trigger for the popper to show again, so we need to prevent it\n        // from firing (and reopening the tooltip) when the user tabs back to the trigger button\n        closePopperWithoutTriggeringFocusIn(instance);\n\n        return;\n      }\n\n      activeIndex = newActiveIndex;\n      focusableElements.item(newActiveIndex).focus();\n    };\n    return {\n      onMount() {\n        if (!props.manageFocusInPopover) return;\n\n        activeIndex = 0;\n        const firstFocusableElement = getFirstFocusableElement();\n        const triggerButton = getTriggerButton(instance.reference);\n\n        if (firstFocusableElement && triggerButton) {\n          triggerButton.addEventListener(\n            'keydown',\n            moveFocusToFirstElementOnTab\n          );\n          popper.addEventListener('keydown', onKeydown);\n          didAddListeners = true;\n        }\n      },\n      onHidden() {\n        if (!props.manageFocusInPopover) return;\n\n        const triggerButton = getTriggerButton(instance.reference);\n\n        activeIndex = 0;\n        if (didAddListeners) {\n          popper.removeEventListener('keydown', onKeydown);\n          didAddListeners = false;\n          triggerButton?.removeEventListener(\n            'keydown',\n            moveFocusToFirstElementOnTab\n          );\n        }\n      },\n    };\n  },\n};\n","import { theme } from '@netlify/tailwind-config/theme';\nimport type { TippyProps } from '@tippyjs/react';\nimport OriginalTippy from '@tippyjs/react';\n\nimport { cn } from '../helpers/cn';\nimport { remToPxNumber } from '../helpers/remToPxNumber';\nimport { AccessibleIcon } from '../Icon/AccessibleIcon';\nimport type { IconName } from '../Icon/types';\nimport {\n  hideOnEsc,\n  hideOnPopperBlur,\n  manageFocusInPopover as manageFocusInPopoverPlugin,\n  type TooltipPluginProps,\n} from './TippyPlugins';\n\ninterface Intent {\n  iconName: IconName;\n  buttonClassName: string;\n  title: string;\n}\n\nconst Tippy = OriginalTippy as React.ForwardRefExoticComponent<\n  TippyProps & TooltipPluginProps\n>;\n\nconst intents: Record<string, Intent> = {\n  info: {\n    iconName: 'info-round',\n    buttonClassName: cn(\n      'tw-text-gray-darkest',\n      'hover:tw-text-black',\n      'dark:tw-text-gray-lightest',\n      'dark:hover:tw-text-white'\n    ),\n    title: 'More information',\n  },\n  warning: {\n    iconName: 'warning-triangle',\n    buttonClassName: cn(\n      'tw-text-gold-darkest',\n      'hover:tw-text-gold-darker',\n      'dark:tw-text-gold',\n      'dark:hover:tw-text-gold-darker'\n    ),\n    title: 'Alert',\n  },\n  error: {\n    iconName: 'warning-round',\n    buttonClassName: cn(\n      'tw-text-red-darkest',\n      'hover:tw-text-red-darker',\n      'dark:tw-text-red',\n      'dark:hover:tw-text-red-darker'\n    ),\n    title: 'Error',\n  },\n};\n\nconst tooltipBtnCN = (className: Intent['buttonClassName']) =>\n  cn(\n    '!tw-bg-transparent',\n    'tw-border-none',\n    'tw-rounded-full',\n    'tw-inline-flex',\n    'tw-p-0',\n    'tw-outline-0',\n    'tw-relative',\n    'tw-h-4',\n    'tw-w-4',\n    'tw-top-0.5',\n    'focus-visible:tw-ring-2',\n    'tw-cursor-help',\n    className\n  );\n\nconst tippyCN = ({\n  floating,\n  nowrap,\n  className,\n}: Pick<TooltipProps, 'floating' | 'nowrap' | 'className'>) =>\n  cn(\n    'tw-text-white',\n    'tw-leading-normal',\n    'tw-bg-black',\n    'tw-rounded-lg',\n    'tw-py-3',\n    'tw-px-4',\n    'tw-text-sm',\n    floating &&\n      `tw-translate-z-0 tw--translate-y-1/2 tw-translate-x-[calc(0-(theme(spacing.6)+theme(spacing.1)))]`,\n    nowrap && 'tw-whitespace-nowrap',\n    'code:tw-text-white',\n    'code:tw-p-0',\n    'code:tw-bg-transparent',\n    'dark:tw-bg-gray-darker',\n    'dark:tw-border',\n    'dark:tw-border-gray-dark',\n    className\n  );\n\n// see all Tippy option props here: https://kabbouchi.github.io/tippyjs-v4-docs/all-options/\nexport interface TooltipProps\n  extends Omit<TippyProps & TooltipPluginProps, 'content'> {\n  description: string | TippyProps['content'];\n  floating?: boolean;\n  nowrap?: boolean;\n  outset?: string;\n  intent?: 'info' | 'warning' | 'error';\n  iconName?: IconName;\n  buttonClassName?: string;\n  title?: string;\n  onClick?: () => void;\n  id?: string;\n}\n\nexport const Tooltip = ({\n  floating = false,\n  nowrap = false,\n  outset,\n  children,\n  intent = 'info',\n  iconName = intents[intent].iconName,\n  buttonClassName = intents[intent].buttonClassName,\n  title = intents[intent].title,\n  appendTo = 'parent',\n  description,\n  maxWidth = 416,\n  offset = [0, remToPxNumber(theme('spacing.2'))],\n  visible,\n  className,\n  onClickOutside,\n  onClick,\n  id,\n  manageFocusInPopover = appendTo !== 'parent',\n  ...rest\n}: TooltipProps) => {\n  const otherProps =\n    typeof visible !== 'undefined'\n      ? { onClickOutside, visible }\n      : {\n          trigger: 'click mouseenter focusin',\n        };\n\n  return (\n    <Tippy\n      arrow={false}\n      className={\n        typeof rest.render === 'undefined'\n          ? tippyCN({ floating, nowrap, className })\n          : undefined\n      }\n      content={description}\n      offset={offset}\n      duration={0}\n      plugins={[hideOnEsc, hideOnPopperBlur, manageFocusInPopoverPlugin]}\n      interactive\n      maxWidth={maxWidth}\n      appendTo={appendTo}\n      popperOptions={{\n        modifiers: [\n          {\n            name: 'flip',\n            options: {\n              fallbackPlacements: ['top', 'bottom'],\n            },\n          },\n          {\n            name: 'preventOverflow',\n            options: {\n              altAxis: true,\n            },\n          },\n        ],\n      }}\n      {...otherProps}\n      {...rest}\n      manageFocusInPopover={manageFocusInPopover}\n    >\n      {children ? (\n        children\n      ) : (\n        /**\n         * This wrapper:\n         * 1. Uses `outset` to create some spacing around the tooltipped button\n         * 2. Allows the buttons for floating tooltips to appear inline next to\n         * other elements. Without this, the button's placement will break.\n         */\n        <span\n          className={cn(outset, floating && 'tw-absolute tw--right-7 tw--mt-8')}\n        >\n          <button\n            id={id}\n            className={tooltipBtnCN(buttonClassName)} // must have Tooltip__btn for Tippy to work\n            type=\"button\" // important to specify type so that tooltips inside forms don't assume type=\"submit\"\n            onClick={(e) => {\n              e.preventDefault();\n              onClick?.();\n            }}\n          >\n            <AccessibleIcon title={title} name={iconName} />\n          </button>\n        </span>\n      )}\n    </Tippy>\n  );\n};\n","export const isAvatarUrlCustomUpload = (url: string) => {\n  try {\n    const imageCdnDomain = process.env.NETLIFY_IMAGES_CDN_DOMAIN;\n    return new URL(url).host === imageCdnDomain;\n  } catch {\n    return false;\n  }\n};\n\nexport const getAvatarSrcFromUser = (user) => {\n  const avatar = user?.avatar;\n  const avatarHref = avatar?.href;\n  const avatarUrl = user?.avatar_url;\n  const userMetadata = user?.user_metadata;\n\n  return avatarHref || avatar || avatarUrl || userMetadata?.avatar;\n};\n","import lodashSplit from 'lodash/split';\nimport {\n  type ElementRef,\n  type ReactNode,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport { cn } from '../helpers/cn';\nimport { getPlaceholderGradientColorsFromId } from '../helpers/placeholderColors';\nimport { Picture } from '../Picture/Picture';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { getAvatarSrcFromUser, isAvatarUrlCustomUpload } from './helpers';\n\nconst GRAVATAR_URL = 'https://secure.gravatar.com/avatar';\n\n/* These sizes are applied directly on img tag, on width and height attributes\n * Any new size will also need a new css class!\n */\nconst sizes = {\n  xs: 16,\n  sm: 24,\n  md: 40,\n  lg: 100,\n  xl: 128,\n};\n\nfunction transformAvatarUrl(\n  url: string,\n  size: number,\n  scale: number = 2\n): string {\n  const scaledSize = Math.round(size * scale);\n  if (url.startsWith(GRAVATAR_URL)) {\n    return `${url.split('?')[0]}?s=${scaledSize}&d=404`;\n  }\n  if (url.match(/github/i)) {\n    return `${url.split('?')[0]}?s=${scaledSize}`;\n  }\n  if (url.match(/gitlab/i)) {\n    return `${url.split('?')[0]}?size=${scaledSize}`;\n  }\n  return url;\n}\n\nconst AvatarWrapper = ({ children, hoverTooltip }) => {\n  if (hoverTooltip) {\n    return (\n      <Tooltip\n        description={hoverTooltip}\n        trigger=\"mouseenter\"\n        placement=\"bottom\"\n        className=\"!tw-p-2 !tw-py-1\"\n        appendTo={document.body}\n      >\n        {children}\n      </Tooltip>\n    );\n  }\n  return children;\n};\n\nexport type AvatarUser = {\n  id?: string;\n  avatar_url?: string;\n  full_name?: string;\n  email?: string;\n  avatar?: string | { href?: string };\n  user_metadata?: { avatar?: string; full_name?: string };\n};\n\nexport interface AvatarProps {\n  user?: AvatarUser;\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  alt?: boolean;\n  altText?: string;\n  src?: string | null;\n  showInnerRing?: boolean;\n  dropdown?: boolean;\n  className?: string;\n  title?: string;\n  placeholderText?: string;\n  placeholderBackgroundColors?: { to: string; from: string };\n  hoverTooltip?: string | ReactNode;\n}\n\nexport function Avatar({\n  user,\n  size,\n  alt,\n  altText,\n  src,\n  showInnerRing = true,\n  dropdown = false,\n  className = '',\n  title,\n  placeholderText,\n  placeholderBackgroundColors,\n  hoverTooltip,\n}: AvatarProps) {\n  const [isErrored, setIsErrored] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const imgRef = useRef<ElementRef<'img'>>(null);\n\n  src = src || getAvatarSrcFromUser(user);\n\n  const px = (size && sizes[size]) || 32;\n  const transformedSrc = src ? transformAvatarUrl(src, px) : null;\n\n  useEffect(() => {\n    // If the src prop changes, reset state to defaults\n    setIsErrored(false);\n\n    const img = imgRef.current;\n    const isLoaded = img !== null && img.src === transformedSrc && img.complete;\n\n    setIsLoaded(isLoaded);\n  }, [transformedSrc]);\n\n  const username =\n    (user && (user.full_name || user.user_metadata?.full_name || user.email)) ||\n    'Anonymous';\n  const classNames = cn(\n    'tw-rounded-full',\n    'tw-block',\n    'tw-self-center',\n    'tw-overflow-hidden',\n    'tw-aspect-square',\n    // Semitransparent circle around the avatar\n    showInnerRing &&\n      `after:tw-absolute after:tw-inset-0 after:tw-select-none after:tw-rounded-full after:tw-border after:tw-border-black/10 after:tw-content-[''] dark:after:tw-border-white/25`,\n    !size &&\n      !dropdown &&\n      `tw-w-avatar-sm tw-text-lg tw-leading-[theme('height.avatar-sm')]`,\n    size === 'xs' && `tw-w-4 tw-text-[10px] tw-leading-4`,\n    size === 'sm' && `tw-w-6 tw-text-[14px] tw-leading-6`,\n    size === 'md' && `tw-w-10 tw-text-[24px] tw-leading-10`,\n    size === 'lg' &&\n      `tw-w-avatar-lg tw-text-[40px] tw-leading-[theme('height.avatar-lg')] md:tw-w-avatar-xl md:tw-text-[60px] md:tw-leading-[96px]`,\n    size === 'xl' &&\n      `tw-w-avatar-xl tw-text-[60px] tw-leading-[96px] md:tw-w-avatar-xxl md:tw-text-[72px] md:tw-leading-[124px]`,\n    dropdown\n      ? `tw-absolute tw-inset-0 tw-w-avatar-md tw-text-xl tw-leading-[theme('height.avatar-md')]`\n      : 'tw-relative',\n    className\n  );\n\n  const textClassNames = cn(\n    'tw-font-semibold',\n    'tw-text-center',\n    'tw-text-white'\n  );\n  const altInfo = altText || username;\n\n  // Assume we shouldn't show the title if we're showing a tooltip\n  const formattedTitle = hoverTooltip\n    ? undefined\n    : title || altText || (username !== 'Anonymous' && username) || undefined;\n\n  if (src && !isErrored) {\n    const customAvatar = isAvatarUrlCustomUpload(src);\n    const formattedAlt = alt ? altInfo : '';\n\n    return (\n      <AvatarWrapper hoverTooltip={hoverTooltip}>\n        <span\n          className={classNames}\n          title={formattedTitle}\n          data-chromatic=\"ignore\"\n        >\n          {customAvatar ? (\n            <Picture\n              className=\"tw-aspect-square tw-w-full\"\n              url={src}\n              width={px}\n              height={px}\n              alt={formattedAlt}\n              onError={() => setIsErrored(true)}\n              cover\n              animated={`${src}`.endsWith('.gif')}\n            />\n          ) : (\n            <img\n              ref={imgRef}\n              className={cn(\n                'tw-aspect-square tw-w-full',\n                !isLoaded && 'tw-opacity-0'\n              )}\n              src={transformAvatarUrl(src, px)}\n              width={px}\n              height={px}\n              alt={formattedAlt}\n              onError={() => setIsErrored(true)}\n              onLoad={() => setIsLoaded(true)}\n              loading=\"lazy\"\n            />\n          )}\n        </span>\n      </AvatarWrapper>\n    );\n  }\n\n  const placeholder =\n    placeholderText ||\n    (username && lodashSplit(username, '', 1)[0].toUpperCase()); // lodash allows for fancy emojis as the first letter of the username\n  const backgroundColors =\n    placeholderBackgroundColors || getPlaceholderGradientColorsFromId(user?.id);\n\n  return (\n    <AvatarWrapper hoverTooltip={hoverTooltip}>\n      <span\n        className={cn(classNames, textClassNames)}\n        title={formattedTitle}\n        aria-hidden={!alt}\n        style={{\n          background: `linear-gradient(to bottom right, ${backgroundColors.to}, ${backgroundColors.from})`,\n        }}\n      >\n        {placeholder}\n        {alt && <span className=\"tw-sr-only\">{altInfo}</span>}\n      </span>\n    </AvatarWrapper>\n  );\n}\n","import type { AvatarProps } from '../Avatar/Avatar';\nimport { Avatar } from '../Avatar/Avatar';\nimport { cn } from '../helpers/cn';\n\nexport type AvatarListProps = {\n  users: AvatarProps['user'][];\n  size?: AvatarProps['size'];\n  maxNumber?: number;\n  includeHoverTooltips?: boolean;\n  additionalTextType?: 'useName' | 'useCalculatedNumber';\n  userLabel?: string;\n  additionalUsersLabelSingular?: string;\n  additionalUsersLabelPlural?: string;\n};\n\nconst AdditionalUsersTooltipContent = ({\n  additionalUsers = [],\n  additionalTextType = 'useName',\n  additionalUsersLabelSingular,\n  additionalUsersLabelPlural,\n}: {\n  additionalUsers?: AvatarProps['user'][];\n  additionalTextType?: string;\n  additionalUsersLabelSingular?: string;\n  additionalUsersLabelPlural?: string;\n}) => {\n  const additionalUsersText =\n    additionalUsers.length === 1\n      ? additionalUsersLabelSingular\n      : additionalUsersLabelPlural;\n\n  return (\n    <span className=\"tw-flex tw-flex-col tw-items-center\">\n      {additionalTextType === 'useName' ? (\n        <>\n          {additionalUsers.map((user, index = 0) => {\n            return (\n              <span key={`additional-user-${index}`}>{user?.full_name}</span>\n            );\n          })}\n          {additionalUsersText}\n        </>\n      ) : (\n        <span>\n          {additionalUsers.length} {additionalUsersText}\n        </span>\n      )}\n    </span>\n  );\n};\n\nconst listItemClassName = (size?: AvatarProps['size']) =>\n  cn(\n    'tw-shrink-0',\n    'tw-rounded-full',\n    'tw-border-white',\n    'dark:tw-border-black',\n    'tw-border-solid',\n    'tw-relative',\n    size === 'xs' && 'tw-border',\n    size === 'sm' && 'tw-border',\n    (size === 'md' || !size) && 'tw-border-2',\n    size === 'lg' && 'tw-border-[3px]',\n    size === 'xl' && 'tw-border-4'\n  );\n\nexport function AvatarList({\n  users,\n  size,\n  maxNumber,\n  includeHoverTooltips = false,\n  additionalTextType = 'useName',\n  userLabel,\n  additionalUsersLabelSingular,\n  additionalUsersLabelPlural,\n}: AvatarListProps) {\n  const items = maxNumber ? users.slice(0, maxNumber) : users;\n  const additionalUsersLength = maxNumber ? users.length - maxNumber : 0;\n  const renderAdditionalUsers = additionalUsersLength > 0;\n  const additionalUsersLabel = `+${additionalUsersLength}`;\n\n  if (!users || users.length === 0) {\n    return null;\n  }\n\n  return (\n    <ul\n      className={cn(\n        'tw-flex',\n        'tw-flex-row',\n        'tw-items-center',\n        size === 'xs' && '[&_>_*_+_*]:tw--ml-0.5',\n        size === 'sm' && '[&_>_*_+_*]:tw--ml-1',\n        (size === 'md' || !size) && '[&_>_*_+_*]:tw--ml-2',\n        size === 'lg' && '[&_>_*_+_*]:tw--ml-4',\n        size === 'xl' && '[&_>_*_+_*]:tw--ml-6',\n        // Override .details ul styles\n        '!tw-list-none',\n        '!tw-pl-0'\n      )}\n    >\n      {items.map((user) => {\n        const nameOrEmail = user?.full_name || user?.email;\n        const userTooltipText = `${nameOrEmail}${userLabel ? ` ${userLabel}` : ''}`;\n\n        return (\n          <li key={user?.id} className={listItemClassName(size)}>\n            <Avatar\n              alt\n              user={user}\n              size={size}\n              hoverTooltip={includeHoverTooltips ? userTooltipText : undefined}\n            />\n          </li>\n        );\n      })}\n      {renderAdditionalUsers && (\n        <li key=\"additional-users\" className={listItemClassName(size)}>\n          <Avatar\n            placeholderText={additionalUsersLabel}\n            size={size}\n            showInnerRing={false}\n            className={cn(\n              '!tw-bg-gray-lighter  !tw-text-gray-darker dark:!tw-bg-gray-dark dark:!tw-text-gray-lightest',\n\n              size === 'xs' && '!tw-text-[7px]',\n              size === 'sm' && '!tw-text-[10px]',\n              !size && '!tw-text-[12px]',\n              size === 'md' && '!tw-text-base',\n              size === 'lg' && '!tw-text-[24px] md:!tw-text-[32px]',\n              size === 'xl' && '!tw-text-[32px] md:!tw-text-[40px]'\n            )}\n            title={includeHoverTooltips ? undefined : additionalUsersLabel}\n            placeholderBackgroundColors={{\n              // Rely on the background instead of the gradient\n              from: 'transparent',\n              to: 'transparent',\n            }}\n            hoverTooltip={\n              includeHoverTooltips ? (\n                <AdditionalUsersTooltipContent\n                  additionalUsers={users.slice(-additionalUsersLength)}\n                  additionalTextType={additionalTextType}\n                  additionalUsersLabelPlural={additionalUsersLabelPlural}\n                  additionalUsersLabelSingular={additionalUsersLabelSingular}\n                />\n              ) : undefined\n            }\n          />\n        </li>\n      )}\n    </ul>\n  );\n}\n","import {\n  type ComponentPropsWithRef,\n  createContext,\n  type ReactNode,\n  useContext,\n} from 'react';\n\nexport interface LinkLikeComponentProps extends ComponentPropsWithRef<'a'> {\n  to?: string;\n  [key: string]: unknown;\n}\n\nexport interface LinkProviderProps {\n  /** A render function that returns the link element used by all `netlify-react-ui` links */\n  renderLink: (props: LinkLikeComponentProps) => JSX.Element;\n  children: ReactNode;\n}\n\nconst LinkContext = createContext<LinkProviderProps['renderLink'] | undefined>(\n  undefined\n);\n\nexport const LinkProvider = ({ children, renderLink }: LinkProviderProps) => {\n  return (\n    <LinkContext.Provider value={renderLink}>{children}</LinkContext.Provider>\n  );\n};\n\nexport const useLink = () => {\n  const linkContext = useContext(LinkContext);\n\n  if (!linkContext) {\n    throw new Error('useLink must be used within a LinkProvider');\n  }\n\n  return linkContext;\n};\n","import type { ForwardRefRenderFunction, HTMLProps } from 'react';\nimport { forwardRef } from 'react';\nimport * as React from 'react';\n\nimport { cn } from '../helpers/cn';\nimport { DecorativeIcon } from '../Icon/DecorativeIcon';\nimport { useLink } from '../LinkProvider';\nimport type { LocationDescriptor } from '../types';\n\nconst INTENT_STYLES = {\n  default: `\n    tw-text-teal-darkest\n    tw-cursor-pointer\n    tw-font-semibold\n    tw-relative\n    hover:tw-underline\n    dark:tw-text-teal-lighter\n  `,\n  invertUnderline: `hover:!tw-no-underline !tw-underline`,\n  action: `\n    tw-bg-none\n    tw-border-0\n    tw-text-teal-darkest\n    tw-inline-block\n    tw-font-semibold\n    tw-pr-6\n    tw-mt-2\n    tw-rounded-sm\n    focus-visible:tw-outline\n    focus-visible:tw-outline-1\n    hover:tw-underline\n    after:tw-content-arrow\n    after:tw-ml-1\n    after:tw-absolute\n    dark:tw-text-teal-lighter\n  `,\n  actionExternal: `\n    after:tw-transform\n    after:tw-rotate-[-40deg]\n  `,\n  showExternalIcon: `\n    tw-inline-block\n    tw-pr-6\n    after:tw-content-arrow\n    after:tw-ml-1\n    after:tw-absolute\n    after:tw-transform\n    after:tw-rotate-[-40deg]\n  `,\n  anchor: `\n    tw-text-inherit\n    tw-font-weight-inherit\n    tw-relative\n    tw-outline-0\n    tw-py-2\n    tw-px-0\n    tw--my-2\n    tw-mx-0\n    tw-no-underline\n    focus:tw-no-underline\n    hover:tw-no-underline\n    after:tw-bg-gray\n    after:tw-bottom-0\n    after:tw-content-empty\n    after:tw-mt-0.5\n    after:tw-mask-image-icon-link\n    after:tw-mask-center\n    after:tw-mask-no-repeat\n    after:tw-mask-4\n    after:tw-w-6\n    after:tw-top-0\n    after:tw-absolute\n    after:tw-opacity-0\n    hover:after:tw-opacity-100\n    focus:after:tw-opacity-100\n    dark:tw-text-inherit\n  `,\n  block: `\n    tw-text-inherit\n    tw-font-weight-inherit\n    tw-static\n    tw-no-underline\n    before:tw-absolute\n    before:tw-top-0\n    before:tw-right-0\n    before:tw-bottom-0\n    before:tw-left-0\n    before:tw-content-empty\n    before:tw-block\n    before:z-0\n    hover:tw-text-inherit\n    hover:tw-underline\n    dark:tw-text-inherit\n  `,\n  btnReset: `\n    tw-border-0\n    tw-bg-transparent\n    tw-inline\n    tw-p-0\n  `,\n  loud: `\n    tw-text-black\n    tw-font-semibold\n    tw-underline\n    tw-decoration-color-gray-light\n    hover:tw-underline\n    dark:tw-text-white\n    dark:tw-decoration-color-gray-light\n  `,\n  subdued: ({\n    lightModeInvert,\n    underline = true,\n  }: {\n    lightModeInvert: boolean;\n    underline: boolean;\n  }) => `\n    tw-text-inherit\n    ${underline && 'tw-underline'}\n    tw-decoration-gray\n    tw-font-weight-inherit\n    ${lightModeInvert ? `hover:tw-text-white` : `hover:tw-text-black`}\n    hover:tw-decoration-inherit\n    dark:hover:tw-text-white\n    dark:tw-text-inherit\n    dark:tw-decoration-inherit\n  `,\n  upgrade: `\n    tw-inline-flex\n    tw-items-center\n    tw-font-medium\n    tw-text-blue\n    tw-text-sm\n    tw-underline\n    tw-whitespace-nowrap\n    dark:tw-text-blue-lightest\n  `,\n};\n\nexport const linkCN = ({\n  action,\n  block,\n  className,\n  loud,\n  subdued,\n  subduedUnderline = true,\n  upgrade,\n  anchor,\n  external, // To style Link with HTMLButton as external\n  showExternalIcon,\n  to,\n  outset,\n  href,\n  lightModeInvert = false,\n  invertUnderline = false,\n}: Omit<LinkProps, 'children'>) => {\n  const defaultLink =\n    !className && !loud && !action && !block && !loud && !subdued && !anchor;\n  // TODO: once all variants are sussed out, disallow className again\n  return cn(\n    defaultLink && INTENT_STYLES.default,\n    action && INTENT_STYLES.action,\n    showExternalIcon && INTENT_STYLES.showExternalIcon,\n    (href || external) && action && INTENT_STYLES.actionExternal,\n    block && INTENT_STYLES.block,\n    loud && INTENT_STYLES.loud,\n    subdued &&\n      INTENT_STYLES.subdued({\n        lightModeInvert,\n        underline: subduedUnderline,\n      }),\n    upgrade && INTENT_STYLES.upgrade,\n    anchor && INTENT_STYLES.anchor,\n    !href && !to && INTENT_STYLES.btnReset,\n    outset,\n    invertUnderline && INTENT_STYLES.invertUnderline,\n    className\n  );\n};\n\nexport interface LinkProps\n  extends Omit<HTMLProps<HTMLAnchorElement | HTMLButtonElement>, 'action'> {\n  action?: boolean;\n  block?: boolean;\n  loud?: boolean;\n  subdued?: boolean;\n  subduedUnderline?: boolean;\n  invertUnderline?: boolean;\n  upgrade?: boolean;\n  anchor?: boolean;\n  external?: boolean;\n  showExternalIcon?: boolean;\n  to?: LocationDescriptor | string;\n  outset?: string;\n  children: React.ReactNode;\n  lightModeInvert?: boolean;\n  type?: 'button' | 'submit' | 'reset';\n}\n\nconst LinkBase: ForwardRefRenderFunction<\n  HTMLAnchorElement | HTMLButtonElement,\n  LinkProps\n> = (\n  {\n    action,\n    block,\n    className,\n    loud,\n    subdued,\n    subduedUnderline,\n    upgrade,\n    anchor,\n    external,\n    showExternalIcon,\n    type = 'button',\n    outset = '', // do not use this prop directly; outset should only be passed if the <Link> instance is wrapped with <Outset> component\n    children,\n    lightModeInvert = false,\n    invertUnderline,\n    ...rest\n  },\n  ref\n) => {\n  const renderLink = useLink();\n  const { to, href, onClick } = rest;\n  const CN = linkCN({\n    action,\n    block,\n    className,\n    loud,\n    subdued,\n    subduedUnderline,\n    showExternalIcon,\n    upgrade,\n    anchor,\n    external,\n    outset,\n    lightModeInvert,\n    to,\n    href,\n    invertUnderline,\n  });\n  return to || href || !onClick ? (\n    renderLink({\n      ref: ref as React.ForwardedRef<HTMLAnchorElement>,\n      className: CN,\n      ...(rest as React.ComponentPropsWithoutRef<'a'>),\n      children: (\n        <>\n          {upgrade && <DecorativeIcon name=\"locked\" />}\n          {children}\n        </>\n      ),\n    })\n  ) : (\n    <button\n      className={cn('tw-text-left', CN)}\n      type={type}\n      {...(rest as React.ComponentPropsWithoutRef<'button'>)}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport const Link = forwardRef<\n  HTMLAnchorElement | HTMLButtonElement,\n  LinkProps\n>(LinkBase);\n","import * as React from 'react';\n\nimport { cn } from '../helpers/cn';\nimport type { DecorativeIconProps } from '../Icon/DecorativeIcon';\nimport { DecorativeIcon } from '../Icon/DecorativeIcon';\nimport type { IconName } from '../Icon/types';\nimport { Link } from '../Link/Link';\n\nexport enum BadgeState {\n  Error = 'error',\n  Info = 'info',\n  Success = 'success',\n  Warning = 'warning',\n}\n\nexport enum BadgeVariant {\n  Default = 'default',\n  Highlight = 'highlight',\n  Pop = 'pop',\n  Upgrade = 'upgrade',\n  Unlisted = 'unlisted',\n}\n\ntype BadgeBaseProps<T extends React.ElementType> = {\n  iconName?: IconName;\n  iconProps?: Omit<DecorativeIconProps, 'name'>;\n  disabled?: boolean;\n  lowercase?: boolean;\n  as?: T;\n  title?: string;\n  href?: string;\n  className?: string;\n  outset?: string;\n  children?: React.ReactNode;\n};\n\ninterface BadgeWithStateProps<T extends React.ElementType>\n  extends BadgeBaseProps<T> {\n  state?: BadgeState;\n  variant?: never;\n}\n\ninterface BadgeWithVariantProps<T extends React.ElementType>\n  extends BadgeBaseProps<T> {\n  state?: never;\n  variant?: BadgeVariant;\n}\n\nexport type BadgeProps<T extends React.ElementType = 'span'> = (\n  | BadgeWithStateProps<T>\n  | BadgeWithVariantProps<T>\n) &\n  Omit<React.ComponentPropsWithoutRef<T>, keyof BadgeBaseProps<T>>;\n\nconst stateCN = (state?: BadgeState) => {\n  const classNames = {\n    [BadgeState.Error]: `\n      tw-bg-red-lighter\n      tw-text-red-darkest\n      dark:tw-bg-red-darkest\n      dark:tw-text-red-lighter\n    `,\n    [BadgeState.Info]: `\n      tw-bg-gray-lighter\n      tw-text-black\n      dark:tw-bg-gray\n      dark:tw-text-white\n    `,\n    [BadgeState.Success]: `\n      tw-bg-green-lighter\n      tw-text-green-darkest\n      dark:tw-bg-green-darkest\n      dark:tw-text-green-lighter\n    `,\n    [BadgeState.Warning]: `\n      tw-bg-gold-lighter\n      tw-text-gold-darkest\n      dark:tw-bg-gold-darkest\n      dark:tw-text-gold-lighter\n    `,\n  };\n\n  if (!state || !classNames[state]) {\n    return null;\n  }\n\n  return cn('tw-font-medium', classNames[state]);\n};\n\nconst variantCN = (variant?: BadgeVariant) => {\n  const classNames = {\n    [BadgeVariant.Default]: `\n      tw-bg-gray-lighter\n      tw-font-medium\n      tw-text-black\n      dark:tw-bg-gray\n      dark:tw-text-white\n    `,\n    [BadgeVariant.Highlight]: `\n      tw-bg-teal-lighter\n      tw-font-semibold\n      tw-text-teal-darkest\n      dark:tw-bg-teal-lighter\n      dark:tw-text-teal-darkest\n    `,\n    [BadgeVariant.Pop]: `\n      tw-bg-gold\n      tw-font-semibold\n      tw-text-black\n      dark:tw-text-gold-darkest\n    `,\n    [BadgeVariant.Upgrade]: `\n      tw-bg-blue-lightest\n      tw-font-semibold\n      tw-text-black\n      dark:tw-text-blue-darkest\n    `,\n    [BadgeVariant.Unlisted]: `\n      tw-bg-gold-lightest\n      tw-font-medium\n      tw-text-gold-darkest\n      dark:tw-bg-gold-darkest\n      dark:tw-text-gold-lighter\n    `,\n  };\n\n  if (!variant || !classNames[variant]) {\n    return classNames[BadgeVariant.Default];\n  }\n\n  return classNames[variant];\n};\n\nexport const Badge = React.forwardRef(\n  <T extends React.ElementType = 'span'>(\n    props: BadgeProps<T>,\n    ref: React.ComponentPropsWithRef<T>['ref']\n  ) => {\n    const {\n      as = 'span',\n      state,\n      variant,\n      iconName,\n      iconProps,\n      disabled,\n      lowercase,\n      outset,\n      className,\n      href,\n      title,\n      children,\n      ...rest\n    } = props;\n\n    if (!children && !iconName) {\n      return null;\n    }\n\n    const Component = href ? Link : as;\n\n    const badgeCN = cn(\n      'tw-align-baseline',\n      !lowercase && 'tw-capitalize',\n      'tw-duration-200',\n      'tw-ease-out',\n      'tw-shrink-0 tw-grow-0 tw-basis-auto',\n      'tw-inline-block',\n      'tw-leading-4',\n      'tw-px-1',\n      'tw-py-0.5',\n      'tw-relative',\n      'tw-rounded-[4px]',\n      'tw-self-center',\n      'tw-text-sm',\n      'tw-transition',\n      'tw--top-px',\n      'tw-whitespace-nowrap',\n      stateCN(state) || variantCN(variant),\n      disabled && 'tw-pointer-events-none tw-opacity-[0.7]',\n      title && !href && 'tw-cursor-help',\n      href && 'hover:tw-underline',\n      outset,\n      className\n    );\n\n    return (\n      <Component\n        {...rest}\n        className={badgeCN}\n        to={href}\n        title={title}\n        ref={ref}\n      >\n        {iconName && (\n          <DecorativeIcon\n            {...iconProps}\n            name={iconName}\n            className={cn('tw-mr-0.5 tw-align-bottom', iconProps?.className)}\n            focusable=\"false\"\n          />\n        )}\n        {children}\n      </Component>\n    );\n  }\n) as <T extends React.ElementType = 'span'>(\n  props: BadgeProps<T> & { ref?: React.ComponentPropsWithRef<T>['ref'] }\n) => React.ReactElement | null;\n","import { cn } from '../helpers/cn';\nimport { Badge, BadgeVariant } from './Badge';\n\nexport interface BetaBadgeProps {\n  heading?: boolean;\n  className?: string;\n}\n\nexport const BetaBadge = ({ heading, className }: BetaBadgeProps) => {\n  const betaBadgeCN = cn(\n    heading && 'tw-top-1 !tw-self-start tw-align-top',\n    className\n  );\n\n  return (\n    <Badge as=\"sup\" variant={BadgeVariant.Pop} className={betaBadgeCN}>\n      Beta\n    </Badge>\n  );\n};\n","import { Badge, BadgeVariant } from './Badge';\n\nexport const MainBranchBadge = () => (\n  <Badge variant={BadgeVariant.Highlight}>Production</Badge>\n);\n","import { Badge, BadgeVariant } from './Badge';\n\nexport const NewBadge = ({ className }: { className?: string }) => (\n  <Badge className={className} variant={BadgeVariant.Highlight}>\n    New\n  </Badge>\n);\n","import { Badge, BadgeVariant } from './Badge';\n\nexport const PublishedPinnedBadge = ({\n  published,\n  pinned,\n}: {\n  published?: boolean;\n  pinned?: boolean;\n}) => {\n  if (published) {\n    return (\n      <Badge\n        variant={BadgeVariant.Pop}\n        className=\"!tw-top-0 tw-ml-1 tw-align-middle tw-normal-case\"\n        {...(pinned ? { iconName: 'pin' } : {})}\n      >\n        {pinned ? 'Pinned' : 'Default'}\n      </Badge>\n    );\n  }\n  return null;\n};\n","import { cn } from '../helpers/cn';\nimport { Badge, BadgeVariant } from './Badge';\n\nexport interface TrialBadgeProps {\n  heading?: boolean;\n  planName?: string;\n  featureName?: string;\n  className?: string;\n}\n\nexport const TrialBadge = ({\n  heading,\n  planName = 'Pro',\n  featureName = 'This feature',\n  className,\n}: TrialBadgeProps) => {\n  const trialBadgeCN = cn(\n    heading && 'tw-top-1 !tw-self-start tw-align-top',\n    className\n  );\n\n  return (\n    <Badge\n      as=\"sup\"\n      variant={BadgeVariant.Upgrade}\n      className={trialBadgeCN}\n      title={`${featureName} is a ${planName} feature`}\n    >\n      {planName} feature\n    </Badge>\n  );\n};\n","import { cn } from '../helpers/cn';\nimport type { Props as ButtonProps } from './Button';\nimport type { ButtonIconBasicProps } from './ButtonIcon';\n\ninterface ButtonCNProps\n  extends Partial<\n      Pick<\n        ButtonProps,\n        'level' | 'variant' | 'saving' | 'disabled' | 'outset' | 'className'\n      >\n    >,\n    Partial<Pick<ButtonIconBasicProps, 'callForAttention'>> {\n  type?: 'default' | 'icon';\n}\n\nexport const buttonCN = ({\n  type = 'default',\n  level = 'primary',\n  variant = 'standard',\n  saving,\n  disabled,\n  callForAttention,\n  outset,\n  className,\n}: ButtonCNProps): string =>\n  cn(\n    'btn',\n    `btn-${type}`,\n    `btn-${level}`,\n    `btn-${level}--${variant}`,\n    saving && `btn--saving btn-${level}--saving`,\n    disabled && `btn--disabled btn-${level}--disabled`,\n    callForAttention && 'btn--call-for-attention',\n    outset,\n    className\n  );\n","import { forwardRef } from 'react';\nimport * as React from 'react';\n\nimport { cn } from '../helpers/cn';\nimport { DecorativeIcon } from '../Icon/DecorativeIcon';\nimport type { IconName } from '../Icon/types';\nimport { useLink } from '../LinkProvider';\nimport { buttonCN } from './styles';\nimport type {\n  ButtonIconAdditionalProps,\n  ButtonIconXPosition,\n  ButtonLevel,\n  ButtonVariant,\n} from './types';\n\nconst withIconWrapperCN = cn(\n  'tw-flex',\n  'tw-justify-center',\n  'tw-flex-nowrap',\n  'tw-items-center'\n);\n\nexport const render = ({\n  children,\n  iconName,\n  iconXPosition,\n  iconClassName,\n  iconProps,\n}: {\n  iconName?: IconName;\n  iconXPosition?: ButtonIconXPosition;\n  iconClassName?: string;\n  iconProps?: ButtonIconAdditionalProps;\n  children: React.ReactNode;\n}) => {\n  const hasIconLeft = iconXPosition === 'left';\n\n  if (iconName) {\n    const renderIcon = (\n      <DecorativeIcon\n        {...iconProps}\n        className={cn(\n          'tw-shrink-0',\n          hasIconLeft ? 'tw-mr-2' : 'tw-ml-2',\n          iconProps?.className,\n          iconClassName\n        )}\n        focusable=\"false\"\n        name={iconName}\n      />\n    );\n    return hasIconLeft ? (\n      <span className={withIconWrapperCN}>\n        {renderIcon}\n        {children}\n      </span>\n    ) : (\n      <span className={withIconWrapperCN}>\n        {children}\n        {renderIcon}\n      </span>\n    );\n  }\n\n  return children;\n};\n\ninterface NetlifyButtonProps {\n  /* Two adjacent buttons should not have the same level */\n  level?: ButtonLevel;\n  variant?: ButtonVariant;\n  saving?: boolean;\n  disabled?: boolean;\n  iconName?: IconName;\n  iconXPosition?: ButtonIconXPosition;\n  iconClassName?: string;\n  iconProps?: ButtonIconAdditionalProps;\n  outset?: string;\n  type?: 'button' | 'submit' | 'reset';\n  activeClassName?: string;\n}\n\nexport interface ButtonProps\n  extends React.ComponentPropsWithoutRef<'button'>,\n    NetlifyButtonProps {}\n\ninterface AnchorProps\n  extends Omit<React.ComponentPropsWithoutRef<'a'>, 'type'>,\n    NetlifyButtonProps {\n  /** To render an HTML link. */\n  to?: string;\n  /** To render an HTML link. */\n  href?: string;\n}\n\ntype Element = HTMLAnchorElement | HTMLButtonElement;\n\nexport type Props = ButtonProps | AnchorProps;\n\n/**\n * For HTML buttons and links styled as buttons.\n */\nexport const Button = forwardRef<Element, ButtonProps | AnchorProps>(\n  (\n    {\n      children,\n      variant,\n      level,\n      saving = false,\n      disabled = false,\n      iconName,\n      iconXPosition = 'left',\n      iconClassName,\n      iconProps,\n      outset,\n      type = 'button',\n      className,\n      activeClassName,\n      onClick,\n      ...rest\n    },\n    ref\n  ) => {\n    const renderLink = useLink();\n    children = children && (\n      <>\n        {children}\n        {saving && '...'}\n      </>\n    );\n\n    const CN = buttonCN({\n      level,\n      variant,\n      saving,\n      disabled,\n      outset,\n      className,\n    });\n\n    const handleClick = (e) => {\n      if (saving) {\n        e.preventDefault();\n\n        return;\n      }\n\n      return onClick?.(e);\n    };\n\n    const commonProps = {\n      className: CN,\n      onClick: handleClick,\n      disabled,\n      ...(saving && { 'aria-disabled': true }),\n      children: render({\n        children,\n        iconName,\n        iconXPosition,\n        iconClassName,\n        iconProps,\n      }),\n    };\n\n    if (('to' in rest || 'href' in rest) && (rest.to || rest.href)) {\n      return renderLink({\n        ref: ref as React.ForwardedRef<HTMLAnchorElement>,\n        ...rest,\n        ...commonProps,\n        activeClassName,\n      });\n    }\n\n    return (\n      <button\n        ref={ref as React.ForwardedRef<HTMLButtonElement>}\n        {...(rest as ButtonProps)}\n        {...commonProps}\n        type={type}\n      />\n    );\n  }\n);\n","import * as React from 'react';\n\nimport { cn } from '../helpers/cn';\n\nexport type ButtonGroupProps = {\n  children: React.ReactNode;\n  outset?: string;\n  className?: string;\n};\n\nexport const ButtonGroup = ({\n  children,\n  outset,\n  className,\n  ...rest\n}: ButtonGroupProps) => {\n  return (\n    <div\n      {...rest}\n      className={cn(\n        'tw-flex',\n        'tw-w-full',\n        'tw-flex-wrap',\n        'tw-items-center',\n        'tw-justify-end',\n        'tw-actions-flex-gap-4',\n        'md:tw-w-auto',\n        'md:tw-justify-start',\n        outset,\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { cn } from '../helpers/cn';\nimport { AccessibleIcon } from '../Icon/AccessibleIcon';\nimport type { IconName } from '../Icon/types';\nimport { useLink } from '../LinkProvider';\nimport { buttonCN } from './styles';\nimport type { ButtonLevel, ButtonVariant } from './types';\n\nexport interface ButtonIconBasicProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void;\n  level?: ButtonLevel;\n  variant?: ButtonVariant;\n  saving?: boolean;\n  disabled?: boolean;\n  callForAttention?: boolean;\n  outset?: string;\n  width?: number;\n  height?: number;\n  activeClassName?: string;\n  iconWrapperClassName?: string;\n  /** To render an HTML link. */\n  to?: string;\n  /** To render an HTML link. */\n  href?: string;\n}\n\nexport interface ButtonIconWithChildrenProps extends ButtonIconBasicProps {\n  children: React.ReactNode;\n  iconName?: IconName;\n  title?: string;\n}\n\nexport interface ButtonIconWithoutChildrenProps extends ButtonIconBasicProps {\n  iconName: IconName;\n  title: string;\n}\n\nexport type ButtonIconProps =\n  | ButtonIconWithChildrenProps\n  | ButtonIconWithoutChildrenProps;\n\ntype Element = HTMLAnchorElement | HTMLButtonElement;\n\nexport const ButtonIcon = React.forwardRef<Element, ButtonIconProps>(\n  (\n    {\n      children,\n      variant,\n      level,\n      saving = false,\n      disabled = false,\n      iconName,\n      title,\n      callForAttention,\n      outset,\n      type = 'button',\n      className,\n      activeClassName,\n      width,\n      height = width,\n      iconWrapperClassName = '',\n      onClick,\n      'aria-label': label = title,\n      ...rest\n    },\n    ref\n  ) => {\n    const renderLink = useLink();\n\n    if (!iconName && !children) {\n      return null;\n    }\n\n    const CN = buttonCN({\n      type: 'icon',\n      level,\n      variant,\n      saving,\n      disabled,\n      callForAttention,\n      outset,\n      className,\n    });\n\n    const handleClick = (e) => {\n      if (saving) {\n        e.preventDefault();\n\n        return;\n      }\n\n      return onClick?.(e);\n    };\n\n    const iconWrapper = (\n      <span\n        className={cn(\n          'tw-absolute tw-left-1/2 tw-top-1/2 tw--translate-x-1/2 tw--translate-y-1/2',\n          iconWrapperClassName\n        )}\n      >\n        {iconName && title ? (\n          <AccessibleIcon\n            title={title}\n            name={iconName}\n            width={width}\n            height={height}\n            className=\"!tw-block tw-align-baseline\"\n          />\n        ) : (\n          children\n        )}\n      </span>\n    );\n\n    const commonProps = {\n      'aria-label': label,\n      className: CN,\n      onClick: handleClick,\n      disabled,\n      ...(saving && { 'aria-disabled': true }),\n      children: iconWrapper,\n    };\n\n    const { to, href } = rest;\n\n    if (to || href) {\n      return renderLink({\n        ref: ref as React.ForwardedRef<HTMLAnchorElement>,\n        ...(rest as React.ComponentPropsWithoutRef<'a'>),\n        ...commonProps,\n        activeClassName,\n      });\n    }\n\n    return (\n      <button\n        ref={ref as React.ForwardedRef<HTMLButtonElement>}\n        {...rest}\n        {...commonProps}\n        type={type}\n      />\n    );\n  }\n);\n\nexport default ButtonIcon;\n","import {isValidElement as $4MPRY$isValidElement} from \"react\";\n\n/* eslint-disable @typescript-eslint/no-explicit-any */ \nfunction $090815f5086f7f29$var$reactToText(node, resolvers) {\n    if (typeof node === \"string\" || typeof node === \"number\" || typeof node === \"boolean\") return node.toString();\n    if (!node) return \"\";\n    if (Array.isArray(node)) return node.map((entry)=>$090815f5086f7f29$var$reactToText(entry, resolvers)).join(\"\");\n    const [nodeType, nodeProps] = /*#__PURE__*/ (0, $4MPRY$isValidElement)(node) ? [\n        node.type,\n        node.props\n    ] : [\n        null,\n        null\n    ];\n    // check if custom resolver is available\n    if (nodeType && resolvers?.has(nodeType)) {\n        const resolver = resolvers.get(nodeType);\n        return resolver(nodeProps);\n    }\n    // Because ReactNode includes {} in its union we need to jump through a few hoops.\n    const props = node.props ? node.props : {};\n    if (!props || !props.children) return \"\";\n    return $090815f5086f7f29$var$reactToText(props.children, resolvers);\n}\nvar $090815f5086f7f29$export$2e2bcd8739ae039 = $090815f5086f7f29$var$reactToText;\n\n\nexport {$090815f5086f7f29$export$2e2bcd8739ae039 as default};\n//# sourceMappingURL=module.js.map\n","import type { History } from 'history';\nimport type { ReactNode } from 'react';\nimport { createContext, useContext } from 'react';\n\nexport type HistoryProviderProps = {\n  history: History;\n  children: ReactNode;\n};\n\nconst HistoryContext = createContext<\n  HistoryProviderProps['history'] | undefined\n>(undefined);\n\nexport const HistoryProvider = ({\n  children,\n  history,\n}: HistoryProviderProps) => {\n  return (\n    <HistoryContext.Provider value={history}>\n      {children}\n    </HistoryContext.Provider>\n  );\n};\n\nexport const useHistory = () => {\n  const historyContext = useContext(HistoryContext);\n\n  if (!historyContext) {\n    throw new Error('useHistory must be used within a HistoryContext');\n  }\n\n  return historyContext;\n};\n","export const isNetlifyUrl = (url: string) => {\n  const isAnchor = url.charAt?.(0) === '#';\n  const isExternal = url && !isAnchor;\n  let isNetlifyProperty = !isExternal;\n\n  if (isExternal) {\n    try {\n      const { origin } = new URL(url);\n      isNetlifyProperty =\n        /\\.netlify\\.com$/.test(origin) || /\\.stackbit\\.com$/.test(origin);\n    } catch {}\n  }\n\n  return isNetlifyProperty;\n};\n","import { type RefObject, useEffect, useState } from 'react';\n\nconst isWithinOnePixel = (a: number, b: number) => Math.abs(a - b) <= 1;\n\nexport const useDropdownAlignment = (\n  dropdownContentRef: RefObject<HTMLElement>,\n  preferredAlign: 'left' | 'right' = 'left'\n) => {\n  const [dropdownAlign, setDropdownAlign] = useState(preferredAlign);\n\n  useEffect(() => {\n    setDropdownAlign(preferredAlign);\n  }, [preferredAlign]);\n\n  useEffect(() => {\n    const { current: dropdownContent } = dropdownContentRef;\n\n    if (!dropdownContent) {\n      return;\n    }\n\n    const handleIntersection: IntersectionObserverCallback = ([\n      intersectionEntry,\n    ]) => {\n      const { boundingClientRect, intersectionRect, intersectionRatio } =\n        intersectionEntry;\n      const { left: visibleLeft, right: visibleRight } = intersectionRect;\n      const { left: elementLeft, right: elementRight } = boundingClientRect;\n\n      if (intersectionRatio === 0) {\n        setDropdownAlign(preferredAlign);\n        return;\n      }\n\n      // Dropdown content is fully visible, so no need to adjust alignment\n      if (intersectionRatio === 1) {\n        return;\n      }\n\n      const isLeftInView = isWithinOnePixel(visibleLeft, elementLeft);\n      const isRightInView = isWithinOnePixel(visibleRight, elementRight);\n\n      if (!isLeftInView) {\n        setDropdownAlign('left');\n        return;\n      }\n\n      if (!isRightInView) {\n        setDropdownAlign('right');\n        return;\n      }\n\n      setDropdownAlign(preferredAlign);\n    };\n\n    // Listen for when dropdown content becomes only partially visible in the viewport (threshold of 0 is crossed)\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: [0, 1],\n    });\n\n    observer.observe(dropdownContent);\n\n    return () => observer.disconnect();\n  }, [dropdownContentRef, preferredAlign]);\n\n  return dropdownAlign;\n};\n","import type {\n  DownshiftProps as IDownshiftProps,\n  UseSelectStateChange,\n} from 'downshift';\nimport Downshift from 'downshift';\nimport { useRef } from 'react';\nimport reactToText from 'react-to-text';\n\nimport { Button } from '../Button/Button';\nimport ButtonIcon from '../Button/ButtonIcon';\nimport type { ButtonLevel } from '../Button/types';\nimport { cn } from '../helpers/cn';\nimport { useHistory } from '../HistoryProvider';\nimport { AccessibleIcon } from '../Icon/AccessibleIcon';\nimport { DecorativeIcon } from '../Icon/DecorativeIcon';\nimport type { IconName } from '../Icon/types';\nimport { isNetlifyUrl } from '../Link/helpers';\nimport { Link } from '../Link/Link';\nimport { useDropdownAlignment } from './useDropdownAlignment';\n\nconst defaultItemToString = <ItemValue = string,>(\n  item: IDropdownItem<ItemValue> | null\n): string => {\n  return reactToText(item?.label || '').trim();\n};\n\nconst toggleToString = <ItemValue = string,>(\n  toggle: Toggle | IDropdownItem<ItemValue> | null\n): string => {\n  return reactToText(toggle?.label || '').trim();\n};\n\ntype ButtonConfigMapItem = {\n  level: ButtonLevel;\n  className?: string;\n};\n\nconst buttonConfigMap: { [key: string]: ButtonConfigMapItem } = {\n  default: {\n    level: 'secondary',\n  },\n  bare: {\n    level: 'tertiary',\n  },\n  'bare-large': {\n    level: 'tertiary',\n    className: cn(\n      'tw-text-xl',\n      'tw-font-semibold',\n      '!tw-leading-none',\n      'tw-w-auto',\n      'tw-text-black',\n      'dark:tw-text-white',\n      'dark:hover:tw-bg-transparent'\n    ),\n  },\n  primary: {\n    level: 'primary' as ButtonLevel,\n  },\n};\n\nconst SelectedIcon = () => (\n  <AccessibleIcon\n    title=\"selected\"\n    aria-label=\"selected\"\n    name=\"checkmark\"\n    className=\"tw-absolute tw-right-4 tw-top-1/2 tw--translate-y-1/2\"\n    width={12}\n  />\n);\n\nexport interface IDropdownItem<Item = string> {\n  [key: string]: unknown;\n  label: string | React.ReactNode;\n  value?: Item;\n  className?: string | Record<string, boolean>;\n  action?: (...args) => void;\n  onClick?: () => void;\n  selected?: boolean;\n  active?: boolean;\n  divider?: boolean;\n  to?: string;\n  href?: string;\n  disabled?: boolean;\n}\n\ntype DropdownItemGroup<ItemValue = string> = {\n  label?: string | React.ReactNode;\n  items: IDropdownItem<ItemValue>[];\n  relativeIndex?: number;\n};\n\ntype InferedDropdownProps<ItemValue = string> = {\n  items?: IDropdownItem<ItemValue>[];\n  itemGroups?: DropdownItemGroup<ItemValue>[];\n  onStateChange?: (changes: UseSelectStateChange<string>) => void;\n};\n\ntype Toggle = {\n  label: string | React.ReactNode;\n  ariaLabel?: string;\n  activeClassName?: string;\n  inactiveClassName?: string;\n  className?: string;\n  saving?: boolean;\n};\n\ninterface IDropdownProps<ItemValue = string>\n  extends Omit<IDownshiftProps<IDropdownItem<ItemValue>>, 'onSelect'> {\n  alignRight?: boolean;\n  positionMenuAbove?: boolean;\n  className?: string;\n  toggle?: Toggle;\n  noCaret?: boolean;\n  onClick?: () => void;\n  onSelect?: (selectedItem: IDropdownItem<ItemValue> | null) => void;\n  scrollable?: boolean;\n  disabled?: boolean;\n  variant?: keyof typeof buttonConfigMap;\n  menu?: {\n    className?: string;\n  };\n  caret?: {\n    className?: string;\n    cancelWidth?: boolean;\n    iconName?: IconName;\n    width?: number;\n    height?: number;\n  };\n  pinnedItems?: IDropdownItem<ItemValue>[] | null;\n  condensed?: boolean;\n  noCheck?: boolean;\n  iconButton?: IconName;\n}\n\ntype ProviderProps =\n  | { provider?: undefined; ButtonAuthProvider?: undefined }\n  | {\n      provider: string;\n      ButtonAuthProvider: (props) => JSX.Element;\n    };\n\nexport type DropdownProps<ItemValue = string> =\n  InferedDropdownProps<ItemValue> & IDropdownProps<ItemValue> & ProviderProps;\n\nexport function Dropdown<ItemValue>({\n  className,\n  toggle,\n  items = [],\n  menu,\n  noCaret,\n  onClick,\n  onSelect,\n  scrollable = false,\n  disabled = false,\n  alignRight = false,\n  positionMenuAbove = false,\n  variant = 'default',\n  provider,\n  ButtonAuthProvider,\n  caret,\n  pinnedItems = [],\n  condensed,\n  itemGroups,\n  noCheck,\n  iconButton,\n  itemToString = defaultItemToString,\n  ...rest\n}: DropdownProps<ItemValue>) {\n  const dropdownContentRef = useRef<HTMLElement | null>(null);\n  const browserHistory = useHistory();\n\n  const align = useDropdownAlignment(\n    dropdownContentRef,\n    alignRight ? 'right' : 'left'\n  );\n\n  const handleSelect = (selectedItem, other) => {\n    if (!selectedItem) {\n      return;\n    }\n\n    const { to, href, reloadPage } = selectedItem;\n\n    onSelect?.(selectedItem);\n\n    // When triggered by the keyboard, links inside the dropdown have not been invoked directly since focus technically\n    // remains on the dropdown button as per downshift behaviour.\n    // Therefore, if the item includes a link, we make sure it's pushed onto the browser history\n    if (href) {\n      const isNetlifyLink = isNetlifyUrl(href);\n      const options = isNetlifyLink ? 'noopener' : 'noopener, noreferrer';\n      window.open(href, '_blank', options);\n      return;\n    }\n    // The reload page prop is a workaround for site switcher state management issues,\n    // making sure a full page reload happens on this route change\n    if (to && reloadPage) {\n      window.location.href = to;\n      return;\n    }\n    if (to) {\n      browserHistory.push(to);\n    }\n  };\n\n  const buttonConfig = buttonConfigMap[variant];\n\n  itemGroups?.forEach((itemGroup, index) => {\n    if (index > 0) {\n      const prevGroup = itemGroups[index - 1];\n      itemGroup.relativeIndex =\n        (prevGroup.relativeIndex ? prevGroup.relativeIndex : 0) +\n        prevGroup.items.length;\n    } else {\n      itemGroup.relativeIndex = 0;\n    }\n  });\n\n  const isItemSelected = (\n    item: IDropdownItem<ItemValue>,\n    selectedItem: IDropdownItem<ItemValue> | null\n  ) => {\n    if (item.selected) {\n      return true;\n    }\n    const stringifiedItem = itemToString(item);\n    if (stringifiedItem && selectedItem) {\n      return stringifiedItem === itemToString(selectedItem);\n    }\n  };\n\n  const checkIfExists = (obj, prop) =>\n    typeof obj === 'object' && Boolean(obj[prop]);\n  const applyIfExists = (obj, prop) =>\n    checkIfExists(obj, prop) ? obj[prop] : ``;\n\n  const countOfAllItems =\n    itemGroups?.reduce((prevVal, group) => {\n      const groupSize =\n        applyIfExists(group.items, 'size') || group.items?.length || 0;\n      return prevVal + groupSize;\n    }, 0) ||\n    applyIfExists(items, 'size') ||\n    items?.length;\n\n  return (\n    <Downshift<IDropdownItem<ItemValue>>\n      onSelect={handleSelect}\n      itemToString={itemToString}\n      {...rest}\n    >\n      {({\n        getRootProps,\n        getToggleButtonProps,\n        getItemProps,\n        isOpen,\n        toggleMenu,\n        selectedItem,\n        highlightedIndex,\n        getInputProps,\n        getMenuProps,\n      }) => {\n        const hasMenu = toggle ? countOfAllItems > 0 : countOfAllItems > 1;\n        const button =\n          toggle || selectedItem || (items.length ? items[0] : undefined);\n\n        const label = button?.label;\n\n        if (!label) {\n          return null;\n        }\n\n        const menuProps = getMenuProps(\n          {\n            'aria-labelledby': undefined,\n          },\n          { suppressRefError: true }\n        );\n\n        const rootProps = {\n          ...getRootProps(\n            /* NOTE: Override the default Downshift \"role='combobox'\" and \"aria-labelledby\" attribute,\n              since we are using Downshift for dropdown-select style functionality only and not autocomplete or input.\n              See https://github.com/downshift-js/downshift/issues/750#issuecomment-524650373\n            */\n            {\n              'aria-labelledby': undefined,\n              role: undefined,\n            },\n            /* NOTE: We suppress ref errors since we are applying to a div, not a custom component.\n              See https://github.com/downshift-js/downshift/issues/731#issuecomment-729758697\n            */\n            { suppressRefError: true }\n          ),\n        };\n\n        if (!hasMenu) {\n          return toggle ? null : (\n            <div className={className} {...rootProps}>\n              {label}\n            </div>\n          );\n        }\n\n        const DropdownButton = provider\n          ? ButtonAuthProvider\n          : iconButton\n            ? ButtonIcon\n            : Button;\n\n        const shouldUseGroupedList =\n          (itemGroups && itemGroups?.length > 0) ||\n          (pinnedItems && pinnedItems.length > 0);\n        const MenuWrapper = shouldUseGroupedList ? 'ul' : 'div';\n\n        const toggleProvidedAriaLabel =\n          typeof toggle === 'object' && toggle.ariaLabel\n            ? toggle.ariaLabel\n            : '';\n\n        return (\n          <div\n            className={cn('dropdown', className, {\n              open: isOpen,\n            })}\n            {...rootProps}\n          >\n            <DropdownButton\n              level={buttonConfig.level}\n              {...getToggleButtonProps({\n                'aria-label': `${toggleProvidedAriaLabel || toggleToString(button)}. ${\n                  isOpen ? 'Close menu' : 'Open menu'\n                }`,\n                'aria-activedescendant':\n                  getInputProps()['aria-activedescendant'],\n              })}\n              disabled={disabled}\n              name={toggleToString(button)}\n              onClick={() => {\n                toggleMenu();\n                // call onClick if present and menu is closed\n                if (onClick && !isOpen) {\n                  onClick();\n                }\n              }}\n              className={\n                provider\n                  ? 'tw-w-full tw-bg-white dark:tw-bg-black'\n                  : cn(\n                      buttonConfig.className || '',\n                      applyIfExists(button, 'className'),\n                      {\n                        [applyIfExists(button, `activeClassName`)]:\n                          checkIfExists(button, 'active') || isOpen,\n                        [applyIfExists(button, `inactiveClassName`)]:\n                          !checkIfExists(button, 'active') && !isOpen,\n                      }\n                    )\n              }\n              provider={provider}\n              condensed={condensed}\n              saving={checkIfExists(button, 'saving')}\n              title={toggleToString(button)}\n              iconName={iconButton}\n            >\n              {label}\n              {!noCaret && !checkIfExists(button, 'saving') && (\n                <DecorativeIcon\n                  name={caret?.iconName || 'caret-down'}\n                  width={caret?.width || 12}\n                  height={caret?.height || 12}\n                  className={cn(\n                    'tw-ml-2 tw-transition-transform tw-duration-100 tw-ease-cubic-bezier',\n                    caret?.className,\n                    isOpen && 'tw--rotate-180 tw-transform',\n                    caret?.cancelWidth && 'tw--mr-5'\n                  )}\n                />\n              )}\n            </DropdownButton>\n            <MenuWrapper\n              className={cn('dropdown-inner dropdown-menu', menu?.className, {\n                '!tw-left-auto !tw-right-0': align === 'right',\n                'tw-bottom-[calc(100%+theme(spacing.2))] tw-top-auto':\n                  positionMenuAbove,\n              })}\n              ref={dropdownContentRef}\n              {...(shouldUseGroupedList && menuProps)}\n            >\n              <div\n                className={cn({\n                  'dropdown-menu--scrollable': scrollable,\n                  'tw-overflow-x-hidden': scrollable,\n                })}\n              >\n                {(itemGroups || [{ items }]).map((item, index) => {\n                  const { label: groupLabel, items, relativeIndex } = item;\n                  return (\n                    <ul\n                      aria-labelledby={\n                        groupLabel ? `group-label-${index}` : undefined\n                      }\n                      key={`group-${index}`}\n                      {...(!shouldUseGroupedList && menuProps)}\n                    >\n                      {groupLabel && (\n                        <li\n                          id={`group-label-${index}`}\n                          role=\"presentation\"\n                          className={cn(\n                            'menuitem !tw-text-sm !tw-font-regular !tw-text-gray-darker dark:!tw-text-gray-lighter',\n                            { divider: index !== 0 }\n                          )}\n                        >\n                          {groupLabel}\n                        </li>\n                      )}\n                      {items.map((item, index) => {\n                        const {\n                          className,\n                          selected,\n                          active,\n                          divider,\n                          to,\n                          href,\n                          disabled,\n                          onClick,\n                        } = item;\n\n                        const itemRelativeIndex = relativeIndex\n                          ? relativeIndex + index\n                          : index;\n\n                        return (\n                          <li key={index}>\n                            <Link\n                              {...getItemProps({\n                                item,\n                                index: itemRelativeIndex,\n                                to,\n                                href,\n                                disabled,\n                                ...(noCheck\n                                  ? { 'aria-selected': undefined }\n                                  : {}),\n                                onClick: (e) => {\n                                  // Prevent duplicate navigation when clicking on a link (handled in onSelect)\n                                  e.preventDefault();\n                                  onClick?.();\n                                },\n                              })}\n                              className={cn('menuitem', className, {\n                                highlighted:\n                                  itemRelativeIndex === highlightedIndex,\n                                selected: noCheck ? null : selected,\n                                active:\n                                  active || isItemSelected(item, selectedItem),\n                                divider,\n                                disabled,\n                              })}\n                            >\n                              {item.label}\n                              {!noCheck &&\n                                isItemSelected(item, selectedItem) && (\n                                  <SelectedIcon />\n                                )}\n                            </Link>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  );\n                })}\n              </div>\n              {pinnedItems && pinnedItems.length > 0 && (\n                <ul className=\"divider\">\n                  {pinnedItems.map((pinnedItem, index) => {\n                    const { className, selected, active, to, href, onClick } =\n                      pinnedItem;\n                    // Offset to account for the scrollable/non-pinned items and ensure all indexes unique across both sets of items\n                    const relativeIndex = index + countOfAllItems;\n                    return (\n                      <li key={`pinned-${relativeIndex}`}>\n                        <Link\n                          {...getItemProps({\n                            item: pinnedItem,\n                            index: relativeIndex,\n                            to,\n                            href,\n                            onClick: (e) => {\n                              e.preventDefault();\n                              onClick?.();\n                            },\n                          })}\n                          className={cn('menuitem', className, {\n                            highlighted: relativeIndex === highlightedIndex,\n                            selected,\n                            active:\n                              active ||\n                              isItemSelected(pinnedItem, selectedItem),\n                          })}\n                        >\n                          {pinnedItem.label}\n                          {selected && <SelectedIcon />}\n                        </Link>\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n            </MenuWrapper>\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n}\n\nexport default Dropdown;\n\nexport { Downshift };\n","import {\n  type ComponentPropsWithoutRef,\n  forwardRef,\n  type ForwardRefRenderFunction,\n  type ReactNode,\n} from 'react';\nimport React from 'react';\n\nimport type { LocationDescriptor } from '../types';\nimport { isNetlifyUrl } from './helpers';\n\nexport interface HTMLLinkProps extends ComponentPropsWithoutRef<'a'> {\n  RouterLink:\n    | typeof React.Component\n    | React.ComponentType<{ to: LocationDescriptor; activeClassName?: string }>;\n  to?: string;\n  href?: string;\n  disabled?: boolean;\n  children?: ReactNode;\n  className?: string;\n  activeClassName?: string | undefined;\n}\n\nconst HTMLLinkBase: ForwardRefRenderFunction<\n  HTMLAnchorElement,\n  HTMLLinkProps\n> = (\n  {\n    to,\n    href,\n    disabled,\n    children,\n    className,\n    activeClassName,\n    RouterLink,\n    ...rest\n  },\n  ref\n) => {\n  const link = to || href || '#';\n  const isAnchor = link?.charAt?.(0) === '#';\n  const isExternal = href && !isAnchor;\n  const isNetlifyHref = href && isNetlifyUrl(href);\n\n  const withRef = {\n    ...((typeof ref === 'function' || ref?.hasOwnProperty('current')) && {\n      /*\n       ** ReactRouterLink needs innerRef\n       ** adapt when upgrading react-router\n       */\n      [href ? 'ref' : 'innerRef']: ref,\n    }),\n  };\n\n  if (disabled) {\n    // set default role=\"link\" on anchor without \"href\" (https://w3c.github.io/html-aria/#el-a-no-href) to prevent \"clickable\" announcement\n    const { role = 'link' } = rest;\n\n    return (\n      <a role={role} aria-disabled=\"true\" className={className} {...withRef}>\n        {children}\n      </a>\n    );\n  }\n\n  if (isExternal) {\n    const { target = '_blank', ...restWithoutTarget } = rest;\n    return (\n      <a\n        className={className}\n        target={target}\n        {...(target === '_blank' && {\n          rel: isNetlifyHref ? 'noopener' : 'noopener noreferrer',\n          'aria-describedby': 'open-in-new-tab',\n        })}\n        href={href}\n        {...restWithoutTarget}\n        {...withRef}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  if (isAnchor) {\n    return (\n      <a href={link} className={className} {...rest} {...withRef}>\n        {children}\n      </a>\n    );\n  }\n\n  if (RouterLink) {\n    return (\n      <RouterLink\n        to={link}\n        className={className}\n        activeClassName={activeClassName}\n        {...rest}\n        {...withRef}\n      >\n        {children}\n      </RouterLink>\n    );\n  }\n\n  console.warn(\n    `The RouterLink prop of HTMLLink is not defined. Check the return of the renderLink at LinkProvider`\n  );\n  return null;\n};\n\nexport const HTMLLink = forwardRef<HTMLAnchorElement, HTMLLinkProps>(\n  HTMLLinkBase\n);\n","import { cn } from '../helpers/cn';\n\nexport enum LogoSize {\n  Tiny = 'tiny',\n  XSmall = 'xs',\n  Small = 'sm',\n  Medium = 'md',\n  Large = 'lg',\n  Full = 'full',\n  SitesHero = 'sitesHero',\n}\n\nexport const logoSizeCN = (size: LogoSize) => {\n  switch (size) {\n    case LogoSize.Tiny:\n      return 'tw-w-5 tw-rounded-[2px] tw-text-xs tw-leading-normal';\n    case LogoSize.XSmall:\n      // Matches a standard Avatar component size\n      return 'tw-w-10 tw-rounded-sm tw-text-lg tw-leading-normal';\n    case LogoSize.Small:\n      return 'tw-w-16 tw-rounded-lg tw-text-[28px] tw-leading-normal';\n    case LogoSize.Medium:\n      return cn(\n        // Inner-height of the OrganizationOverviewHero card\n        'tw-w-32',\n        'tw-rounded-lg',\n        'tw-text-[56px]',\n        'tw-leading-chill'\n      );\n    case LogoSize.Large:\n      return cn(\n        // Maximum height of the TeamOverviewHero card\n        'tw-w-52 [@media(min-width:1330px)]:tw-w-[188px]',\n        'tw-rounded-lg',\n        'tw-text-[80px]',\n        'tw-leading-chill'\n      );\n    case LogoSize.Full:\n      return 'tw-w-full tw-rounded-lg tw-text-[80px] tw-leading-chill';\n    case LogoSize.SitesHero:\n      // Height of the sites hero area on wider viewports\n      return 'tw-w-[83px] tw-rounded-lg tw-text-[32px] tw-leading-chill';\n  }\n};\n\nexport const imageCN = cn(\n  'tw-block',\n  'tw-h-full',\n  'tw-w-full',\n  'tw-object-cover'\n);\nexport const iconCN = cn(\n  imageCN,\n  'tw-text-white',\n  'tw-flex',\n  'tw-items-center',\n  'tw-justify-center',\n  'tw-font-semibold'\n);\n\nexport const getAltText = (prefix: string, name?: string) =>\n  name && `${prefix} for ${name}`;\n","import lodashSplit from 'lodash/split';\n\nimport { getPlaceholderGradientColorsFromId } from '../helpers/placeholderColors';\nimport { getAltText, iconCN } from './helpers';\n\nexport default function Placeholder({ placeholderName, teamId, name }) {\n  const placeholderColorPalette = getPlaceholderGradientColorsFromId(teamId);\n\n  const accessibilityProps = { role: undefined as string | undefined };\n  if (name) {\n    accessibilityProps.role = 'img';\n    accessibilityProps['aria-label'] = getAltText('Placeholder logo', name);\n  } else {\n    accessibilityProps['aria-hidden'] = 'true';\n  }\n\n  return (\n    <span\n      className={iconCN}\n      {...accessibilityProps}\n      style={{\n        background: `linear-gradient(to bottom right, ${placeholderColorPalette.to}, ${placeholderColorPalette.from})`,\n      }}\n    >\n      {placeholderName ? (\n        lodashSplit(placeholderName, '', 1)[0].toUpperCase() // lodash allows for fancy emojis as the first letter of the username\n      ) : (\n        <svg\n          viewBox=\"0 0 100 100\"\n          data-testid=\"default-logo\"\n          aria-hidden=\"true\"\n        >\n          <use\n            width=\"50%\"\n            height=\"50%\"\n            x=\"25%\"\n            y=\"25%\"\n            href=\"#netlify-logo-mono\"\n            fill=\"#fff\"\n            opacity=\".75\"\n          />\n        </svg>\n      )}\n    </span>\n  );\n}\n","import { cn } from '../helpers/cn';\nimport { Picture } from '../Picture/Picture';\nimport { getAltText, imageCN, LogoSize, logoSizeCN } from './helpers';\nimport Placeholder from './LogoPlaceholder';\n\nexport interface LogoProps {\n  /** The name of the Team/Organization that the logo is assigned to */\n  name?: string;\n  /** The id of the Team/Organization that the logo is assigned to */\n  teamId?: string;\n  /** The width and height of the logo */\n  size?: LogoSize;\n  /** The absolute path to the logo */\n  src?: string;\n  /** Class name to pass to the outermost element */\n  className?: string;\n  /** Determines the text to show if no logo is provided */\n  placeholderName?: string;\n}\n\nexport const Logo = ({\n  name,\n  teamId,\n  size = LogoSize.Large,\n  src,\n  className,\n  placeholderName,\n}: LogoProps) => {\n  return (\n    <span\n      className={cn(\n        'tw-block tw-aspect-square tw-overflow-hidden',\n        logoSizeCN(size),\n        className\n      )}\n    >\n      {src ? (\n        <Picture\n          alt={name ? getAltText('Logo', name) || '' : ''}\n          className={imageCN}\n          url={src}\n          height={208}\n          width={208}\n          cover\n        />\n      ) : (\n        <Placeholder\n          placeholderName={placeholderName}\n          teamId={teamId}\n          name={name}\n        />\n      )}\n    </span>\n  );\n};\n","import * as React from 'react';\n\nimport { cn } from '../helpers/cn';\nimport { DecorativeIcon } from '../Icon/DecorativeIcon';\n\ninterface NavigationProps {\n  align?: 'start' | 'center' | 'end';\n  children?: React.ReactNode;\n  className?: string;\n  ordered?: boolean;\n  /* Determines if there should be a separator ('/') between every non-last item  */\n  separator?: boolean;\n  itemClassName?: string;\n  id?: string;\n}\n\nexport const Navigation = ({\n  align,\n  children,\n  className,\n  ordered = false,\n  separator = false,\n  itemClassName,\n  ...rest\n}: NavigationProps) => {\n  if (!children) return null;\n\n  const alignmentCN = () => {\n    switch (align) {\n      case 'start':\n        return 'tw-items-start';\n      case 'end':\n        return 'tw-items-end';\n      case 'center':\n      default:\n        return 'tw-items-center';\n    }\n  };\n\n  const listCN = cn(\n    'tw-flex',\n    'tw-flex-wrap',\n    alignmentCN(),\n    'tw-list-none',\n    'tw--mx-3',\n    'tw-my-0',\n    'tw-p-0',\n    className\n  );\n\n  const itemCN = cn('tw-flex', 'tw-items-center', 'tw-m-1', itemClassName);\n\n  const validChildren = React.Children.toArray(children).filter((child) =>\n    React.isValidElement(child)\n  );\n\n  const List = ordered ? 'ol' : 'ul';\n  const childrenCount = validChildren.length - 1;\n\n  return (\n    <List className={listCN} {...rest}>\n      {validChildren.map((child, index) => {\n        if (!child) {\n          return null;\n        }\n\n        return (\n          <li className={itemCN} key={`navigation-${index}`}>\n            {child}\n            {separator && index !== childrenCount && (\n              <DecorativeIcon\n                name=\"nav-separator\"\n                className=\"tw-mx-2 tw-hidden tw-shrink-0 tw-text-gray-light lg:tw-inline-block\"\n                data-testid=\"navigation-separator\"\n                width={11}\n                height={22}\n              />\n            )}\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n","import type { Props as ButtonProps } from '../Button/Button';\nimport { Button } from '../Button/Button';\nimport { cn } from '../helpers/cn';\n\ntype NavigationButtonProps = ButtonProps & {\n  active?: boolean;\n  large?: boolean;\n};\n\nconst navigationButtonCN = ({\n  active,\n  large,\n  className,\n}: NavigationButtonProps): string =>\n  cn(\n    'tw-w-auto',\n    'tw-font-semibold',\n    'tw-px-2',\n    'tw-min-h-9',\n    'tw-leading-6',\n    'tw-text-left',\n    'dark:hover:tw-text-teal-lightest',\n    'dark:hover:tw-bg-teal-darkest',\n    large && 'tw-text-xl',\n    active\n      ? ['tw-text-black', 'dark:tw-text-white']\n      : 'tw-text-gray-darker dark:tw-text-gray-light',\n    className\n  );\n\nexport const NavigationButton = ({\n  active,\n  large,\n  className,\n  ...rest\n}: NavigationButtonProps) => {\n  return (\n    <Button\n      level=\"tertiary\"\n      className={navigationButtonCN({\n        active,\n        large,\n        className,\n      })}\n      {...rest}\n    />\n  );\n};\n","import { Badge, BadgeVariant } from '../Badge/Badge';\nimport {\n  BUSINESS_NAME,\n  ENTERPRISE_NAME,\n  LEGACY_CREATE_PLAN_UI_NAME,\n  ORB_FREE_NAME,\n  ORB_GROWTH_NAME,\n  ORB_PRO_NAME,\n  ORB_STARTER_NAME,\n  PRO_NAME,\n  STARTER_NAME,\n} from '../helpers/plans';\n\ninterface PlanBadgeProps {\n  plan: string;\n  href?: string | undefined;\n  children?: JSX.Element | string | undefined;\n  className?: string | undefined;\n}\n\nconst SPECIAL_PLANS = [\n  ORB_FREE_NAME,\n  ORB_STARTER_NAME,\n  ORB_PRO_NAME,\n  ORB_GROWTH_NAME,\n  STARTER_NAME,\n  PRO_NAME,\n  BUSINESS_NAME,\n  ENTERPRISE_NAME,\n  LEGACY_CREATE_PLAN_UI_NAME,\n].map((plan) => plan.toLowerCase());\n\nexport function PlanBadge({\n  plan,\n  href = '',\n  children = undefined,\n  className = '',\n}: PlanBadgeProps): JSX.Element {\n  const highlight = !SPECIAL_PLANS.includes(plan.toLowerCase());\n\n  return (\n    <Badge\n      variant={highlight ? BadgeVariant.Highlight : undefined}\n      href={href}\n      className={className}\n    >\n      {children || plan}\n    </Badge>\n  );\n}\n","import { cn } from '../helpers/cn';\n\nexport function SnapshotContainer({ children, wrap = false, className = '' }) {\n  return (\n    <div\n      className={cn(\n        'tw-flex',\n        'tw-gap-2',\n        wrap ? 'tw-flex-wrap' : 'tw-flex-col',\n        'snapshot',\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n","import { cn } from '../helpers/cn';\n\nconst WATERMARKS = {\n  email: 'before:tw-mask-image-icon-email',\n  support: 'before:tw-mask-image-icon-support',\n};\n\nconst PRIMARY = 'tw-bg-gradient-primary-light dark:tw-bg-gradient-primary-dark';\n\nexport const dropdownWrapperCN = cn(\n  'md:tw-relative',\n  'tw-static',\n  'tw-w-full',\n  'lg:tw-w-auto',\n  'tw-mx-0'\n);\n\nexport const notificationsButtonCN = ({ isOpen }) =>\n  cn(\n    'hover:tw-text-teal-darkest',\n    'hover:tw-bg-teal-lightest',\n    'focus:tw-text-teal-darkest',\n    'active:tw-text-teal-darkest',\n    'active:tw-bg-teal-lightest',\n    'dark:hover:tw-teal-lightest',\n    'dark:focus:tw-teal-lightest',\n    'dark:active:tw-teal-lightest',\n\n    'tw-flex',\n    'tw-flex-nowrap',\n    'tw-items-center',\n    'tw-justify-center',\n    isOpen\n      ? [\n          'tw-bg-teal-lightest',\n          'tw-text-teal-darkest',\n          'dark:tw-bg-teal-darkest',\n          'dark:tw-text-teal-lightest',\n          'tw-font-bold',\n        ]\n      : [\n          '!tw-font-medium',\n          'tw-bg-transparent',\n          'tw-text-gray-darker',\n          'dark:tw-text-gray-light',\n        ],\n    'tw-w-full',\n    'lg:tw-w-auto',\n    'lg:tw-px-3'\n  );\n\nexport const asideCN = cn(\n  'md:tw-max-w-auto',\n  'tw-absolute',\n  'tw-bg-white',\n  'tw-text-gray-darkest',\n  'tw-max-w-notifications',\n  'tw-mt-1',\n  'tw-opacity-100',\n  'tw-overflow-hidden',\n  'tw-rounded-lg',\n  'tw-shadow-deep',\n  'tw-top-[calc(theme(spacing.10)+theme(spacing.2))]',\n  'md:tw-top-10',\n  'tw-visible',\n  'tw-w-106',\n  'tw-z-dropdown',\n  'dark:tw-bg-gray-darkest',\n  'dark:tw-text-white'\n);\n\nexport const listItemCN = ({ watermark, primary }) =>\n  cn(\n    'tw-border-b',\n    'tw-border-gray-lightest',\n    'dark:tw-border-gray-dark',\n    'last:tw-border-b-0',\n    watermark && 'tw-bg-gray-lighter dark:tw-bg-black',\n    primary && PRIMARY\n  );\n\nexport const listItemLinkCN = ({ isHighlighted, watermark, primary }) =>\n  cn(\n    'tw-flex',\n    'tw-items-stretch',\n    'tw-px-4',\n    'tw-py-6',\n    'tw-text-inherit',\n    'hover:tw-no-underline',\n    'hover:tw-bg-gray-lighter',\n    'dark:hover:tw-bg-gray-darker',\n    isHighlighted && 'tw-bg-gray-lighter tw-no-underline dark:tw-bg-black',\n    watermark &&\n      cn(\n        'tw-overflow-hidden',\n        'before:tw-content-empty',\n        'before:tw-absolute',\n        'before:tw--bottom-10',\n        'before:tw-right-4',\n        'before:tw-w-42',\n        'before:tw-h-42',\n        WATERMARKS[watermark],\n        'before:tw-mask-no-repeat',\n        'before:tw-mask-cover',\n        'before:tw-bg-gray-light',\n        'before:tw-z-0',\n        '*:tw-z-1',\n        'dark:before:tw-bg-gray-darker',\n        'dark:hover:before:tw-bg-gray-dark'\n      ),\n    primary && PRIMARY\n  );\n\nexport const listItemHeadingCN = ({ watermark }) =>\n  cn(\n    'dark:tw-text-gray-lightest',\n    'tw-font-semibold',\n    'tw-leading-normal',\n    'tw-m-0',\n    'tw-text-inherit',\n    'tw-text-md',\n    watermark && 'tw-text-black dark:tw-text-white'\n  );\n\nexport const iconCN = ({ primary }) =>\n  cn(\n    'path:tw-fill-current',\n    'tw-grow-0',\n    'tw-shrink-0',\n    'tw-mr-2',\n    'tw-mt-1',\n    'tw-w-4',\n    'tw-text-gray',\n    'dark:tw-text-gray-light',\n    primary && 'tw-text-teal-darker dark:tw-text-teal-lighter'\n  );\n\nexport const metaCN = ({ watermark }) =>\n  cn(\n    'dark:tw-text-gray-lighter',\n    'tw-font-regular',\n    'tw-leading-normal',\n    'tw-mt-1',\n    'tw-text-muted',\n    'tw-text-sm',\n    watermark && 'tw-w-3/4'\n  );\n\nexport const externalLinkCN = ({ isHighlighted }) =>\n  cn(\n    'tw-bg-none',\n    'tw-border-none',\n    'tw-text-teal-darkest',\n    'tw-inline-block',\n    'tw-font-bold',\n    'tw-pr-6',\n    'tw-no-underline',\n    'hover:tw-underline',\n    'after:tw-content-arrow',\n    'after:tw-ml-1',\n    'after:tw-absolute',\n    'after:tw-transform',\n    'after:tw--rotate-45',\n    'dark:tw-text-teal-lighter',\n    isHighlighted && '!tw-underline'\n  );\n\nexport const badgeCN = cn(\n  'tw--top-px',\n  'tw-align-baseline',\n  'tw-bg-gray-light',\n  'tw-capitalize',\n  'tw-duration-200',\n  'tw-ease-out',\n  'tw-shrink-0 tw-grow-0 tw-basis-auto',\n  'tw-font-bold',\n  'tw-inline-block',\n  'tw-leading-tight',\n  'tw-ml-2',\n  'tw-px-1',\n  'tw-py-0.5',\n  'tw-relative',\n  'tw-rounded-sm',\n  'tw-self-center',\n  'tw-text-black',\n  'tw-text-sm',\n  'tw-whitespace-nowrap'\n);\n","import type { DownshiftProps } from 'downshift';\nimport Downshift from 'downshift';\nimport type { ReactNode } from 'react';\n\nimport { Button } from '../Button/Button';\nimport type { ButtonLevel } from '../Button/types';\nimport { cn } from '../helpers/cn';\nimport { billingPath, docsPath, forumsPath } from '../helpers/path';\nimport { useHistory } from '../HistoryProvider';\nimport { DecorativeIcon } from '../Icon/DecorativeIcon';\nimport type { IconName } from '../Icon/types';\nimport { isNetlifyUrl } from '../Link/helpers';\nimport {\n  asideCN,\n  badgeCN,\n  dropdownWrapperCN,\n  externalLinkCN,\n  iconCN,\n  listItemCN,\n  listItemHeadingCN,\n  listItemLinkCN,\n  metaCN,\n  notificationsButtonCN,\n} from './styles';\n\nconst AVAILABLE = 'Available';\nconst NO_CTA = 'No Call To Action';\nconst UPGRADE_CTA = 'UpgradeButton';\n\ninterface Props<Item = string> extends DownshiftProps<Item> {\n  userEmail?: string;\n  align?: string;\n  onClickUpgrade?: () => void;\n  onClickUpgradeForHighSupportPriority?: () => void;\n  accountSlug?: string;\n  accountSupportLevel?: number;\n  accountSupportPriority?: number;\n  showUpgrade?: boolean;\n  pricingUrl?: string;\n  buttonLevel?: ButtonLevel;\n}\n\ntype SupportDropdownItem = {\n  title: string;\n  iconName?: IconName;\n  href?: string;\n  primary?: boolean;\n  description: ReactNode;\n  children?: ReactNode;\n  watermark?: 'support' | 'email';\n  badge?: string;\n};\n\nexport function SupportDropdown({\n  userEmail,\n  align = 'left',\n  onClickUpgrade,\n  onClickUpgradeForHighSupportPriority,\n  isOpen,\n  accountSlug,\n  accountSupportLevel = 0,\n  accountSupportPriority,\n  showUpgrade = showUpgradeCallToAction(accountSupportLevel),\n  pricingUrl,\n  buttonLevel = 'tertiary',\n}: Props) {\n  const browserHistory = useHistory();\n\n  const accountIsHighSupportPriority = accountSupportPriority\n    ? accountSupportPriority >= 5\n    : false;\n\n  const redirectToPricingPage = () => {\n    if (pricingUrl) {\n      const isNetlifyLink = isNetlifyUrl(pricingUrl);\n      const options = isNetlifyLink ? 'noopener' : 'noopener, noreferrer';\n      window.open(pricingUrl, '_blank', options);\n      return;\n    }\n\n    if (accountSlug) {\n      browserHistory.push(billingPath({ slug: accountSlug }, 'pricing'));\n    }\n  };\n\n  const handleSelect = (selectedItem: string | null) => {\n    if (selectedItem === UPGRADE_CTA) {\n      onClickUpgrade?.();\n\n      if (accountIsHighSupportPriority) {\n        onClickUpgradeForHighSupportPriority?.();\n      } else {\n        redirectToPricingPage();\n      }\n    } else if (selectedItem && selectedItem !== NO_CTA) {\n      window.open(selectedItem, '_blank');\n    }\n  };\n\n  return (\n    <Downshift onSelect={handleSelect} isOpen={isOpen}>\n      {({\n        getToggleButtonProps,\n        getLabelProps,\n        getItemProps,\n        isOpen,\n        closeMenu,\n        highlightedIndex,\n        toggleMenu,\n      }) => {\n        const items: SupportDropdownItem[] = [\n          {\n            title: 'Ask Netlify',\n            iconName: 'ask-netlify',\n            href: getAskNetlifyUrl(),\n            primary: true,\n            description:\n              'Our generative AI chatbot assistant can quickly answer your questions about Netlify.',\n            children: 'Ask us anything',\n          },\n          {\n            title: 'Forums',\n            iconName: 'user',\n            href: forumsPath(),\n            description:\n              'Ask questions and find answers from Netlify Support staff and other community members.',\n            children: 'Visit Netlify Forums',\n          },\n          {\n            title: 'Docs',\n            iconName: 'file',\n            href: docsPath(),\n            description:\n              'Learn how to make the most of your Netlify sites with detailed instructions, tips, and reference materials.',\n            children: 'Visit our docs',\n          },\n        ];\n\n        if (accountIsHighSupportPriority) {\n          items.push({\n            title: 'Email',\n            iconName: 'email',\n            href: getSupportUrl(userEmail),\n            description: getSupportDescription(accountSupportLevel),\n            children: 'Email support',\n          });\n        }\n\n        if (showUpgrade) {\n          items.push({\n            title: accountIsHighSupportPriority\n              ? 'Enterprise Support'\n              : 'Email',\n            href: UPGRADE_CTA,\n            watermark: accountIsHighSupportPriority ? 'support' : 'email',\n            description: getUpgradeDescription(\n              accountIsHighSupportPriority && showUpgrade,\n              accountSupportLevel\n            ),\n            children: <Button variant=\"pop\">Upgrade</Button>,\n          });\n        } else {\n          items.push(\n            {\n              title: 'Slack',\n              iconName: 'slack',\n              badge: AVAILABLE,\n              description: (\n                <>\n                  <strong className=\"tw-font-semibold\">\n                    Visit your dedicated Slack channel\n                  </strong>{' '}\n                  to chat with your account team about implementation, best\n                  practices, go-live details, and broader support queries.\n                </>\n              ),\n            },\n            {\n              title: 'Emergency phone support',\n              iconName: 'phone',\n              badge: AVAILABLE,\n              description: (\n                <>\n                  For critical downtime emergencies, you can{' '}\n                  <strong className=\"tw-font-semibold\">\n                    call us at your teamâ€™s dedicated phone number\n                  </strong>\n                  .\n                </>\n              ),\n            }\n          );\n        }\n\n        return (\n          <div className={dropdownWrapperCN}>\n            <Button\n              {...getToggleButtonProps({\n                'aria-label': `Support. ${isOpen ? 'Close menu' : 'Open menu'}`,\n              })}\n              {...getLabelProps()}\n              level={buttonLevel}\n              className={notificationsButtonCN({ isOpen })}\n              onClick={() => toggleMenu()}\n            >\n              {/* Hide and reveal icons with CSS rather than swapping out SVG to avoid layout flashes as link becomes active and icon loads for first time */}\n              <DecorativeIcon\n                className={cn('tw-shrink-0', 'tw-mr-3', isOpen && 'tw-hidden')}\n                focusable=\"false\"\n                name=\"nav-support\"\n              />\n              <DecorativeIcon\n                className={cn('tw-shrink-0', 'tw-mr-3', !isOpen && 'tw-hidden')}\n                focusable=\"false\"\n                name=\"nav-support-active\"\n              />\n              <span\n                className=\"layout-toggleable-bold-text\"\n                data-text-content=\"Support\"\n              >\n                Support\n              </span>\n            </Button>\n            {isOpen && (\n              <aside\n                className={cn(asideCN, {\n                  'tw-left-auto tw-right-0': align === 'right',\n                })}\n              >\n                <ul className=\"tw-h-full tw-max-h-notifications-list tw-overflow-auto lg-height:tw-max-h-170\">\n                  {items.map(\n                    (\n                      {\n                        title,\n                        iconName,\n                        href,\n                        primary = false,\n                        watermark,\n                        badge,\n                        description,\n                        children,\n                      },\n                      index\n                    ) => {\n                      const isHighlighted = index === highlightedIndex;\n                      const Component = href ? 'a' : 'div';\n                      const isExternalLink =\n                        href && typeof children === 'string';\n\n                      return (\n                        <li\n                          key={title}\n                          className={listItemCN({ watermark, primary })}\n                        >\n                          <Component\n                            {...getItemProps({ index, item: href || NO_CTA })}\n                            tabIndex={-1}\n                            className={listItemLinkCN({\n                              isHighlighted,\n                              watermark,\n                              primary,\n                            })}\n                          >\n                            <span className=\"tw-sr-only\">Support: {title}</span>\n                            {iconName && (\n                              <DecorativeIcon\n                                name={iconName as IconName}\n                                className={iconCN({ primary })}\n                              />\n                            )}\n                            {/* Note: wrapper div exists to allow for flexbox layout */}\n                            <div>\n                              <div className=\"tw-flex tw-items-start tw-justify-between\">\n                                <p\n                                  className={listItemHeadingCN({\n                                    watermark,\n                                  })}\n                                >\n                                  <span className=\"tw-not-sr-only\">\n                                    {title}\n                                  </span>\n                                  {badge && (\n                                    <span className={badgeCN}>{badge}</span>\n                                  )}\n                                </p>\n                              </div>\n                              <p className={metaCN({ watermark })}>\n                                {description}\n                              </p>\n                              {/* Note: using <p> bc the actual <ConditionalWrapper> wraps this whole block */}\n                              {children && (\n                                <p\n                                  className={cn(\n                                    'tw-mt-2',\n                                    isExternalLink\n                                      ? externalLinkCN({ isHighlighted })\n                                      : undefined\n                                  )}\n                                >\n                                  {children}\n                                </p>\n                              )}\n                            </div>\n                          </Component>\n                        </li>\n                      );\n                    }\n                  )}\n                </ul>\n              </aside>\n            )}\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n}\n\nfunction getAskNetlifyUrl(message?: string) {\n  const url = new URL(docsPath('ask-netlify'));\n  const params = new URLSearchParams({ attr: 'app' });\n\n  if (message) params.set('message', message);\n\n  url.search = params.toString();\n\n  return url.href;\n}\n\nfunction getSupportDescription(level: number) {\n  if (level < 1) {\n    return 'Access support by email.';\n  }\n\n  return (\n    <>\n      Private support with guaranteed response times.\n      <br />\n      {level === 1 ? '(Business days, 6 AM â€” 5 PM PST/PDT)' : '24x7x365'}\n      <br />\n      Business critical: 1 hour\n      <br />\n      General issue: 4 hours\n    </>\n  );\n}\n\nfunction getSupportUrl(userEmail?: string) {\n  const url = new URL('/support', 'https://www.netlify.com');\n  const params = new URLSearchParams({\n    utm_source: 'app-dropdown',\n    utm_medium: 'app',\n    utm_campaign: 'support-insights',\n  });\n\n  if (userEmail) params.set('email', userEmail);\n\n  url.search = params.toString();\n\n  return url.href;\n}\n\nfunction getUpgradeDescription(upgrade: boolean, level: number) {\n  if (upgrade) {\n    return 'Upgrade to get guaranteed response times and dedicated emergency support.';\n  }\n  if (level === 1) {\n    return 'Upgrade to get a dedicated account team and emergency phone support.';\n  }\n  return 'Upgrade to a paid plan to privately email support.';\n}\n\nexport function showUpgradeCallToAction(accountSupportLevel: number) {\n  return accountSupportLevel < 2;\n}\n","import { Avatar, type AvatarUser } from '../Avatar/Avatar';\nimport { Dropdown, type IDropdownItem } from '../Dropdown/Dropdown';\n\ninterface UserDropdownProps {\n  user?: AvatarUser;\n  className?: string;\n  onLogout?: () => void;\n  alignRight?: boolean;\n  userPath: string;\n  links?: IDropdownItem[];\n}\n\nexport function UserDropdown({\n  user,\n  className,\n  onLogout,\n  userPath,\n  alignRight = true,\n  links = [],\n}: UserDropdownProps) {\n  if (!user) {\n    return null;\n  }\n\n  const { full_name: name = '', email = '' } = user || {};\n\n  const dropdownOptions = [\n    {\n      label: (\n        <>\n          {/* Data attributes are used for identifying the user in the Netliusers extension */}\n          <strong data-user-name={name} className=\"h4 tw-block\">\n            {name}\n          </strong>\n          <small data-user-email={email} className=\"meta\">\n            {email}\n          </small>\n        </>\n      ),\n      to: userPath,\n    },\n    ...links,\n    {\n      label: 'Sign out',\n      onClick: onLogout,\n      className: 'danger',\n    },\n  ].filter(Boolean);\n\n  return (\n    <Dropdown\n      alignRight={alignRight}\n      className={className}\n      noCaret\n      noCheck\n      variant=\"bare\"\n      toggle={{\n        ariaLabel: `User ${email}`,\n        className:\n          'tw-relative tw-rounded-full tw-w-9 tw-h-9 hover:tw-ring-2 focus:tw-ring-2',\n        label: (\n          <Avatar\n            user={user}\n            dropdown={true}\n            className=\"tw-border tw-border-white dark:tw-border-bgApp\"\n          />\n        ),\n      }}\n      menu={{\n        className: 'tw-top-10 tw-mt-1',\n      }}\n      items={dropdownOptions}\n    />\n  );\n}\n"],"names":["IconNameToPath","manageFocusInPopover","manageFocusInPopoverPlugin","isLoaded","BadgeState","BadgeVariant","badgeCN","React","$4MPRY$isValidElement","reactToText","items","item","index","className","disabled","onClick","LogoSize","iconCN","isOpen"],"mappings":";;;;;;;;;;;;;;AACA,MAAM,4BAA4B;AAClC,MAAM,6BAA6B;AA4BnC,MAAM,yBAAyB,CAAC;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR;AACF,MAAsC;AAEpC,QAAM,mBAAmB,CAAC,KAAK,MAAM,EAAE;AAElC,OAAA,SAAS,QAAQ,YAAY,QAAQ;AACxC,qBAAiB,KAAK,WAAW;AAChB,qBAAA;AAAA,MACf,KAAK,KAAK,MAAM,QAAQ,KAAK,CAAC,IAAI,KAAK,MAAM,SAAS,KAAK,CAAC;AAAA,IAAA;AAAA,EAC9D,OACK;AACL,qBAAiB,KAAK,KAAK,KAAK,MAAM,QAAQ,KAAK,CAAC,EAAE;AAAA,EACxD;AAEA,MAAI,UAAU;AACZ,qBAAiB,KAAK,UAAU;AAAA,EAClC;AAEO,SAAA,iBAAiB,KAAK,GAAG;AAClC;AAuCO,MAAM,mBAAmB,CAC9B,MAAc,IACd,YACW;AAEX,MACE,OAAO,QAAQ,YACf,IAAI,WAAW,OAAO,KACtB,IAAI,WAAW,yBAAyB,KACxC,IAAI,WAAW,0BAA0B,GACzC;AACO,WAAA;AAAA,EACT;AAUO,SAAA,GAAG,yBAAyB,GAAG,uBAAuB,OAAO,CAAC,IAAI,UAAU,GAAG,CAAC;AACzF;AAEO,MAAM,aAAa,CAAC;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AACF,MAA0C;AAIjC,SAAA,QAAQ,IAAI,CAAC,WAAwB;AACnC,WAAA;AAAA,MACL,QAAQ,iBAAiB,KAAK,EAAE,GAAG,SAAS,QAAQ;AAAA,MACpD,MAAM,SAAS,MAAM;AAAA,IAAA;AAAA,EACvB,CACD;AACH;ACnHO,MAAM,UAAU,CAAC;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU,CAAC,QAAQ,MAAM;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX,QAAQ;AAAA,EACR;AACF,MAAoB;AAClB,QAAM,UAAU,EAAE,OAAO,QAAQ,OAAO,SAAS;AACjD,QAAM,UAAU,WAAW;AAAA;AAAA,IAEzB,SAAS,WAAW,CAAC,MAAM,IAAI;AAAA,IAC/B;AAAA,IACA;AAAA,EAAA,CACD;AACK,QAAA,cAAc,iBAAiB,KAAK;AAAA,IACxC,GAAG;AAAA,IACH,QAAQ,kBAAkB,WAAW,QAAQ;AAAA,EAAA,CAC9C;AAGC,SAAA,qBAAC,WAAQ,EAAA,SAAkB,WACxB,UAAA;AAAA,IAAQ,QAAA,IAAI,CAAC,QAAQ,MACpB,oBAAC,UAA4B,EAAA,GAAG,OAAnB,GAAA,UAAU,CAAC,EAAgB,CACzC;AAAA,IACD;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAK;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAQ;AAAA,QACR,WAAW,GAAG,gBAAgB,SAAS,qBAAqB;AAAA,QAC5D;AAAA,MAAA;AAAA,IACF;AAAA,EACF,EAAA,CAAA;AAEJ;ACpDA,MAAM,SAAS;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,eAAe;AAAA,EACf,eAAe;AAAA,EACf,cAAc;AAAA,EACd,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB,qBAAqB;AAAA,EACrB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,uBAAuB;AAAA,EACvB,cAAc;AAAA,EACd,eAAe;AAAA,EACf,eAAe;AAAA,EACf,iBAAiB;AAAA,EACjB,eAAe;AAAA,EACf,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,sBAAsB;AAAA,EACtB,qBAAqB;AAAA,EACrB,uBAAuB;AAAA,EACvB,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,6BAA6B;AAAA,EAC7B,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,iBAAiB;AAAA,EACjB,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,mBAAmB;AAAA,EACnB,qBAAqB;AAAA,EACrB,sBAAsB;AAAA,EACtB,oBAAoB;AAAA,EACpB,yBAAyB;AAAA,EACzB,qBAAqB;AAAA,EACrB,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB,cAAc;AAChB;AAMO,MAAM,QAAQ,CACnB,QACuB,OAAO,GAAG;AC5GtB,MAAA,8BAA8B,CACzC,WACG;AAEC,MAAA,OAAO,WAAW,UAAU;AACvB,WAAA;AAAA,EACT;AAEA,MAAI,CAAC,QAAQ;AAEJ,WAAA;AAAA,EACT;AAEO,SAAA,GAAG,SAAS,EAAE;AACvB;ACHA,MAAM,aAAa;AAAA,EACjB;AACF;AAEO,MAAM,cAAc,CAAC,EAAE,UAAU,gBAAkC;AACxE,6BACG,WAAW,UAAX,EAAoB,OAAO,WAAY,SAAS,CAAA;AAErD;AAEO,MAAM,eAAe,MAAM;AAC1B,QAAA,aAAa,WAAW,UAAU;AAExC,MAAI,CAAC,YAAY;AACT,UAAA,IAAI,MAAM,0CAA0C;AAAA,EAC5D;AAEO,SAAA;AACT;ACxBY,IAAA,mCAAAA,oBAAL;AAELA,kBAAA,0BAA6B,IAAA;AAC7BA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,IAAO,IAAA;AACPA,kBAAA,UAAa,IAAA;AACbA,kBAAA,WAAc,IAAA;AACdA,kBAAA,cAAiB,IAAA;AACjBA,kBAAA,SAAY,IAAA;AACZA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,aAAgB,IAAA;AAChBA,kBAAA,qBAAwB,IAAA;AACxBA,kBAAA,OAAU,IAAA;AACVA,kBAAA,SAAY,IAAA;AACZA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,cAAiB,IAAA;AACjBA,kBAAA,sBAAyB,IAAA;AACzBA,kBAAA,sBAAyB,IAAA;AACzBA,kBAAA,kBAAqB,IAAA;AACrBA,kBAAA,WAAc,IAAA;AACdA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,OAAU,IAAA;AACVA,kBAAA,KAAQ,IAAA;AACRA,kBAAA,UAAa,IAAA;AACbA,kBAAA,MAAS,IAAA;AACTA,kBAAA,WAAc,IAAA;AACdA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,UAAa,IAAA;AACbA,kBAAA,YAAe,IAAA;AACfA,kBAAA,MAAS,IAAA;AACTA,kBAAA,OAAU,IAAA;AACVA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,SAAY,IAAA;AACZA,kBAAA,QAAW,IAAA;AACXA,kBAAA,QAAW,IAAA;AACXA,kBAAA,SAAY,IAAA;AACZA,kBAAA,YAAe,IAAA;AACfA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,cAAiB,IAAA;AACjBA,kBAAA,sBAAyB,IAAA;AACzBA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,4BAA+B,IAAA;AAC/BA,kBAAA,UAAa,IAAA;AACbA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,UAAa,IAAA;AACbA,kBAAA,MAAS,IAAA;AACTA,kBAAA,OAAU,IAAA;AACVA,kBAAA,OAAU,IAAA;AACVA,kBAAA,YAAe,IAAA;AACfA,kBAAA,UAAa,IAAA;AACbA,kBAAA,QAAW,IAAA;AACXA,kBAAA,MAAS,IAAA;AACTA,kBAAA,MAAS,IAAA;AACTA,kBAAA,YAAe,IAAA;AACfA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,WAAc,IAAA;AACdA,kBAAA,QAAW,IAAA;AACXA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,QAAW,IAAA;AACXA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,YAAe,IAAA;AACfA,kBAAA,WAAc,IAAA;AACdA,kBAAA,eAAkB,IAAA;AAClBA,kBAAA,8BAAiC,IAAA;AACjCA,kBAAA,kBAAqB,IAAA;AACrBA,kBAAA,MAAS,IAAA;AACTA,kBAAA,YAAe,IAAA;AACfA,kBAAA,MAAS,IAAA;AACTA,kBAAA,QAAW,IAAA;AACXA,kBAAA,MAAS,IAAA;AACTA,kBAAA,MAAS,IAAA;AACTA,kBAAA,cAAiB,IAAA;AACjBA,kBAAA,uBAA0B,IAAA;AAC1BA,kBAAA,MAAS,IAAA;AACTA,kBAAA,sBAAyB,IAAA;AACzBA,kBAAA,8BAAiC,IAAA;AACjCA,kBAAA,SAAY,IAAA;AACZA,kBAAA,KAAQ,IAAA;AACRA,kBAAA,QAAW,IAAA;AACXA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,QAAW,IAAA;AACXA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,QAAW,IAAA;AACXA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,cAAiB,IAAA;AACjBA,kBAAA,sBAAyB,IAAA;AACzBA,kBAAA,yBAA4B,IAAA;AAC5BA,kBAAA,KAAQ,IAAA;AACRA,kBAAA,SAAY,IAAA;AACZA,kBAAA,SAAY,IAAA;AACZA,kBAAA,eAAkB,IAAA;AAClBA,kBAAA,OAAU,IAAA;AACVA,kBAAA,SAAY,IAAA;AACZA,kBAAA,OAAU,IAAA;AACVA,kBAAA,QAAW,IAAA;AACXA,kBAAA,QAAW,IAAA;AACXA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,WAAc,IAAA;AACdA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,QAAW,IAAA;AACXA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,MAAS,IAAA;AACTA,kBAAA,YAAe,IAAA;AACfA,kBAAA,OAAU,IAAA;AACVA,kBAAA,eAAkB,IAAA;AAClBA,kBAAA,SAAY,IAAA;AACZA,kBAAA,aAAgB,IAAA;AAChBA,kBAAA,WAAc,IAAA;AACdA,kBAAA,OAAU,IAAA;AACVA,kBAAA,MAAS,IAAA;AACTA,kBAAA,cAAiB,IAAA;AACjBA,kBAAA,cAAiB,IAAA;AACjBA,kBAAA,SAAY,IAAA;AACZA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,eAAkB,IAAA;AAClBA,kBAAA,MAAS,IAAA;AACTA,kBAAA,cAAiB,IAAA;AACjBA,kBAAA,kBAAqB,IAAA;AACrBA,kBAAA,MAAS,IAAA;AACTA,kBAAA,UAAa,IAAA;AACbA,kBAAA,OAAU,IAAA;AACVA,kBAAA,QAAW,IAAA;AACXA,kBAAA,MAAS,IAAA;AACTA,kBAAA,MAAS,IAAA;AACTA,kBAAA,eAAkB,IAAA;AAClBA,kBAAA,kBAAqB,IAAA;AACrBA,kBAAA,SAAY,IAAA;AACZA,kBAAA,WAAc,IAAA;AACdA,kBAAA,MAAS,IAAA;AACTA,kBAAA,QAAW,IAAA;AACXA,kBAAA,WAAc,IAAA;AACdA,kBAAA,OAAU,IAAA;AACVA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,QAAW,IAAA;AACXA,kBAAA,MAAS,IAAA;AACTA,kBAAA,YAAe,IAAA;AACfA,kBAAA,QAAW,IAAA;AACXA,kBAAA,cAAiB,IAAA;AACjBA,kBAAA,qBAAwB,IAAA;AACxBA,kBAAA,QAAW,IAAA;AACXA,kBAAA,YAAe,IAAA;AACfA,kBAAA,OAAU,IAAA;AACVA,kBAAA,QAAW,IAAA;AACXA,kBAAA,aAAgB,IAAA;AAChBA,kBAAA,cAAiB,IAAA;AACjBA,kBAAA,QAAW,IAAA;AACXA,kBAAA,YAAe,IAAA;AACfA,kBAAA,OAAU,IAAA;AACVA,kBAAA,UAAa,IAAA;AACbA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,SAAY,IAAA;AACZA,kBAAA,KAAQ,IAAA;AACRA,kBAAA,QAAW,IAAA;AACXA,kBAAA,WAAc,IAAA;AACdA,kBAAA,aAAgB,IAAA;AAChBA,kBAAA,kBAAqB,IAAA;AACrBA,kBAAA,WAAc,IAAA;AACdA,kBAAA,kBAAqB,IAAA;AACrBA,kBAAA,WAAc,IAAA;AACdA,kBAAA,kBAAqB,IAAA;AACrBA,kBAAA,YAAe,IAAA;AACfA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,0BAA6B,IAAA;AAC7BA,kBAAA,wBAA2B,IAAA;AAC3BA,kBAAA,+BAAkC,IAAA;AAClCA,kBAAA,aAAgB,IAAA;AAChBA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,eAAkB,IAAA;AAClBA,kBAAA,sBAAyB,IAAA;AACzBA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,2BAA8B,IAAA;AAC9BA,kBAAA,kBAAqB,IAAA;AACrBA,kBAAA,yBAA4B,IAAA;AAC5BA,kBAAA,gBAAmB,IAAA;AACnBA,kBAAA,uBAA0B,IAAA;AAC1BA,kBAAA,eAAkB,IAAA;AAClBA,kBAAA,sBAAyB,IAAA;AACzBA,kBAAA,WAAc,IAAA;AACdA,kBAAA,kBAAqB,IAAA;AACrBA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,0BAA6B,IAAA;AAC7BA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,wBAA2B,IAAA;AAC3BA,kBAAA,UAAa,IAAA;AACbA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,0BAA6B,IAAA;AAC7BA,kBAAA,WAAc,IAAA;AACdA,kBAAA,kBAAqB,IAAA;AACrBA,kBAAA,YAAe,IAAA;AACfA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,aAAgB,IAAA;AAChBA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,aAAgB,IAAA;AAChBA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,uBAA0B,IAAA;AAC1BA,kBAAA,8BAAiC,IAAA;AACjCA,kBAAA,aAAgB,IAAA;AAChBA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,eAAkB,IAAA;AAClBA,kBAAA,sBAAyB,IAAA;AACzBA,kBAAA,aAAgB,IAAA;AAChBA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,0BAA6B,IAAA;AAC7BA,kBAAA,UAAa,IAAA;AACbA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,UAAa,IAAA;AACbA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,iBAAoB,IAAA;AACpBA,kBAAA,eAAkB,IAAA;AAClBA,kBAAA,YAAe,IAAA;AACfA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,aAAgB,IAAA;AAChBA,kBAAA,oBAAuB,IAAA;AACvBA,kBAAA,qBAAwB,IAAA;AACxBA,kBAAA,YAAe,IAAA;AACfA,kBAAA,mBAAsB,IAAA;AACtBA,kBAAA,WAAc,IAAA;AApOJA,SAAAA;AAAA,GAAA,kBAAA,CAAA,CAAA;ACKZ,SAAwB,OACtB,MACuE;AACvE,QAAM,CAAC,MAAM,OAAO,IAAI,MAAM,SAEpB,IAAI;AACd,QAAM,CAAC,SAAS,UAAU,IAAI,MAAM,SAAS,KAAK;AAClD,QAAM,iBAAiB;AAEvB,QAAM,UAAU,MAAM;AACpB,QAAI,YAAY;AAChB,eAAW,IAAI;AAEf,UAAM,aAAa,YAA2B;AACxC,UAAA;AACF,cAAM,aAAa,MAAM,eAAe,eAAe,IAAI,CAAC,GACzD;AACH,YAAI,WAAW;AACL,kBAAA,EAAE,WAAW;AAAA,QACvB;AAAA,eACO,KAAK;AACZ,gBAAQ,MAAM,GAAG;AAAA,MAAA,UACjB;AACA,YAAI,WAAW;AACb,qBAAW,KAAK;AAAA,QAClB;AAAA,MACF;AAAA,IAAA;AAGS;AAEX,WAAO,MAAM;AACC,kBAAA;AAAA,IAAA;AAAA,EACd,GACC,CAAC,MAAM,cAAc,CAAC;AAEzB,SAAO,CAAC,UAAS,6BAAM,cAAa,IAAI;AAC1C;AChCO,SAAS,eAAe;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,GAAG;AACL,GAAwB;AACtB,QAAM,CAAC,SAAS,IAAI,IAAI,OAAO,IAAI;AAE7B,QAAA,YAAY,4BAA4B,KAAK;AAC7C,QAAA,aAAa,4BAA4B,MAAM;AAEjD,MAAA,WAAW,CAAC,MAAM;AAElB,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAW,GAAG,WAAW,iBAAiB;AAAA,QAC1C,OAAO;AAAA,UACL,QAAQ;AAAA,UACR,OAAO;AAAA,QACT;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AAGE,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MAEC,OACE;AAAA,QACE,GAAG;AAAA,QACH,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,MACnB;AAAA,MAEF,eAAW;AAAA,MACX,WAAW;AAAA,QACT;AAAA,QACA;AAAA,MACF;AAAA,MAEA,QAAQ;AAAA,MACR,OAAO;AAAA,MACN,GAAG;AAAA,IAAA;AAAA,EAAA;AAGV;AChDO,SAAS,eAAe,OAA4B;AACzD,6BAAQ,gBAAe,EAAA,eAAa,QAAW,MAAK,OAAO,GAAG,MAAO,CAAA;AACvE;ACDA,MAAM,mBAAmB,CAAC,cAA0C;AAClE,MAAI,qBAAqB,mBAAmB;AACnC,WAAA;AAAA,EAAA,WACE,qBAAqB,aAAa;AACpC,WAAA,UAAU,cAAc,QAAQ;AAAA,EACzC;AAEO,SAAA;AACT;AAEA,MAAM,sCAAsC,CAAC;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AACF,MAA4B;;AACpB,QAAA,SAAS,iBAAiB,SAAS;AAEpC;AAEL,MAAI,CAAC,UAAU,GAAC,WAAM,YAAN,mBAAe,SAAS,aAAY;AAClD;AAAA,EACF;AAEM,QAAA,iBAAiB,CAAC,UAAsB;AAC5C,UAAM,yBAAyB;AAAA,EAAA;AAG1B,SAAA,iBAAiB,WAAW,cAAc;AACjD,SAAO,MAAM;AACN,SAAA,oBAAoB,WAAW,cAAc;AACtD;AAEO,MAAM,mBAAkC;AAAA,EAC7C,MAAM;AAAA,EACN,cAAc;AAAA,EACd,GAAG,UAAU;AACX,UAAM,EAAE,QAAQ,MAAM,MAAA,IAAU;AAEzB,WAAA;AAAA,MACL,WAAW;AAET,eAAO,iBAAiB,YAAY,CAAC,EAAE,oBAAoB;AACzD,cACE,MAAM,oBACN,iBACA,CAAC,OAAO,SAAS,aAAqB,GACtC;AACK;UACP;AAAA,QAAA,CACD;AAAA,MACH;AAAA,IAAA;AAAA,EAEJ;AACF;AAEO,MAAM,YAA2B;AAAA,EACtC,MAAM;AAAA,EACN,cAAc;AAAA,EACd,GAAG,UAAU;AACL,UAAA,EAAE,MAAU,IAAA;AAElB,aAAS,UAAU,OAAsB;AACvC,UAAI,MAAM,aAAa,MAAM,QAAQ,UAAU;AAC7C,4CAAoC,QAAQ;AAAA,MAC9C;AAAA,IACF;AAEO,WAAA;AAAA,MACL,SAAS;AACE,iBAAA,iBAAiB,WAAW,SAAS;AAAA,MAChD;AAAA,MACA,SAAS;AACE,iBAAA,oBAAoB,WAAW,SAAS;AAAA,MACnD;AAAA,IAAA;AAAA,EAEJ;AACF;AAEO,MAAM,uBAAsC;AAAA,EACjD,MAAM;AAAA,EACN,cAAc;AAAA,EACd,GAAG,UAAU;AACX,UAAM,EAAE,QAAQ,MAAM,MAAA,IAAU;AAEhC,QAAI,cAAc;AAClB,QAAI,kBAAkB;AAEtB,UAAM,2BAA2B,MAC/B,OAAO,cAAqD,WAAW;AAEnE,UAAA,+BAA+B,CAAC,UAAyB;AAC7D,UAAI,MAAM,QAAQ,SAAS,MAAM,UAAU;AACzC;AAAA,MACF;AAEA,YAAM,eAAe;AAErB,YAAM,wBAAwB;AACxB,YAAA,gBAAgB,iBAAiB,SAAS,SAAS;AAEzD,UAAI,yBAAyB,eAAe;AAC1C,8BAAsB,MAAM;AACd,sBAAA;AAAA,UACZ;AAAA,UACA;AAAA,QAAA;AAAA,MAEJ;AAAA,IAAA;AAGI,UAAA,YAAY,CAAC,UAAyB;AACpC,YAAA,oBAAoB,OAAO,iBAE/B,WAAW;AAEb,YAAM,WAAW,kBAAkB;AACnC,UACE,CAAC,CAAC,OAAO,KAAK,OAAO,EAAE,SAAS,MAAM,GAAG,KACzC,CAAC,SAAS,eACV;AACA;AAAA,MACF;AAEA,YAAM,eAAe;AAErB,UAAI,iBAAiB;AACrB,cAAQ,MAAM,KAAK;AAAA,QACjB,KAAK;AACH,cAAI,MAAM,UAAU;AAClB,6BAAiB,cAAc;AAAA,UAAA,OAC1B;AACL,6BAAiB,cAAc;AAAA,UACjC;AACA;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACe,4BAAA,KAAK,WAAW,EAAE,MAAM;AACrC;AACL;AAAA,MACJ;AAEI,UAAA,iBAAiB,KAAK,kBAAkB,UAAU;AAKpD,4CAAoC,QAAQ;AAE5C;AAAA,MACF;AAEc,oBAAA;AACI,wBAAA,KAAK,cAAc,EAAE,MAAM;AAAA,IAAA;AAExC,WAAA;AAAA,MACL,UAAU;AACJ,YAAA,CAAC,MAAM,qBAAsB;AAEnB,sBAAA;AACd,cAAM,wBAAwB;AACxB,cAAA,gBAAgB,iBAAiB,SAAS,SAAS;AAEzD,YAAI,yBAAyB,eAAe;AAC5B,wBAAA;AAAA,YACZ;AAAA,YACA;AAAA,UAAA;AAEK,iBAAA,iBAAiB,WAAW,SAAS;AAC1B,4BAAA;AAAA,QACpB;AAAA,MACF;AAAA,MACA,WAAW;AACL,YAAA,CAAC,MAAM,qBAAsB;AAE3B,cAAA,gBAAgB,iBAAiB,SAAS,SAAS;AAE3C,sBAAA;AACd,YAAI,iBAAiB;AACZ,iBAAA,oBAAoB,WAAW,SAAS;AAC7B,4BAAA;AACH,yDAAA;AAAA,YACb;AAAA,YACA;AAAA;AAAA,QAEJ;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;AACF;ACpLA,MAAM,QAAQ;AAId,MAAM,UAAkC;AAAA,EACtC,MAAM;AAAA,IACJ,UAAU;AAAA,IACV,iBAAiB;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,OAAO;AAAA,EACT;AAAA,EACA,SAAS;AAAA,IACP,UAAU;AAAA,IACV,iBAAiB;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,OAAO;AAAA,EACT;AAAA,EACA,OAAO;AAAA,IACL,UAAU;AAAA,IACV,iBAAiB;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,OAAO;AAAA,EACT;AACF;AAEA,MAAM,eAAe,CAAC,cACpB;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEF,MAAM,UAAU,CAAC;AAAA,EACf;AAAA,EACA;AAAA,EACA;AACF,MACE;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YACE;AAAA,EACF,UAAU;AAAA,EACV;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAiBK,MAAM,UAAU,CAAC;AAAA,EACtB,WAAW;AAAA,EACX,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,WAAW,QAAQ,MAAM,EAAE;AAAA,EAC3B,kBAAkB,QAAQ,MAAM,EAAE;AAAA,EAClC,QAAQ,QAAQ,MAAM,EAAE;AAAA,EACxB,WAAW;AAAA,EACX;AAAA,EACA,WAAW;AAAA,EACX,SAAS,CAAC,GAAG,cAAc,MAAM,WAAW,CAAC,CAAC;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAAA,sBACAC,yBAAuB,aAAa;AAAA,EACpC,GAAG;AACL,MAAoB;AAClB,QAAM,aACJ,OAAO,YAAY,cACf,EAAE,gBAAgB,YAClB;AAAA,IACE,SAAS;AAAA,EAAA;AAIf,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,OAAO;AAAA,MACP,WACE,OAAO,KAAK,WAAW,cACnB,QAAQ,EAAE,UAAU,QAAQ,UAAW,CAAA,IACvC;AAAA,MAEN,SAAS;AAAA,MACT;AAAA,MACA,UAAU;AAAA,MACV,SAAS,CAAC,WAAW,kBAAkBC,oBAA0B;AAAA,MACjE,aAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA,eAAe;AAAA,QACb,WAAW;AAAA,UACT;AAAA,YACE,MAAM;AAAA,YACN,SAAS;AAAA,cACP,oBAAoB,CAAC,OAAO,QAAQ;AAAA,YACtC;AAAA,UACF;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,SAAS;AAAA,cACP,SAAS;AAAA,YACX;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MAAA,sBACJD;AAAAA,MAEC,UACC,WAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAW,GAAG,QAAQ,YAAY,kCAAkC;AAAA,YAEpE,UAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC;AAAA,gBACA,WAAW,aAAa,eAAe;AAAA,gBACvC,MAAK;AAAA,gBACL,SAAS,CAAC,MAAM;AACd,oBAAE,eAAe;AACP;AAAA,gBACZ;AAAA,gBAEA,UAAC,oBAAA,gBAAA,EAAe,OAAc,MAAM,UAAU;AAAA,cAAA;AAAA,YAChD;AAAA,UAAA;AAAA,QACF;AAAA;AAAA,IAAA;AAAA,EAAA;AAIR;AC7Ma,MAAA,0BAA0B,CAAC,QAAgB;AAClD,MAAA;AACI,UAAA,iBAAiB,QAAQ,IAAI;AACnC,WAAO,IAAI,IAAI,GAAG,EAAE,SAAS;AAAA,EAAA,QACvB;AACC,WAAA;AAAA,EACT;AACF;AAEa,MAAA,uBAAuB,CAAC,SAAS;AAC5C,QAAM,SAAS,6BAAM;AACrB,QAAM,aAAa,iCAAQ;AAC3B,QAAM,YAAY,6BAAM;AACxB,QAAM,eAAe,6BAAM;AAEpB,SAAA,cAAc,UAAU,cAAa,6CAAc;AAC5D;ACDA,MAAM,eAAe;AAKrB,MAAM,QAAQ;AAAA,EACZ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AAEA,SAAS,mBACP,KACA,MACA,QAAgB,GACR;AACR,QAAM,aAAa,KAAK,MAAM,OAAO,KAAK;AACtC,MAAA,IAAI,WAAW,YAAY,GAAG;AACzB,WAAA,GAAG,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,MAAM,UAAU;AAAA,EAC7C;AACI,MAAA,IAAI,MAAM,SAAS,GAAG;AACjB,WAAA,GAAG,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,MAAM,UAAU;AAAA,EAC7C;AACI,MAAA,IAAI,MAAM,SAAS,GAAG;AACjB,WAAA,GAAG,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,SAAS,UAAU;AAAA,EAChD;AACO,SAAA;AACT;AAEA,MAAM,gBAAgB,CAAC,EAAE,UAAU,mBAAmB;AACpD,MAAI,cAAc;AAEd,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,aAAa;AAAA,QACb,SAAQ;AAAA,QACR,WAAU;AAAA,QACV,WAAU;AAAA,QACV,UAAU,SAAS;AAAA,QAElB;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACO,SAAA;AACT;AA0BO,SAAS,OAAO;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,gBAAgB;AAAA,EAChB,WAAW;AAAA,EACX,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAgB;;AACd,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,KAAK;AAChD,QAAM,CAAC,UAAU,WAAW,IAAI,SAAS,KAAK;AAExC,QAAA,SAAS,OAA0B,IAAI;AAEvC,QAAA,OAAO,qBAAqB,IAAI;AAEtC,QAAM,KAAM,QAAQ,MAAM,IAAI,KAAM;AACpC,QAAM,iBAAiB,MAAM,mBAAmB,KAAK,EAAE,IAAI;AAE3D,YAAU,MAAM;AAEd,iBAAa,KAAK;AAElB,UAAM,MAAM,OAAO;AACnB,UAAME,YAAW,QAAQ,QAAQ,IAAI,QAAQ,kBAAkB,IAAI;AAEnE,gBAAYA,SAAQ;AAAA,EAAA,GACnB,CAAC,cAAc,CAAC;AAEb,QAAA,WACH,SAAS,KAAK,eAAa,UAAK,kBAAL,mBAAoB,cAAa,KAAK,UAClE;AACF,QAAM,aAAa;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA,iBACE;AAAA,IACF,CAAC,QACC,CAAC,YACD;AAAA,IACF,SAAS,QAAQ;AAAA,IACjB,SAAS,QAAQ;AAAA,IACjB,SAAS,QAAQ;AAAA,IACjB,SAAS,QACP;AAAA,IACF,SAAS,QACP;AAAA,IACF,WACI,4FACA;AAAA,IACJ;AAAA,EAAA;AAGF,QAAM,iBAAiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEF,QAAM,UAAU,WAAW;AAG3B,QAAM,iBAAiB,eACnB,SACA,SAAS,WAAY,aAAa,eAAe,YAAa;AAE9D,MAAA,OAAO,CAAC,WAAW;AACf,UAAA,eAAe,wBAAwB,GAAG;AAC1C,UAAA,eAAe,MAAM,UAAU;AAGnC,WAAA,oBAAC,iBAAc,cACb,UAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAW;AAAA,QACX,OAAO;AAAA,QACP,kBAAe;AAAA,QAEd,UACC,eAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAU;AAAA,YACV,KAAK;AAAA,YACL,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,KAAK;AAAA,YACL,SAAS,MAAM,aAAa,IAAI;AAAA,YAChC,OAAK;AAAA,YACL,UAAU,GAAG,GAAG,GAAG,SAAS,MAAM;AAAA,UAAA;AAAA,QAAA,IAGpC;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,KAAK;AAAA,YACL,WAAW;AAAA,cACT;AAAA,cACA,CAAC,YAAY;AAAA,YACf;AAAA,YACA,KAAK,mBAAmB,KAAK,EAAE;AAAA,YAC/B,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,KAAK;AAAA,YACL,SAAS,MAAM,aAAa,IAAI;AAAA,YAChC,QAAQ,MAAM,YAAY,IAAI;AAAA,YAC9B,SAAQ;AAAA,UAAA;AAAA,QACV;AAAA,MAAA;AAAA,IAGN,EAAA,CAAA;AAAA,EAEJ;AAEM,QAAA,cACJ,mBACC,YAAY,YAAY,UAAU,IAAI,CAAC,EAAE,CAAC,EAAE,YAAY;AAC3D,QAAM,mBACJ,+BAA+B,mCAAmC,6BAAM,EAAE;AAG1E,SAAA,oBAAC,iBAAc,cACb,UAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW,GAAG,YAAY,cAAc;AAAA,MACxC,OAAO;AAAA,MACP,eAAa,CAAC;AAAA,MACd,OAAO;AAAA,QACL,YAAY,oCAAoC,iBAAiB,EAAE,KAAK,iBAAiB,IAAI;AAAA,MAC/F;AAAA,MAEC,UAAA;AAAA,QAAA;AAAA,QACA,OAAO,oBAAC,QAAK,EAAA,WAAU,cAAc,UAAQ,SAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAElD,EAAA,CAAA;AAEJ;AClNA,MAAM,gCAAgC,CAAC;AAAA,EACrC,kBAAkB,CAAC;AAAA,EACnB,qBAAqB;AAAA,EACrB;AAAA,EACA;AACF,MAKM;AACJ,QAAM,sBACJ,gBAAgB,WAAW,IACvB,+BACA;AAEN,6BACG,QAAK,EAAA,WAAU,uCACb,UAAA,uBAAuB,YAEnB,qBAAA,UAAA,EAAA,UAAA;AAAA,IAAA,gBAAgB,IAAI,CAAC,MAAM,QAAQ,MAAM;AACxC,iCACG,QAAuC,EAAA,UAAA,6BAAM,UAAnC,GAAA,mBAAmB,KAAK,EAAqB;AAAA,IAAA,CAE3D;AAAA,IACA;AAAA,EACH,EAAA,CAAA,yBAEC,QACE,EAAA,UAAA;AAAA,IAAgB,gBAAA;AAAA,IAAO;AAAA,IAAE;AAAA,EAAA,EAC5B,CAAA,EAEJ,CAAA;AAEJ;AAEA,MAAM,oBAAoB,CAAC,SACzB;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS,QAAQ;AAAA,EACjB,SAAS,QAAQ;AAAA,GAChB,SAAS,QAAQ,CAAC,SAAS;AAAA,EAC5B,SAAS,QAAQ;AAAA,EACjB,SAAS,QAAQ;AACnB;AAEK,SAAS,WAAW;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA,uBAAuB;AAAA,EACvB,qBAAqB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AACF,GAAoB;AAClB,QAAM,QAAQ,YAAY,MAAM,MAAM,GAAG,SAAS,IAAI;AACtD,QAAM,wBAAwB,YAAY,MAAM,SAAS,YAAY;AACrE,QAAM,wBAAwB,wBAAwB;AAChD,QAAA,uBAAuB,IAAI,qBAAqB;AAEtD,MAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AACzB,WAAA;AAAA,EACT;AAGE,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,SAChB,SAAS,QAAQ,CAAC,SAAS;AAAA,QAC5B,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA;AAAA,QAEjB;AAAA,QACA;AAAA,MACF;AAAA,MAEC,UAAA;AAAA,QAAM,MAAA,IAAI,CAAC,SAAS;AACb,gBAAA,eAAc,6BAAM,eAAa,6BAAM;AACvC,gBAAA,kBAAkB,GAAG,WAAW,GAAG,YAAY,IAAI,SAAS,KAAK,EAAE;AAEzE,iBACG,oBAAA,MAAA,EAAkB,WAAW,kBAAkB,IAAI,GAClD,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,KAAG;AAAA,cACH;AAAA,cACA;AAAA,cACA,cAAc,uBAAuB,kBAAkB;AAAA,YAAA;AAAA,UAAA,KALlD,6BAAM,EAOf;AAAA,QAAA,CAEH;AAAA,QACA,yBACE,oBAAA,MAAA,EAA0B,WAAW,kBAAkB,IAAI,GAC1D,UAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,iBAAiB;AAAA,YACjB;AAAA,YACA,eAAe;AAAA,YACf,WAAW;AAAA,cACT;AAAA,cAEA,SAAS,QAAQ;AAAA,cACjB,SAAS,QAAQ;AAAA,cACjB,CAAC,QAAQ;AAAA,cACT,SAAS,QAAQ;AAAA,cACjB,SAAS,QAAQ;AAAA,cACjB,SAAS,QAAQ;AAAA,YACnB;AAAA,YACA,OAAO,uBAAuB,SAAY;AAAA,YAC1C,6BAA6B;AAAA;AAAA,cAE3B,MAAM;AAAA,cACN,IAAI;AAAA,YACN;AAAA,YACA,cACE,uBACE;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,iBAAiB,MAAM,MAAM,CAAC,qBAAqB;AAAA,gBACnD;AAAA,gBACA;AAAA,gBACA;AAAA,cAAA;AAAA,YAEA,IAAA;AAAA,UAAA;AAAA,aA7BF,kBAgCR;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAIR;ACvIA,MAAM,cAAc;AAAA,EAClB;AACF;AAEO,MAAM,eAAe,CAAC,EAAE,UAAU,iBAAoC;AAC3E,6BACG,YAAY,UAAZ,EAAqB,OAAO,YAAa,SAAS,CAAA;AAEvD;AAEO,MAAM,UAAU,MAAM;AACrB,QAAA,cAAc,WAAW,WAAW;AAE1C,MAAI,CAAC,aAAa;AACV,UAAA,IAAI,MAAM,4CAA4C;AAAA,EAC9D;AAEO,SAAA;AACT;AC3BA,MAAM,gBAAgB;AAAA,EACpB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQT,iBAAiB;AAAA,EACjB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBR,gBAAgB;AAAA;AAAA;AAAA;AAAA,EAIhB,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASlB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4BR,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBP,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMV,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASN,SAAS,CAAC;AAAA,IACR;AAAA,IACA,YAAY;AAAA,EAAA,MAIR;AAAA;AAAA,MAEF,aAAa,cAAc;AAAA;AAAA;AAAA,MAG3B,kBAAkB,wBAAwB,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUX;AAEO,MAAM,SAAS,CAAC;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,mBAAmB;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,kBAAkB;AAAA,EAClB,kBAAkB;AACpB,MAAmC;AACjC,QAAM,cACJ,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC;AAE7D,SAAA;AAAA,IACL,eAAe,cAAc;AAAA,IAC7B,UAAU,cAAc;AAAA,IACxB,oBAAoB,cAAc;AAAA,KACjC,QAAQ,aAAa,UAAU,cAAc;AAAA,IAC9C,SAAS,cAAc;AAAA,IACvB,QAAQ,cAAc;AAAA,IACtB,WACE,cAAc,QAAQ;AAAA,MACpB;AAAA,MACA,WAAW;AAAA,IAAA,CACZ;AAAA,IACH,WAAW,cAAc;AAAA,IACzB,UAAU,cAAc;AAAA,IACxB,CAAC,QAAQ,CAAC,MAAM,cAAc;AAAA,IAC9B;AAAA,IACA,mBAAmB,cAAc;AAAA,IACjC;AAAA,EAAA;AAEJ;AAqBA,MAAM,WAGF,CACF;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP,SAAS;AAAA;AAAA,EACT;AAAA,EACA,kBAAkB;AAAA,EAClB;AAAA,EACA,GAAG;AACL,GACA,QACG;AACH,QAAM,aAAa;AACnB,QAAM,EAAE,IAAI,MAAM,QAAA,IAAY;AAC9B,QAAM,KAAK,OAAO;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACD;AACD,SAAO,MAAM,QAAQ,CAAC,UACpB,WAAW;AAAA,IACT;AAAA,IACA,WAAW;AAAA,IACX,GAAI;AAAA,IACJ,UAEK,qBAAA,UAAA,EAAA,UAAA;AAAA,MAAW,WAAA,oBAAC,gBAAe,EAAA,MAAK,SAAS,CAAA;AAAA,MACzC;AAAA,IAAA,GACH;AAAA,EAEH,CAAA,IAED;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW,GAAG,gBAAgB,EAAE;AAAA,MAChC;AAAA,MACC,GAAI;AAAA,MAEJ;AAAA,IAAA;AAAA,EAAA;AAGP;AAEa,MAAA,OAAO,WAGlB,QAAQ;ACnQE,IAAA,+BAAAC,gBAAL;AACLA,cAAA,OAAQ,IAAA;AACRA,cAAA,MAAO,IAAA;AACPA,cAAA,SAAU,IAAA;AACVA,cAAA,SAAU,IAAA;AAJAA,SAAAA;AAAA,GAAA,cAAA,CAAA,CAAA;AAOA,IAAA,iCAAAC,kBAAL;AACLA,gBAAA,SAAU,IAAA;AACVA,gBAAA,WAAY,IAAA;AACZA,gBAAA,KAAM,IAAA;AACNA,gBAAA,SAAU,IAAA;AACVA,gBAAA,UAAW,IAAA;AALDA,SAAAA;AAAA,GAAA,gBAAA,CAAA,CAAA;AAuCZ,MAAM,UAAU,CAAC,UAAuB;AACtC,QAAM,aAAa;AAAA,IACjB;AAAA,MAAC;AAAA;AAAA,OAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMpB;AAAA,MAAC;AAAA;AAAA,OAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMnB;AAAA,MAAC;AAAA;AAAA,OAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMtB;AAAA,MAAC;AAAA;AAAA,OAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAQxB,MAAI,CAAC,SAAS,CAAC,WAAW,KAAK,GAAG;AACzB,WAAA;AAAA,EACT;AAEA,SAAO,GAAG,kBAAkB,WAAW,KAAK,CAAC;AAC/C;AAEA,MAAM,YAAY,CAAC,YAA2B;AAC5C,QAAM,aAAa;AAAA,IACjB;AAAA,MAAC;AAAA;AAAA,OAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOxB;AAAA,MAAC;AAAA;AAAA,OAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAO1B;AAAA,MAAC;AAAA;AAAA,OAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMpB;AAAA,MAAC;AAAA;AAAA,OAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMxB;AAAA,MAAC;AAAA;AAAA,OAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAS3B,MAAI,CAAC,WAAW,CAAC,WAAW,OAAO,GAAG;AACpC,WAAO;AAAA,MAAW;AAAA;AAAA;EACpB;AAEA,SAAO,WAAW,OAAO;AAC3B;AAEO,MAAM,QAAQ,MAAM;AAAA,EACzB,CACE,OACA,QACG;AACG,UAAA;AAAA,MACJ,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACD,IAAA;AAEA,QAAA,CAAC,YAAY,CAAC,UAAU;AACnB,aAAA;AAAA,IACT;AAEM,UAAA,YAAY,OAAO,OAAO;AAEhC,UAAMC,WAAU;AAAA,MACd;AAAA,MACA,CAAC,aAAa;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ,KAAK,KAAK,UAAU,OAAO;AAAA,MACnC,YAAY;AAAA,MACZ,SAAS,CAAC,QAAQ;AAAA,MAClB,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,IAAA;AAIA,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACE,GAAG;AAAA,QACJ,WAAWA;AAAA,QACX,IAAI;AAAA,QACJ;AAAA,QACA;AAAA,QAEC,UAAA;AAAA,UACC,YAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACE,GAAG;AAAA,cACJ,MAAM;AAAA,cACN,WAAW,GAAG,6BAA6B,uCAAW,SAAS;AAAA,cAC/D,WAAU;AAAA,YAAA;AAAA,UACZ;AAAA,UAED;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AACF;ACrMO,MAAM,YAAY,CAAC,EAAE,SAAS,gBAAgC;AACnE,QAAM,cAAc;AAAA,IAClB,WAAW;AAAA,IACX;AAAA,EAAA;AAIA,SAAA,oBAAC,SAAM,IAAG,OAAM,SAAS,aAAa,KAAK,WAAW,aAAa,UAEnE,OAAA,CAAA;AAEJ;ACjBO,MAAM,kBAAkB,MAC7B,oBAAC,SAAM,SAAS,aAAa,WAAW,UAAU,aAAA,CAAA;ACDvC,MAAA,WAAW,CAAC,EAAE,UAAU,MAClC,oBAAA,OAAA,EAAM,WAAsB,SAAS,aAAa,WAAW,UAE9D,MAAA,CAAA;ACHK,MAAM,uBAAuB,CAAC;AAAA,EACnC;AAAA,EACA;AACF,MAGM;AACJ,MAAI,WAAW;AAEX,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,SAAS,aAAa;AAAA,QACtB,WAAU;AAAA,QACT,GAAI,SAAS,EAAE,UAAU,UAAU,CAAC;AAAA,QAEpC,mBAAS,WAAW;AAAA,MAAA;AAAA,IAAA;AAAA,EAG3B;AACO,SAAA;AACT;ACXO,MAAM,aAAa,CAAC;AAAA,EACzB;AAAA,EACA,WAAW;AAAA,EACX,cAAc;AAAA,EACd;AACF,MAAuB;AACrB,QAAM,eAAe;AAAA,IACnB,WAAW;AAAA,IACX;AAAA,EAAA;AAIA,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,IAAG;AAAA,MACH,SAAS,aAAa;AAAA,MACtB,WAAW;AAAA,MACX,OAAO,GAAG,WAAW,SAAS,QAAQ;AAAA,MAErC,UAAA;AAAA,QAAA;AAAA,QAAS;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGhB;AChBO,MAAM,WAAW,CAAC;AAAA,EACvB,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,UAAU;AAAA,EACV;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MACE;AAAA,EACE;AAAA,EACA,OAAO,IAAI;AAAA,EACX,OAAO,KAAK;AAAA,EACZ,OAAO,KAAK,KAAK,OAAO;AAAA,EACxB,UAAU,mBAAmB,KAAK;AAAA,EAClC,YAAY,qBAAqB,KAAK;AAAA,EACtC,oBAAoB;AAAA,EACpB;AAAA,EACA;AACF;ACpBF,MAAM,oBAAoB;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEO,MAAM,SAAS,CAAC;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAMM;AACJ,QAAM,cAAc,kBAAkB;AAEtC,MAAI,UAAU;AACZ,UAAM,aACJ;AAAA,MAAC;AAAA,MAAA;AAAA,QACE,GAAG;AAAA,QACJ,WAAW;AAAA,UACT;AAAA,UACA,cAAc,YAAY;AAAA,UAC1B,uCAAW;AAAA,UACX;AAAA,QACF;AAAA,QACA,WAAU;AAAA,QACV,MAAM;AAAA,MAAA;AAAA,IAAA;AAGV,WAAO,cACL,qBAAC,QAAK,EAAA,WAAW,mBACd,UAAA;AAAA,MAAA;AAAA,MACA;AAAA,IAAA,EACH,CAAA,IAEA,qBAAC,QAAK,EAAA,WAAW,mBACd,UAAA;AAAA,MAAA;AAAA,MACA;AAAA,IACH,EAAA,CAAA;AAAA,EAEJ;AAEO,SAAA;AACT;AAqCO,MAAM,SAAS;AAAA,EACpB,CACE;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT,WAAW;AAAA,IACX;AAAA,IACA,gBAAgB;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,KAEL,QACG;AACH,UAAM,aAAa;AACnB,eAAW,YAEN,qBAAA,UAAA,EAAA,UAAA;AAAA,MAAA;AAAA,MACA,UAAU;AAAA,IACb,EAAA,CAAA;AAGF,UAAM,KAAK,SAAS;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AAEK,UAAA,cAAc,CAAC,MAAM;AACzB,UAAI,QAAQ;AACV,UAAE,eAAe;AAEjB;AAAA,MACF;AAEA,aAAO,mCAAU;AAAA,IAAC;AAGpB,UAAM,cAAc;AAAA,MAClB,WAAW;AAAA,MACX,SAAS;AAAA,MACT;AAAA,MACA,GAAI,UAAU,EAAE,iBAAiB,KAAK;AAAA,MACtC,UAAU,OAAO;AAAA,QACf;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA,CACD;AAAA,IAAA;AAGH,SAAK,QAAQ,QAAQ,UAAU,UAAU,KAAK,MAAM,KAAK,OAAO;AAC9D,aAAO,WAAW;AAAA,QAChB;AAAA,QACA,GAAG;AAAA,QACH,GAAG;AAAA,QACH;AAAA,MAAA,CACD;AAAA,IACH;AAGE,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC;AAAA,QACC,GAAI;AAAA,QACJ,GAAG;AAAA,QACJ;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF;AC5KO,MAAM,cAAc,CAAC;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAwB;AAEpB,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACE,GAAG;AAAA,MACJ,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MAEC;AAAA,IAAA;AAAA,EAAA;AAGP;ACUO,MAAM,aAAaC,eAAM;AAAA,EAC9B,CACE;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT,WAAW;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT,uBAAuB;AAAA,IACvB;AAAA,IACA,cAAc,QAAQ;AAAA,IACtB,GAAG;AAAA,KAEL,QACG;AACH,UAAM,aAAa;AAEf,QAAA,CAAC,YAAY,CAAC,UAAU;AACnB,aAAA;AAAA,IACT;AAEA,UAAM,KAAK,SAAS;AAAA,MAClB,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AAEK,UAAA,cAAc,CAAC,MAAM;AACzB,UAAI,QAAQ;AACV,UAAE,eAAe;AAEjB;AAAA,MACF;AAEA,aAAO,mCAAU;AAAA,IAAC;AAGpB,UAAM,cACJ;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAW;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,QAEC,sBAAY,QACX;AAAA,UAAC;AAAA,UAAA;AAAA,YACC;AAAA,YACA,MAAM;AAAA,YACN;AAAA,YACA;AAAA,YACA,WAAU;AAAA,UAAA;AAAA,QAAA,IAGZ;AAAA,MAAA;AAAA,IAAA;AAKN,UAAM,cAAc;AAAA,MAClB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,SAAS;AAAA,MACT;AAAA,MACA,GAAI,UAAU,EAAE,iBAAiB,KAAK;AAAA,MACtC,UAAU;AAAA,IAAA;AAGN,UAAA,EAAE,IAAI,KAAS,IAAA;AAErB,QAAI,MAAM,MAAM;AACd,aAAO,WAAW;AAAA,QAChB;AAAA,QACA,GAAI;AAAA,QACJ,GAAG;AAAA,QACH;AAAA,MAAA,CACD;AAAA,IACH;AAGE,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC;AAAA,QACC,GAAG;AAAA,QACH,GAAG;AAAA,QACJ;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF;AC/IA,SAAS,kCAAkC,MAAM,WAAW;AACxD,MAAI,OAAO,SAAS,YAAY,OAAO,SAAS,YAAY,OAAO,SAAS,UAAW,QAAO,KAAK,SAAQ;AAC3G,MAAI,CAAC,KAAM,QAAO;AAClB,MAAI,MAAM,QAAQ,IAAI,EAAG,QAAO,KAAK,IAAI,CAAC,UAAQ,kCAAkC,OAAO,SAAS,CAAC,EAAE,KAAK,EAAE;AAC9G,QAAM,CAAC,UAAU,SAAS,IAAsBC,+BAAuB,IAAI,IAAI;AAAA,IAC3E,KAAK;AAAA,IACL,KAAK;AAAA,EACb,IAAQ;AAAA,IACA;AAAA,IACA;AAAA,EACR;AAEI,MAAI,aAAY,uCAAW,IAAI,YAAW;AACtC,UAAM,WAAW,UAAU,IAAI,QAAQ;AACvC,WAAO,SAAS,SAAS;AAAA,EAC5B;AAED,QAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,CAAA;AACxC,MAAI,CAAC,SAAS,CAAC,MAAM,SAAU,QAAO;AACtC,SAAO,kCAAkC,MAAM,UAAU,SAAS;AACtE;AACA,IAAI,2CAA2C;ACf/C,MAAM,iBAAiB,cAErB,MAAS;AAEJ,MAAM,kBAAkB,CAAC;AAAA,EAC9B;AAAA,EACA;AACF,MAA4B;AAC1B,6BACG,eAAe,UAAf,EAAwB,OAAO,SAC7B,SACH,CAAA;AAEJ;AAEO,MAAM,aAAa,MAAM;AACxB,QAAA,iBAAiB,WAAW,cAAc;AAEhD,MAAI,CAAC,gBAAgB;AACb,UAAA,IAAI,MAAM,iDAAiD;AAAA,EACnE;AAEO,SAAA;AACT;AChCa,MAAA,eAAe,CAAC,QAAgB;;AAC3C,QAAM,aAAW,SAAI,WAAJ,6BAAa,QAAO;AAC/B,QAAA,aAAa,OAAO,CAAC;AAC3B,MAAI,oBAAoB,CAAC;AAEzB,MAAI,YAAY;AACV,QAAA;AACF,YAAM,EAAE,OAAW,IAAA,IAAI,IAAI,GAAG;AAC9B,0BACE,kBAAkB,KAAK,MAAM,KAAK,mBAAmB,KAAK,MAAM;AAAA,IAAA,QAC5D;AAAA,IAAC;AAAA,EACX;AAEO,SAAA;AACT;ACZA,MAAM,mBAAmB,CAAC,GAAW,MAAc,KAAK,IAAI,IAAI,CAAC,KAAK;AAE/D,MAAM,uBAAuB,CAClC,oBACA,iBAAmC,WAChC;AACH,QAAM,CAAC,eAAe,gBAAgB,IAAI,SAAS,cAAc;AAEjE,YAAU,MAAM;AACd,qBAAiB,cAAc;AAAA,EAAA,GAC9B,CAAC,cAAc,CAAC;AAEnB,YAAU,MAAM;AACR,UAAA,EAAE,SAAS,gBAAoB,IAAA;AAErC,QAAI,CAAC,iBAAiB;AACpB;AAAA,IACF;AAEA,UAAM,qBAAmD,CAAC;AAAA,MACxD;AAAA,IAAA,MACI;AACJ,YAAM,EAAE,oBAAoB,kBAAkB,kBAAA,IAC5C;AACF,YAAM,EAAE,MAAM,aAAa,OAAO,iBAAiB;AACnD,YAAM,EAAE,MAAM,aAAa,OAAO,iBAAiB;AAEnD,UAAI,sBAAsB,GAAG;AAC3B,yBAAiB,cAAc;AAC/B;AAAA,MACF;AAGA,UAAI,sBAAsB,GAAG;AAC3B;AAAA,MACF;AAEM,YAAA,eAAe,iBAAiB,aAAa,WAAW;AACxD,YAAA,gBAAgB,iBAAiB,cAAc,YAAY;AAEjE,UAAI,CAAC,cAAc;AACjB,yBAAiB,MAAM;AACvB;AAAA,MACF;AAEA,UAAI,CAAC,eAAe;AAClB,yBAAiB,OAAO;AACxB;AAAA,MACF;AAEA,uBAAiB,cAAc;AAAA,IAAA;AAI3B,UAAA,WAAW,IAAI,qBAAqB,oBAAoB;AAAA,MAC5D,WAAW,CAAC,GAAG,CAAC;AAAA,IAAA,CACjB;AAED,aAAS,QAAQ,eAAe;AAEzB,WAAA,MAAM,SAAS;EAAW,GAChC,CAAC,oBAAoB,cAAc,CAAC;AAEhC,SAAA;AACT;AC9CA,MAAM,sBAAsB,CAC1B,SACW;AACX,SAAOC,0CAAY,6BAAM,UAAS,EAAE,EAAE,KAAK;AAC7C;AAEA,MAAM,iBAAiB,CACrB,WACW;AACX,SAAOA,0CAAY,iCAAQ,UAAS,EAAE,EAAE,KAAK;AAC/C;AAOA,MAAM,kBAA0D;AAAA,EAC9D,SAAS;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,MAAM;AAAA,IACJ,OAAO;AAAA,EACT;AAAA,EACA,cAAc;AAAA,IACZ,OAAO;AAAA,IACP,WAAW;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,EACT;AACF;AAEA,MAAM,eAAe,MACnB;AAAA,EAAC;AAAA,EAAA;AAAA,IACC,OAAM;AAAA,IACN,cAAW;AAAA,IACX,MAAK;AAAA,IACL,WAAU;AAAA,IACV,OAAO;AAAA,EAAA;AACT;AA6EK,SAAS,SAAoB;AAAA,EAClC;AAAA,EACA;AAAA,EACA,QAAQ,CAAC;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb,WAAW;AAAA,EACX,aAAa;AAAA,EACb,oBAAoB;AAAA,EACpB,UAAU;AAAA,EACV;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc,CAAC;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,eAAe;AAAA,EACf,GAAG;AACL,GAA6B;AACrB,QAAA,qBAAqB,OAA2B,IAAI;AAC1D,QAAM,iBAAiB;AAEvB,QAAM,QAAQ;AAAA,IACZ;AAAA,IACA,aAAa,UAAU;AAAA,EAAA;AAGnB,QAAA,eAAe,CAAC,cAAc,UAAU;AAC5C,QAAI,CAAC,cAAc;AACjB;AAAA,IACF;AAEA,UAAM,EAAE,IAAI,MAAM,WAAA,IAAe;AAEjC,yCAAW;AAKX,QAAI,MAAM;AACF,YAAA,gBAAgB,aAAa,IAAI;AACjC,YAAA,UAAU,gBAAgB,aAAa;AACtC,aAAA,KAAK,MAAM,UAAU,OAAO;AACnC;AAAA,IACF;AAGA,QAAI,MAAM,YAAY;AACpB,aAAO,SAAS,OAAO;AACvB;AAAA,IACF;AACA,QAAI,IAAI;AACN,qBAAe,KAAK,EAAE;AAAA,IACxB;AAAA,EAAA;AAGI,QAAA,eAAe,gBAAgB,OAAO;AAEhC,2CAAA,QAAQ,CAAC,WAAW,UAAU;AACxC,QAAI,QAAQ,GAAG;AACP,YAAA,YAAY,WAAW,QAAQ,CAAC;AACtC,gBAAU,iBACP,UAAU,gBAAgB,UAAU,gBAAgB,KACrD,UAAU,MAAM;AAAA,IAAA,OACb;AACL,gBAAU,gBAAgB;AAAA,IAC5B;AAAA,EAAA;AAGI,QAAA,iBAAiB,CACrB,MACA,iBACG;AACH,QAAI,KAAK,UAAU;AACV,aAAA;AAAA,IACT;AACM,UAAA,kBAAkB,aAAa,IAAI;AACzC,QAAI,mBAAmB,cAAc;AAC5B,aAAA,oBAAoB,aAAa,YAAY;AAAA,IACtD;AAAA,EAAA;AAGI,QAAA,gBAAgB,CAAC,KAAK,SAC1B,OAAO,QAAQ,YAAY,QAAQ,IAAI,IAAI,CAAC;AACxC,QAAA,gBAAgB,CAAC,KAAK,SAC1B,cAAc,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI;AAEzC,QAAM,mBACJ,yCAAY,OAAO,CAAC,SAAS,UAAU;;AAC/B,UAAA,YACJ,cAAc,MAAM,OAAO,MAAM,OAAK,WAAM,UAAN,mBAAa,WAAU;AAC/D,WAAO,UAAU;AAAA,EAAA,GAChB,OACH,cAAc,OAAO,MAAM,MAC3B,+BAAO;AAGP,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,UAAU;AAAA,MACV;AAAA,MACC,GAAG;AAAA,MAEH,UAAC,CAAA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA,MACI;AACJ,cAAM,UAAU,SAAS,kBAAkB,IAAI,kBAAkB;AACjE,cAAM,SACJ,UAAU,iBAAiB,MAAM,SAAS,MAAM,CAAC,IAAI;AAEvD,cAAM,QAAQ,iCAAQ;AAEtB,YAAI,CAAC,OAAO;AACH,iBAAA;AAAA,QACT;AAEA,cAAM,YAAY;AAAA,UAChB;AAAA,YACE,mBAAmB;AAAA,UACrB;AAAA,UACA,EAAE,kBAAkB,KAAK;AAAA,QAAA;AAG3B,cAAM,YAAY;AAAA,UAChB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,YAKD;AAAA,cACE,mBAAmB;AAAA,cACnB,MAAM;AAAA,YACR;AAAA;AAAA;AAAA;AAAA,YAIA,EAAE,kBAAkB,KAAK;AAAA,UAC3B;AAAA,QAAA;AAGF,YAAI,CAAC,SAAS;AACZ,iBAAO,SAAS,OACd,oBAAC,SAAI,WAAuB,GAAG,WAC5B,UACH,MAAA,CAAA;AAAA,QAEJ;AAEA,cAAM,iBAAiB,WACnB,qBACA,aACE,aACA;AAEN,cAAM,uBACH,eAAc,yCAAY,UAAS,KACnC,eAAe,YAAY,SAAS;AACjC,cAAA,cAAc,uBAAuB,OAAO;AAElD,cAAM,0BACJ,OAAO,WAAW,YAAY,OAAO,YACjC,OAAO,YACP;AAGJ,eAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAW,GAAG,YAAY,WAAW;AAAA,cACnC,MAAM;AAAA,YAAA,CACP;AAAA,YACA,GAAG;AAAA,YAEJ,UAAA;AAAA,cAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,OAAO,aAAa;AAAA,kBACnB,GAAG,qBAAqB;AAAA,oBACvB,cAAc,GAAG,2BAA2B,eAAe,MAAM,CAAC,KAChE,SAAS,eAAe,WAC1B;AAAA,oBACA,yBACE,cAAc,EAAE,uBAAuB;AAAA,kBAAA,CAC1C;AAAA,kBACD;AAAA,kBACA,MAAM,eAAe,MAAM;AAAA,kBAC3B,SAAS,MAAM;AACF;AAEP,wBAAA,WAAW,CAAC,QAAQ;AACd;oBACV;AAAA,kBACF;AAAA,kBACA,WACE,WACI,2CACA;AAAA,oBACE,aAAa,aAAa;AAAA,oBAC1B,cAAc,QAAQ,WAAW;AAAA,oBACjC;AAAA,sBACE,CAAC,cAAc,QAAQ,iBAAiB,CAAC,GACvC,cAAc,QAAQ,QAAQ,KAAK;AAAA,sBACrC,CAAC,cAAc,QAAQ,mBAAmB,CAAC,GACzC,CAAC,cAAc,QAAQ,QAAQ,KAAK,CAAC;AAAA,oBACzC;AAAA,kBACF;AAAA,kBAEN;AAAA,kBACA;AAAA,kBACA,QAAQ,cAAc,QAAQ,QAAQ;AAAA,kBACtC,OAAO,eAAe,MAAM;AAAA,kBAC5B,UAAU;AAAA,kBAET,UAAA;AAAA,oBAAA;AAAA,oBACA,CAAC,WAAW,CAAC,cAAc,QAAQ,QAAQ,KAC1C;AAAA,sBAAC;AAAA,sBAAA;AAAA,wBACC,OAAM,+BAAO,aAAY;AAAA,wBACzB,QAAO,+BAAO,UAAS;AAAA,wBACvB,SAAQ,+BAAO,WAAU;AAAA,wBACzB,WAAW;AAAA,0BACT;AAAA,0BACA,+BAAO;AAAA,0BACP,UAAU;AAAA,2BACV,+BAAO,gBAAe;AAAA,wBACxB;AAAA,sBAAA;AAAA,oBACF;AAAA,kBAAA;AAAA,gBAAA;AAAA,cAEJ;AAAA,cACA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,WAAW,GAAG,gCAAgC,6BAAM,WAAW;AAAA,oBAC7D,6BAA6B,UAAU;AAAA,oBACvC,uDACE;AAAA,kBAAA,CACH;AAAA,kBACD,KAAK;AAAA,kBACJ,GAAI,wBAAwB;AAAA,kBAE7B,UAAA;AAAA,oBAAA;AAAA,sBAAC;AAAA,sBAAA;AAAA,wBACC,WAAW,GAAG;AAAA,0BACZ,6BAA6B;AAAA,0BAC7B,wBAAwB;AAAA,wBAAA,CACzB;AAAA,wBAEC,WAAA,cAAc,CAAC,EAAE,MAAO,CAAA,GAAG,IAAI,CAAC,MAAM,UAAU;AAChD,gCAAM,EAAE,OAAO,YAAY,OAAAC,QAAO,cAAkB,IAAA;AAElD,iCAAA;AAAA,4BAAC;AAAA,4BAAA;AAAA,8BACC,mBACE,aAAa,eAAe,KAAK,KAAK;AAAA,8BAGvC,GAAI,CAAC,wBAAwB;AAAA,8BAE7B,UAAA;AAAA,gCACC,cAAA;AAAA,kCAAC;AAAA,kCAAA;AAAA,oCACC,IAAI,eAAe,KAAK;AAAA,oCACxB,MAAK;AAAA,oCACL,WAAW;AAAA,sCACT;AAAA,sCACA,EAAE,SAAS,UAAU,EAAE;AAAA,oCACzB;AAAA,oCAEC,UAAA;AAAA,kCAAA;AAAA,gCACH;AAAA,gCAEDA,OAAM,IAAI,CAACC,OAAMC,WAAU;AACpB,wCAAA;AAAA,oCACJ,WAAAC;AAAAA,oCACA;AAAA,oCACA;AAAA,oCACA;AAAA,oCACA;AAAA,oCACA;AAAA,oCACA,UAAAC;AAAAA,oCACA,SAAAC;AAAAA,kCACEJ,IAAAA;AAEE,wCAAA,oBAAoB,gBACtB,gBAAgBC,SAChBA;AAEJ,6DACG,MACC,EAAA,UAAA;AAAA,oCAAC;AAAA,oCAAA;AAAA,sCACE,GAAG,aAAa;AAAA,wCACf,MAAAD;AAAAA,wCACA,OAAO;AAAA,wCACP;AAAA,wCACA;AAAA,wCACA,UAAAG;AAAAA,wCACA,GAAI,UACA,EAAE,iBAAiB,WACnB,CAAC;AAAA,wCACL,SAAS,CAAC,MAAM;AAEd,4CAAE,eAAe;AACjBC;AAAAA,wCACF;AAAA,sCAAA,CACD;AAAA,sCACD,WAAW,GAAG,YAAYF,YAAW;AAAA,wCACnC,aACE,sBAAsB;AAAA,wCACxB,UAAU,UAAU,OAAO;AAAA,wCAC3B,QACE,UAAU,eAAeF,OAAM,YAAY;AAAA,wCAC7C;AAAA,wCACA,UAAAG;AAAAA,sCAAA,CACD;AAAA,sCAEA,UAAA;AAAA,wCAAAH,MAAK;AAAA,wCACL,CAAC,WACA,eAAeA,OAAM,YAAY,yBAC9B,cAAa,EAAA;AAAA,sCAAA;AAAA,oCAAA;AAAA,kCAAA,KA9BbC,MAiCT;AAAA,gCAAA,CAEH;AAAA,8BAAA;AAAA,4BAAA;AAAA,4BAnEI,SAAS,KAAK;AAAA,0BAAA;AAAA,wBAoErB,CAEH;AAAA,sBAAA;AAAA,oBACH;AAAA,oBACC,eAAe,YAAY,SAAS,KAClC,oBAAA,MAAA,EAAG,WAAU,WACX,UAAY,YAAA,IAAI,CAAC,YAAY,UAAU;AAChC,4BAAA,EAAE,WAAAC,YAAW,UAAU,QAAQ,IAAI,MAAM,SAAAE,SAC7C,IAAA;AAEF,4BAAM,gBAAgB,QAAQ;AAC9B,iDACG,MACC,EAAA,UAAA;AAAA,wBAAC;AAAA,wBAAA;AAAA,0BACE,GAAG,aAAa;AAAA,4BACf,MAAM;AAAA,4BACN,OAAO;AAAA,4BACP;AAAA,4BACA;AAAA,4BACA,SAAS,CAAC,MAAM;AACd,gCAAE,eAAe;AACjBA;AAAAA,4BACF;AAAA,0BAAA,CACD;AAAA,0BACD,WAAW,GAAG,YAAYF,YAAW;AAAA,4BACnC,aAAa,kBAAkB;AAAA,4BAC/B;AAAA,4BACA,QACE,UACA,eAAe,YAAY,YAAY;AAAA,0BAAA,CAC1C;AAAA,0BAEA,UAAA;AAAA,4BAAW,WAAA;AAAA,4BACX,gCAAa,cAAa,EAAA;AAAA,0BAAA;AAAA,wBAAA;AAAA,sBAC7B,EAAA,GAtBO,UAAU,aAAa,EAuBhC;AAAA,oBAEH,CAAA,GACH;AAAA,kBAAA;AAAA,gBAAA;AAAA,cAEJ;AAAA,YAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MAGN;AAAA,IAAA;AAAA,EAAA;AAGN;AC9eA,MAAM,eAGF,CACF;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GACA,QACG;;AACG,QAAA,OAAO,MAAM,QAAQ;AAC3B,QAAM,aAAW,kCAAM,WAAN,8BAAe,QAAO;AACjC,QAAA,aAAa,QAAQ,CAAC;AACtB,QAAA,gBAAgB,QAAQ,aAAa,IAAI;AAE/C,QAAM,UAAU;AAAA,IACd,IAAK,OAAO,QAAQ,eAAc,2BAAK,eAAe,gBAAe;AAAA;AAAA;AAAA;AAAA;AAAA,MAKnE,CAAC,OAAO,QAAQ,UAAU,GAAG;AAAA,IAC/B;AAAA,EAAA;AAGF,MAAI,UAAU;AAEN,UAAA,EAAE,OAAO,OAAW,IAAA;AAGxB,WAAA,oBAAC,OAAE,MAAY,iBAAc,QAAO,WAAuB,GAAG,SAC3D,SACH,CAAA;AAAA,EAEJ;AAEA,MAAI,YAAY;AACd,UAAM,EAAE,SAAS,UAAU,GAAG,sBAAsB;AAElD,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACC,GAAI,WAAW,YAAY;AAAA,UAC1B,KAAK,gBAAgB,aAAa;AAAA,UAClC,oBAAoB;AAAA,QACtB;AAAA,QACA;AAAA,QACC,GAAG;AAAA,QACH,GAAG;AAAA,QAEH;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AAEA,MAAI,UAAU;AAEV,WAAA,oBAAC,OAAE,MAAM,MAAM,WAAuB,GAAG,MAAO,GAAG,SAChD,SACH,CAAA;AAAA,EAEJ;AAEA,MAAI,YAAY;AAEZ,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,IAAI;AAAA,QACJ;AAAA,QACA;AAAA,QACC,GAAG;AAAA,QACH,GAAG;AAAA,QAEH;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AAEQ,UAAA;AAAA,IACN;AAAA,EAAA;AAEK,SAAA;AACT;AAEO,MAAM,WAAW;AAAA,EACtB;AACF;AChHY,IAAA,6BAAAG,cAAL;AACLA,YAAA,MAAO,IAAA;AACPA,YAAA,QAAS,IAAA;AACTA,YAAA,OAAQ,IAAA;AACRA,YAAA,QAAS,IAAA;AACTA,YAAA,OAAQ,IAAA;AACRA,YAAA,MAAO,IAAA;AACPA,YAAA,WAAY,IAAA;AAPFA,SAAAA;AAAA,GAAA,YAAA,CAAA,CAAA;AAUC,MAAA,aAAa,CAAC,SAAmB;AAC5C,UAAQ,MAAM;AAAA,IACZ,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AAEI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA;AAAA,QAEL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,IAEJ,KAAK;AACI,aAAA;AAAA;AAAA,QAEL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,IAEJ,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AAEI,aAAA;AAAA,EACX;AACF;AAEO,MAAM,UAAU;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACO,MAAMC,WAAS;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEa,MAAA,aAAa,CAAC,QAAgB,SACzC,QAAQ,GAAG,MAAM,QAAQ,IAAI;ACxD/B,SAAwB,YAAY,EAAE,iBAAiB,QAAQ,QAAQ;AAC/D,QAAA,0BAA0B,mCAAmC,MAAM;AAEnE,QAAA,qBAAqB,EAAE,MAAM,OAAgC;AACnE,MAAI,MAAM;AACR,uBAAmB,OAAO;AAC1B,uBAAmB,YAAY,IAAI,WAAW,oBAAoB,IAAI;AAAA,EAAA,OACjE;AACL,uBAAmB,aAAa,IAAI;AAAA,EACtC;AAGE,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWA;AAAAA,MACV,GAAG;AAAA,MACJ,OAAO;AAAA,QACL,YAAY,oCAAoC,wBAAwB,EAAE,KAAK,wBAAwB,IAAI;AAAA,MAC7G;AAAA,MAEC,UAAA,kBACC,YAAY,iBAAiB,IAAI,CAAC,EAAE,CAAC,EAAE,YAAA,IAEvC;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,eAAY;AAAA,UACZ,eAAY;AAAA,UAEZ,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,OAAM;AAAA,cACN,QAAO;AAAA,cACP,GAAE;AAAA,cACF,GAAE;AAAA,cACF,MAAK;AAAA,cACL,MAAK;AAAA,cACL,SAAQ;AAAA,YAAA;AAAA,UACV;AAAA,QAAA;AAAA,MACF;AAAA,IAAA;AAAA,EAAA;AAIR;ACzBO,MAAM,OAAO,CAAC;AAAA,EACnB;AAAA,EACA;AAAA,EACA,OAAO,SAAS;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AACF,MAAiB;AAEb,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW;AAAA,QACT;AAAA,QACA,WAAW,IAAI;AAAA,QACf;AAAA,MACF;AAAA,MAEC,UACC,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAK,OAAO,WAAW,QAAQ,IAAI,KAAK,KAAK;AAAA,UAC7C,WAAW;AAAA,UACX,KAAK;AAAA,UACL,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,OAAK;AAAA,QAAA;AAAA,MAAA,IAGP;AAAA,QAAC;AAAA,QAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,QAAA;AAAA,MACF;AAAA,IAAA;AAAA,EAAA;AAIR;ACtCO,MAAM,aAAa,CAAC;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,YAAY;AAAA,EACZ;AAAA,EACA,GAAG;AACL,MAAuB;AACjB,MAAA,CAAC,SAAiB,QAAA;AAEtB,QAAM,cAAc,MAAM;AACxB,YAAQ,OAAO;AAAA,MACb,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AAAA,MACL;AACS,eAAA;AAAA,IACX;AAAA,EAAA;AAGF,QAAM,SAAS;AAAA,IACb;AAAA,IACA;AAAA,IACA,YAAY;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAGF,QAAM,SAAS,GAAG,WAAW,mBAAmB,UAAU,aAAa;AAEvE,QAAM,gBAAgB,MAAM,SAAS,QAAQ,QAAQ,EAAE;AAAA,IAAO,CAAC,UAC7D,MAAM,eAAe,KAAK;AAAA,EAAA;AAGtB,QAAA,OAAO,UAAU,OAAO;AACxB,QAAA,gBAAgB,cAAc,SAAS;AAG3C,SAAA,oBAAC,MAAK,EAAA,WAAW,QAAS,GAAG,MAC1B,UAAc,cAAA,IAAI,CAAC,OAAO,UAAU;AACnC,QAAI,CAAC,OAAO;AACH,aAAA;AAAA,IACT;AAGE,WAAA,qBAAC,MAAG,EAAA,WAAW,QACZ,UAAA;AAAA,MAAA;AAAA,MACA,aAAa,UAAU,iBACtB;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,WAAU;AAAA,UACV,eAAY;AAAA,UACZ,OAAO;AAAA,UACP,QAAQ;AAAA,QAAA;AAAA,MACV;AAAA,IATwB,EAAA,GAAA,cAAc,KAAK,EAW/C;AAAA,EAEH,CAAA,EACH,CAAA;AAEJ;AC1EA,MAAM,qBAAqB,CAAC;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AACF,MACE;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,SACI,CAAC,iBAAiB,oBAAoB,IACtC;AAAA,EACJ;AACF;AAEK,MAAM,mBAAmB,CAAC;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAA6B;AAEzB,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,OAAM;AAAA,MACN,WAAW,mBAAmB;AAAA,QAC5B;AAAA,QACA;AAAA,QACA;AAAA,MAAA,CACD;AAAA,MACA,GAAG;AAAA,IAAA;AAAA,EAAA;AAGV;AC3BA,MAAM,gBAAgB;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE,IAAI,CAAC,SAAS,KAAK,YAAa,CAAA;AAE3B,SAAS,UAAU;AAAA,EACxB;AAAA,EACA,OAAO;AAAA,EACP,WAAW;AAAA,EACX,YAAY;AACd,GAAgC;AAC9B,QAAM,YAAY,CAAC,cAAc,SAAS,KAAK,aAAa;AAG1D,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,SAAS,YAAY,aAAa,YAAY;AAAA,MAC9C;AAAA,MACA;AAAA,MAEC,UAAY,YAAA;AAAA,IAAA;AAAA,EAAA;AAGnB;AC/CO,SAAS,kBAAkB,EAAE,UAAU,OAAO,OAAO,YAAY,MAAM;AAE1E,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA,OAAO,iBAAiB;AAAA,QACxB;AAAA,QACA;AAAA,MACF;AAAA,MAEC;AAAA,IAAA;AAAA,EAAA;AAGP;ACdA,MAAM,aAAa;AAAA,EACjB,OAAO;AAAA,EACP,SAAS;AACX;AAEA,MAAM,UAAU;AAET,MAAM,oBAAoB;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEO,MAAM,wBAAwB,CAAC,EAAE,OAAA,MACtC;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SACI;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,IAEF;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AACF;AAEK,MAAM,UAAU;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEO,MAAM,aAAa,CAAC,EAAE,WAAW,QACtC,MAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb,WAAW;AACb;AAEK,MAAM,iBAAiB,CAAC,EAAE,eAAe,WAAW,QACzD,MAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,iBAAiB;AAAA,EACjB,aACE;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW,SAAS;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACF,WAAW;AACb;AAEK,MAAM,oBAAoB,CAAC,EAAE,UAAA,MAClC;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AACf;AAEK,MAAM,SAAS,CAAC,EAAE,QAAA,MACvB;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AACb;AAEK,MAAM,SAAS,CAAC,EAAE,UAAA,MACvB;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AACf;AAEK,MAAM,iBAAiB,CAAC,EAAE,cAAA,MAC/B;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,iBAAiB;AACnB;AAEK,MAAM,UAAU;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AClKA,MAAM,YAAY;AAClB,MAAM,SAAS;AACf,MAAM,cAAc;AA0Bb,SAAS,gBAAgB;AAAA,EAC9B;AAAA,EACA,QAAQ;AAAA,EACR;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,sBAAsB;AAAA,EACtB;AAAA,EACA,cAAc,wBAAwB,mBAAmB;AAAA,EACzD;AAAA,EACA,cAAc;AAChB,GAAU;AACR,QAAM,iBAAiB;AAEjB,QAAA,+BAA+B,yBACjC,0BAA0B,IAC1B;AAEJ,QAAM,wBAAwB,MAAM;AAClC,QAAI,YAAY;AACR,YAAA,gBAAgB,aAAa,UAAU;AACvC,YAAA,UAAU,gBAAgB,aAAa;AACtC,aAAA,KAAK,YAAY,UAAU,OAAO;AACzC;AAAA,IACF;AAEA,QAAI,aAAa;AACf,qBAAe,KAAK,YAAY,EAAE,MAAM,YAAY,GAAG,SAAS,CAAC;AAAA,IACnE;AAAA,EAAA;AAGI,QAAA,eAAe,CAAC,iBAAgC;AACpD,QAAI,iBAAiB,aAAa;AACf;AAEjB,UAAI,8BAA8B;AACO;AAAA,MAAA,OAClC;AACiB;MACxB;AAAA,IAAA,WACS,gBAAgB,iBAAiB,QAAQ;AAC3C,aAAA,KAAK,cAAc,QAAQ;AAAA,IACpC;AAAA,EAAA;AAGF,SACG,oBAAA,WAAA,EAAU,UAAU,cAAc,QAChC,UAAC,CAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,QAAAC;AAAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,MACI;AACJ,UAAM,QAA+B;AAAA,MACnC;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM,iBAAiB;AAAA,QACvB,SAAS;AAAA,QACT,aACE;AAAA,QACF,UAAU;AAAA,MACZ;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM,WAAW;AAAA,QACjB,aACE;AAAA,QACF,UAAU;AAAA,MACZ;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM,SAAS;AAAA,QACf,aACE;AAAA,QACF,UAAU;AAAA,MACZ;AAAA,IAAA;AAGF,QAAI,8BAA8B;AAChC,YAAM,KAAK;AAAA,QACT,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM,cAAc,SAAS;AAAA,QAC7B,aAAa,sBAAsB,mBAAmB;AAAA,QACtD,UAAU;AAAA,MAAA,CACX;AAAA,IACH;AAEA,QAAI,aAAa;AACf,YAAM,KAAK;AAAA,QACT,OAAO,+BACH,uBACA;AAAA,QACJ,MAAM;AAAA,QACN,WAAW,+BAA+B,YAAY;AAAA,QACtD,aAAa;AAAA,UACX,gCAAgC;AAAA,UAChC;AAAA,QACF;AAAA,QACA,UAAU,oBAAC,QAAO,EAAA,SAAQ,OAAM,UAAO,WAAA;AAAA,MAAA,CACxC;AAAA,IAAA,OACI;AACC,YAAA;AAAA,QACJ;AAAA,UACE,OAAO;AAAA,UACP,UAAU;AAAA,UACV,OAAO;AAAA,UACP,aAEI,qBAAA,UAAA,EAAA,UAAA;AAAA,YAAC,oBAAA,UAAA,EAAO,WAAU,oBAAmB,UAErC,sCAAA;AAAA,YAAU;AAAA,YAAI;AAAA,UAAA,GAGhB;AAAA,QAEJ;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,UAAU;AAAA,UACV,OAAO;AAAA,UACP,aACI,qBAAA,UAAA,EAAA,UAAA;AAAA,YAAA;AAAA,YAC2C;AAAA,YAC1C,oBAAA,UAAA,EAAO,WAAU,oBAAmB,UAErC,iDAAA;AAAA,YAAS;AAAA,UAAA,GAEX;AAAA,QAEJ;AAAA,MAAA;AAAA,IAEJ;AAGE,WAAA,qBAAC,OAAI,EAAA,WAAW,mBACd,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACE,GAAG,qBAAqB;AAAA,YACvB,cAAc,YAAYA,UAAS,eAAe,WAAW;AAAA,UAAA,CAC9D;AAAA,UACA,GAAG,cAAc;AAAA,UAClB,OAAO;AAAA,UACP,WAAW,sBAAsB,EAAE,QAAAA,SAAQ;AAAA,UAC3C,SAAS,MAAM,WAAW;AAAA,UAG1B,UAAA;AAAA,YAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAW,GAAG,eAAe,WAAWA,WAAU,WAAW;AAAA,gBAC7D,WAAU;AAAA,gBACV,MAAK;AAAA,cAAA;AAAA,YACP;AAAA,YACA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAW,GAAG,eAAe,WAAW,CAACA,WAAU,WAAW;AAAA,gBAC9D,WAAU;AAAA,gBACV,MAAK;AAAA,cAAA;AAAA,YACP;AAAA,YACA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,WAAU;AAAA,gBACV,qBAAkB;AAAA,gBACnB,UAAA;AAAA,cAAA;AAAA,YAED;AAAA,UAAA;AAAA,QAAA;AAAA,MACF;AAAA,MACCA,WACC;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAW,GAAG,SAAS;AAAA,YACrB,2BAA2B,UAAU;AAAA,UAAA,CACtC;AAAA,UAED,UAAC,oBAAA,MAAA,EAAG,WAAU,iFACX,UAAM,MAAA;AAAA,YACL,CACE;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA,UAAU;AAAA,cACV;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,eAEF,UACG;AACH,oBAAM,gBAAgB,UAAU;AAC1B,oBAAA,YAAY,OAAO,MAAM;AACzB,oBAAA,iBACJ,QAAQ,OAAO,aAAa;AAG5B,qBAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBAEC,WAAW,WAAW,EAAE,WAAW,SAAS;AAAA,kBAE5C,UAAA;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACE,GAAG,aAAa,EAAE,OAAO,MAAM,QAAQ,QAAQ;AAAA,sBAChD,UAAU;AAAA,sBACV,WAAW,eAAe;AAAA,wBACxB;AAAA,wBACA;AAAA,wBACA;AAAA,sBAAA,CACD;AAAA,sBAED,UAAA;AAAA,wBAAC,qBAAA,QAAA,EAAK,WAAU,cAAa,UAAA;AAAA,0BAAA;AAAA,0BAAU;AAAA,wBAAA,GAAM;AAAA,wBAC5C,YACC;AAAA,0BAAC;AAAA,0BAAA;AAAA,4BACC,MAAM;AAAA,4BACN,WAAW,OAAO,EAAE,SAAS;AAAA,0BAAA;AAAA,wBAC/B;AAAA,6CAGD,OACC,EAAA,UAAA;AAAA,0BAAC,oBAAA,OAAA,EAAI,WAAU,6CACb,UAAA;AAAA,4BAAC;AAAA,4BAAA;AAAA,8BACC,WAAW,kBAAkB;AAAA,gCAC3B;AAAA,8BAAA,CACD;AAAA,8BAED,UAAA;AAAA,gCAAC,oBAAA,QAAA,EAAK,WAAU,kBACb,UACH,OAAA;AAAA,gCACC,SACC,oBAAC,QAAK,EAAA,WAAW,SAAU,UAAM,OAAA;AAAA,8BAAA;AAAA,4BAAA;AAAA,0BAAA,GAGvC;AAAA,0BACA,oBAAC,OAAE,WAAW,OAAO,EAAE,WAAW,GAC/B,UACH,aAAA;AAAA,0BAEC,YACC;AAAA,4BAAC;AAAA,4BAAA;AAAA,8BACC,WAAW;AAAA,gCACT;AAAA,gCACA,iBACI,eAAe,EAAE,cAAe,CAAA,IAChC;AAAA,8BACN;AAAA,8BAEC;AAAA,4BAAA;AAAA,0BACH;AAAA,wBAAA,GAEJ;AAAA,sBAAA;AAAA,oBAAA;AAAA,kBACF;AAAA,gBAAA;AAAA,gBApDK;AAAA,cAAA;AAAA,YAuDX;AAAA,UAAA,GAEJ;AAAA,QAAA;AAAA,MACF;AAAA,IAEJ,EAAA,CAAA;AAAA,EAGN,EAAA,CAAA;AAEJ;AAEA,SAAS,iBAAiB,SAAkB;AAC1C,QAAM,MAAM,IAAI,IAAI,SAAS,aAAa,CAAC;AAC3C,QAAM,SAAS,IAAI,gBAAgB,EAAE,MAAM,MAAO,CAAA;AAElD,MAAI,QAAS,QAAO,IAAI,WAAW,OAAO;AAEtC,MAAA,SAAS,OAAO;AAEpB,SAAO,IAAI;AACb;AAEA,SAAS,sBAAsB,OAAe;AAC5C,MAAI,QAAQ,GAAG;AACN,WAAA;AAAA,EACT;AAEA,SACI,qBAAA,UAAA,EAAA,UAAA;AAAA,IAAA;AAAA,wBAEC,MAAG,EAAA;AAAA,IACH,UAAU,IAAI,yCAAyC;AAAA,wBACvD,MAAG,EAAA;AAAA,IAAE;AAAA,wBAEL,MAAG,EAAA;AAAA,IAAE;AAAA,EAER,EAAA,CAAA;AAEJ;AAEA,SAAS,cAAc,WAAoB;AACzC,QAAM,MAAM,IAAI,IAAI,YAAY,yBAAyB;AACnD,QAAA,SAAS,IAAI,gBAAgB;AAAA,IACjC,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,EAAA,CACf;AAED,MAAI,UAAW,QAAO,IAAI,SAAS,SAAS;AAExC,MAAA,SAAS,OAAO;AAEpB,SAAO,IAAI;AACb;AAEA,SAAS,sBAAsB,SAAkB,OAAe;AAC9D,MAAI,SAAS;AACJ,WAAA;AAAA,EACT;AACA,MAAI,UAAU,GAAG;AACR,WAAA;AAAA,EACT;AACO,SAAA;AACT;AAEO,SAAS,wBAAwB,qBAA6B;AACnE,SAAO,sBAAsB;AAC/B;AC1WO,SAAS,aAAa;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb,QAAQ,CAAC;AACX,GAAsB;AACpB,MAAI,CAAC,MAAM;AACF,WAAA;AAAA,EACT;AAEM,QAAA,EAAE,WAAW,OAAO,IAAI,QAAQ,GAAG,IAAI,QAAQ;AAErD,QAAM,kBAAkB;AAAA,IACtB;AAAA,MACE,OAGI,qBAAA,UAAA,EAAA,UAAA;AAAA,QAAA,oBAAC,UAAO,EAAA,kBAAgB,MAAM,WAAU,eACrC,UACH,MAAA;AAAA,4BACC,SAAM,EAAA,mBAAiB,OAAO,WAAU,QACtC,UACH,OAAA;AAAA,MAAA,GACF;AAAA,MAEF,IAAI;AAAA,IACN;AAAA,IACA,GAAG;AAAA,IACH;AAAA,MACE,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,IACb;AAAA,EAAA,EACA,OAAO,OAAO;AAGd,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA,SAAO;AAAA,MACP,SAAO;AAAA,MACP,SAAQ;AAAA,MACR,QAAQ;AAAA,QACN,WAAW,QAAQ,KAAK;AAAA,QACxB,WACE;AAAA,QACF,OACE;AAAA,UAAC;AAAA,UAAA;AAAA,YACC;AAAA,YACA,UAAU;AAAA,YACV,WAAU;AAAA,UAAA;AAAA,QACZ;AAAA,MAEJ;AAAA,MACA,MAAM;AAAA,QACJ,WAAW;AAAA,MACb;AAAA,MACA,OAAO;AAAA,IAAA;AAAA,EAAA;AAGb;","x_google_ignoreList":[26]}